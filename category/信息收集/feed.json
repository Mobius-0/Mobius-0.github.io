{
    "version": "https://jsonfeed.org/version/1",
    "title": "Khala • All posts by \"信息收集\" category",
    "description": "GLHF",
    "home_page_url": "https://mobius-0.github.io",
    "items": [
        {
            "id": "https://mobius-0.github.io/security/WebNote/information%20gathering/Social%20Engineering/",
            "url": "https://mobius-0.github.io/security/WebNote/information%20gathering/Social%20Engineering/",
            "title": "社会工程学",
            "date_published": "2022-11-26T02:57:49.000Z",
            "content_html": "<h1 id=\"企业信息收集\"><a class=\"anchor\" href=\"#企业信息收集\">#</a> 企业信息收集</h1>\n<p>一些网站如天眼查等，可以提供企业关系挖掘、工商信息、商标专利、企业年报等信息查询，可以提供企业的较为细致的信息。</p>\n<p>公司主站中会有业务方向、合作单位等信息。</p>\n<h1 id=\"人员信息收集\"><a class=\"anchor\" href=\"#人员信息收集\">#</a> 人员信息收集</h1>\n<p>针对人员的信息收集考虑对目标重要人员、组织架构、社会关系的收集和分析。其中重要人员主要指高管、系统管理员、开发、运维、财务、人事、业务人员的个人电脑。</p>\n<p>人员信息收集较容易的入口点是网站，网站中可能包含网站的开发、管理维护等人员的信息。从网站联系功能中和代码的注释信息中都可能得到的所有开发及维护人员的姓名和邮件地址及其他联系方式。</p>\n<p>在获取这些信息后，可以在 Github/Linkedin 等社交、招聘网站中进一步查找这些人在互联网上发布的与目标站点有关的一切信息，分析并发现有用的信息。</p>\n<p>此外，可以对获取到的邮箱进行密码爆破的操作，获取对应的密码。</p>\n<h1 id=\"钓鱼\"><a class=\"anchor\" href=\"#钓鱼\">#</a> 钓鱼</h1>\n<p>基于之前收集到的信息，可以使用 Office/CHM/RAR/EXE/ 快捷方式等文件格式制作钓鱼邮件发送至目标，进一步收集信息。</p>\n<p>其中 Office 可以使用 Office 漏洞、宏、OLE 对象、PPSX 等方式构造利用文件。</p>\n<p>Exe 可以使用特殊的 Unicode 控制字符如 RLO (Right-to-Left Override) 等来构建容易混淆的文件名。</p>\n<p>RAR 主要是利用自解压等方式来构建恶意文件，同样加密的压缩包也在一定程度上可以逃逸邮件网关的检测。</p>\n<p>如果前期信息收集获取到了运维等人员的邮箱，可以使用运维人员的邮箱发送，如果未收集到相关的信息，可以使用伪造发送源的方式发送邮件。</p>\n<p>需要注意的是，钓鱼测试也需要注意合规问题，不能冒充监管单位、不能发送违法违规信息。具体可以参考《中华人民共和国电信条例》、《中华人民共和国互联网电子邮件服务管理办法》等法律法规。</p>\n<h1 id=\"其他信息\"><a class=\"anchor\" href=\"#其他信息\">#</a> 其他信息</h1>\n<p>公司的公众号、企业号、网站，员工的网盘、百度文库等可能会存在一些敏感信息，如 VPN / 堡垒机账号、TeamViewer 账号、网络设备默认口令、服务器默认口令等。</p>\n<h1 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy45MXJpLm9yZy8xNTQ0MS5odG1s\">端口渗透总结</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXBlci5zZWVidWcub3JnLzQwOQ==\">未授权访问总结</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvYWF0TmpleTNzd1p6N1Q0WXdfTHFzUQ==\">红队测试之邮箱打点</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvZHFudGpSTGdjT0QzRDJiaTFvREZBdw==\">邮件伪造之 SPF 绕过的 5 种思路</span></li>\n</ul>\n",
            "tags": [
                "信息收集",
                "社会工程学"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/information%20gathering/search%20engine/",
            "url": "https://mobius-0.github.io/security/WebNote/information%20gathering/search%20engine/",
            "title": "搜索引擎利用",
            "date_published": "2022-11-26T02:10:49.000Z",
            "content_html": "<p>恰当地使用搜索引擎（Google/Bing/Yahoo/Baidu 等）可以获取目标站点的较多信息。</p>\n<h1 id=\"搜索引擎处理流程\"><a class=\"anchor\" href=\"#搜索引擎处理流程\">#</a> 搜索引擎处理流程</h1>\n<ul>\n<li>\n<p>数据预处理</p>\n<ul>\n<li>长度截断</li>\n<li>大小写转化</li>\n<li>去标点符号</li>\n<li>简繁转换</li>\n<li>数字归一化，中文数字、阿拉伯数字、罗马字</li>\n<li>同义词改写</li>\n<li>拼音改写</li>\n</ul>\n</li>\n<li>\n<p>处理</p>\n<ul>\n<li>分词</li>\n<li>关键词抽取</li>\n<li>非法信息过滤</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"搜索技巧\"><a class=\"anchor\" href=\"#搜索技巧\">#</a> 搜索技巧</h1>\n<ul>\n<li>\n<p>site:www.hao123.com</p>\n<ul>\n<li>返回此目标站点被搜索引擎抓取收录的所有内容</li>\n</ul>\n</li>\n<li>\n<p>site:www.hao123.com keyword</p>\n<ul>\n<li>返回此目标站点被搜索引擎抓取收录的包含此关键词的所有页面</li>\n<li>此处可以将关键词设定为网站后台，管理后台，密码修改，密码找回等</li>\n</ul>\n</li>\n<li>\n<p>site:www.hao123.com inurl:admin.php</p>\n<ul>\n<li>返回目标站点的地址中包含 admin.php 的所有页面，可以使用 admin.php/manage.php 或者其他关键词来寻找关键功能页面</li>\n</ul>\n</li>\n<li>\n<p>link:www.hao123.com</p>\n<ul>\n<li>返回所有包含目标站点链接的页面，其中包括其开发人员的个人博客，开发日志，或者开放这个站点的第三方公司，合作伙伴等</li>\n</ul>\n</li>\n<li>\n<p>related:www.hao123.com</p>\n<ul>\n<li>返回所有与目标站点” 相似” 的页面，可能会包含一些通用程序的信息等</li>\n</ul>\n</li>\n<li>\n<p>intitle:&quot;500 Internal Server Error&quot; &quot;server at&quot;</p>\n<ul>\n<li>搜索出错的页面</li>\n</ul>\n</li>\n<li>\n<p>inurl:&quot;nph-proxy.cgi&quot; &quot;Start browsing&quot;</p>\n<ul>\n<li>查找代理服务器</li>\n</ul>\n</li>\n</ul>\n<p>除了以上的关键字，还有 allintile /allinurl/allintext /inanchor/intext /filetype/info /numberange/cache 等。</p>\n<h2 id=\"通配符\"><a class=\"anchor\" href=\"#通配符\">#</a> 通配符</h2>\n<ul>\n<li><code>*</code>  代表某一个单词</li>\n<li>OR 或者 | 代表逻辑或</li>\n<li>单词前跟  <code>+</code>  表强制查询</li>\n<li>单词前跟  <code>-</code>  表排除对应关键字</li>\n<li><code>&quot;</code>  强调关键字</li>\n</ul>\n<h2 id=\"tips\"><a class=\"anchor\" href=\"#tips\">#</a> tips</h2>\n<ul>\n<li>查询不区分大小写</li>\n<li>括号会被忽略</li>\n<li>默认用 and 逻辑进行搜索</li>\n</ul>\n<h1 id=\"快照\"><a class=\"anchor\" href=\"#快照\">#</a> 快照</h1>\n<p>搜索引擎的快照中也常包含一些关键信息，如程序报错信息可以会泄漏网站具体路径，或者一些快照中会保存一些测试用的测试信息，比如说某个网站在开发了后台功能模块的时候，还没给所有页面增加权限鉴别，此时被搜索引擎抓取了快照，即使后来网站增加了权限鉴别，但搜索引擎的快照中仍会保留这些信息。</p>\n<p>另外也有专门的站点快照提供快照功能，如 Wayback Machine 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcmNoaXZlLm9yZy8=\">Archive.org</span> 等。</p>\n<h1 id=\"github\"><a class=\"anchor\" href=\"#github\">#</a> Github</h1>\n<p>在 Github 中，可能会存在源码泄露、AccessKey 泄露、密码、服务器配置泄露等情况，常见的搜索技巧有：</p>\n<ul>\n<li><code>@example.com password/pass/pwd/secret/credentials/token</code></li>\n<li><code>@example.com username/user/key/login/ftp/</code></li>\n<li><code>@example.com config/ftp/smtp/pop</code></li>\n<li><code>@example.com security_credentials/connetionstring</code></li>\n<li><code>@example.com JDBC/ssh2_auth_password/send_keys</code></li>\n</ul>\n",
            "tags": [
                "信息收集",
                "搜索"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/information%20gathering/website%20information/",
            "url": "https://mobius-0.github.io/security/WebNote/information%20gathering/website%20information/",
            "title": "站点信息",
            "date_published": "2022-11-26T02:03:09.000Z",
            "content_html": "<ul>\n<li>\n<p>判断网站操作系统</p>\n<ul>\n<li>Linux 大小写敏感</li>\n<li>Windows 大小写不敏感</li>\n</ul>\n</li>\n<li>\n<p>扫描敏感文件</p>\n<ul>\n<li>robots.txt</li>\n<li>crossdomain.xml</li>\n<li>sitemap.xml</li>\n<li>xx.tar.gz</li>\n<li>xx.bak 等</li>\n</ul>\n</li>\n<li>\n<p>确定网站采用的语言</p>\n<ul>\n<li>如 PHP / Java / Python 等</li>\n<li>找后缀，比如 php/asp/jsp</li>\n</ul>\n</li>\n<li>\n<p>前端框架</p>\n<ul>\n<li>如 jQuery / BootStrap / Vue / React / Angular 等</li>\n<li>查看源代码</li>\n</ul>\n</li>\n<li>\n<p>中间服务器</p>\n<ul>\n<li>如 Apache / Nginx / IIS 等</li>\n<li>查看 header 中的信息</li>\n<li>根据报错信息判断</li>\n<li>根据默认页面判断</li>\n</ul>\n</li>\n<li>\n<p>Web 容器服务器</p>\n<ul>\n<li>如 Tomcat / Jboss / Weblogic 等</li>\n</ul>\n</li>\n<li>\n<p>后端框架</p>\n<ul>\n<li>根据 Cookie 判断</li>\n<li>根据 CSS / 图片等资源的 hash 值判断</li>\n<li>根据 URL 路由判断\n<ul>\n<li>如 wp-admin</li>\n</ul>\n</li>\n<li>根据网页中的关键字判断</li>\n<li>根据响应头中的 X-Powered-By</li>\n</ul>\n</li>\n<li>\n<p>CDN 信息</p>\n<ul>\n<li>常见的有 Cloudflare、yunjiasu</li>\n</ul>\n</li>\n<li>\n<p>探测有没有 WAF，如果有，什么类型的</p>\n<ul>\n<li>有 WAF，找绕过方式</li>\n<li>没有，进入下一步</li>\n</ul>\n</li>\n<li>\n<p>扫描敏感目录，看是否存在信息泄漏</p>\n<ul>\n<li>扫描之前先自己尝试几个的 url，人为看看反应</li>\n</ul>\n</li>\n<li>\n<p>使用爬虫爬取网站信息</p>\n</li>\n<li>\n<p>拿到一定信息后，通过拿到的目录名称，文件名称及文件扩展名了解网站开发人员的命名思路，确定其命名规则，推测出更多的目录及文件名</p>\n</li>\n<li>\n<p>常见入口目标</p>\n<ul>\n<li>关注度低的系统</li>\n<li>业务线较长的系统</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "网站",
                "信息收集",
                "搜索"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/information%20gathering/Ports/",
            "url": "https://mobius-0.github.io/security/WebNote/information%20gathering/Ports/",
            "title": "端口信息",
            "date_published": "2022-11-25T09:02:36.000Z",
            "content_html": "<h1 id=\"常见端口及其脆弱点\"><a class=\"anchor\" href=\"#常见端口及其脆弱点\">#</a> 常见端口及其脆弱点</h1>\n<ul>\n<li>\n<p>FTP (21/TCP)</p>\n<ul>\n<li>默认用户名密码  <code>anonymous:anonymous</code></li>\n<li>暴力破解密码</li>\n<li>VSFTP 某版本后门</li>\n</ul>\n</li>\n<li>\n<p>SSH (22/TCP)</p>\n<ul>\n<li>部分版本 SSH 存在漏洞可枚举用户名</li>\n<li>暴力破解密码</li>\n</ul>\n</li>\n<li>\n<p>Telent (23/TCP)</p>\n<ul>\n<li>暴力破解密码</li>\n<li>嗅探抓取明文密码</li>\n</ul>\n</li>\n<li>\n<p>SMTP (25/TCP)</p>\n<ul>\n<li>无认证时可伪造发件人</li>\n</ul>\n</li>\n<li>\n<p>DNS (53/UDP &amp; 53/TCP)</p>\n<ul>\n<li>\n<p>域传送漏洞</p>\n</li>\n<li>\n<p>DNS 劫持</p>\n</li>\n<li>\n<p>DNS 缓存投毒</p>\n</li>\n<li>\n<p>DNS 欺骗</p>\n</li>\n<li>\n<p>SPF / DMARC Check</p>\n</li>\n<li>\n<p>DDoS</p>\n<ul>\n<li>\n<p>DNS Query Flood</p>\n</li>\n<li>\n<p>DNS 反弹</p>\n</li>\n</ul>\n</li>\n<li>\n<p>DNS 隧道</p>\n</li>\n</ul>\n</li>\n<li>\n<p>DHCP 67/68</p>\n<ul>\n<li>劫持 / 欺骗</li>\n</ul>\n</li>\n<li>\n<p>TFTP (69/TCP)</p>\n</li>\n<li>\n<p>HTTP (80/TCP)</p>\n</li>\n<li>\n<p>Kerberos (88/TCP)</p>\n<ul>\n<li>主要用于监听 KDC 的票据请求</li>\n<li>用于进行黄金票据和白银票据的伪造</li>\n</ul>\n</li>\n<li>\n<p>POP3 (110/TCP &amp; 995/TCP)</p>\n<ul>\n<li>爆破</li>\n</ul>\n</li>\n<li>\n<p>RPC (135/TCP)</p>\n<ul>\n<li>wmic 服务利用</li>\n</ul>\n</li>\n<li>\n<p>NetBIOS (137/UDP &amp; 138/UDP)</p>\n<ul>\n<li>未授权访问</li>\n<li>弱口令</li>\n</ul>\n</li>\n<li>\n<p>NetBIOS / Samba (139/TCP)</p>\n<ul>\n<li>未授权访问</li>\n<li>弱口令</li>\n</ul>\n</li>\n<li>\n<p>IMAP (143/TCP &amp; 993/TCP)</p>\n</li>\n<li>\n<p>SNMP (161/TCP &amp; 161/UDP)</p>\n<ul>\n<li>Public 弱口令</li>\n</ul>\n</li>\n<li>\n<p>LDAP (389/TCP)</p>\n<ul>\n<li>用于域上的权限验证服务</li>\n<li>匿名访问</li>\n<li>注入</li>\n</ul>\n</li>\n<li>\n<p>HTTPS (443/TCP)</p>\n</li>\n<li>\n<p>SMB (445/TCP)</p>\n<ul>\n<li>Windows 协议簇，主要功能为文件共享服务</li>\n<li><code>net use \\\\192.168.1.1 /user:xxx\\username password</code></li>\n</ul>\n</li>\n<li>\n<p>Linux Rexec (512/TCP &amp; 513/TCP &amp; 514/TCP)</p>\n<ul>\n<li>弱口令</li>\n</ul>\n</li>\n<li>\n<p>Rsync (873/TCP)</p>\n<ul>\n<li>未授权访问</li>\n</ul>\n</li>\n<li>\n<p>RPC (1025/TCP)</p>\n<ul>\n<li>NFS 匿名访问</li>\n</ul>\n</li>\n<li>\n<p>Java RMI (1090/TCP &amp; 1099/TCP)</p>\n<ul>\n<li>反序列化远程命令执行漏洞</li>\n</ul>\n</li>\n<li>\n<p>MSSQL (1433/TCP)</p>\n<ul>\n<li>弱密码</li>\n<li>差异备份 GetShell</li>\n<li>SA 提权</li>\n</ul>\n</li>\n<li>\n<p>Oracle (1521/TCP)</p>\n<ul>\n<li>弱密码</li>\n</ul>\n</li>\n<li>\n<p>NFS (2049/TCP)</p>\n<ul>\n<li>权限设置不当</li>\n<li><code>showmount &lt;host&gt;</code></li>\n</ul>\n</li>\n<li>\n<p>ZooKeeper (2171/TCP &amp; 2375/TCP)</p>\n<ul>\n<li>无身份认证</li>\n</ul>\n</li>\n<li>\n<p>Docker Remote API (2375/TCP)</p>\n<ul>\n<li>未限制 IP / 未启用 TLS 身份认证</li>\n<li><code>http://docker.addr:2375/version</code></li>\n</ul>\n</li>\n<li>\n<p>MySQL (3306/TCP)</p>\n<ul>\n<li>弱密码</li>\n<li>日志写 WebShell</li>\n<li>UDF 提权</li>\n<li>MOF 提权</li>\n</ul>\n</li>\n<li>\n<p>RDP / Terminal Services (3389/TCP)</p>\n<ul>\n<li>弱密码</li>\n</ul>\n</li>\n<li>\n<p>Postgres (5432/TCP)</p>\n<ul>\n<li>弱密码</li>\n<li>执行系统命令</li>\n</ul>\n</li>\n<li>\n<p>VNC (5900/TCP)</p>\n<ul>\n<li>弱密码</li>\n</ul>\n</li>\n<li>\n<p>CouchDB (5984/TCP)</p>\n<ul>\n<li>未授权访问</li>\n</ul>\n</li>\n<li>\n<p>WinRM (5985/TCP)</p>\n<ul>\n<li>Windows 对 WS-Management 的实现</li>\n<li>在 Vista 上需要手动启动，在 Windows Server 2008 中服务是默认开启的</li>\n</ul>\n</li>\n<li>\n<p>Redis (6379/TCP)</p>\n<ul>\n<li>无密码或弱密码</li>\n<li>绝对路径写 WebShell</li>\n<li>计划任务反弹 Shell</li>\n<li>写 SSH 公钥</li>\n<li>主从复制 RCE</li>\n<li>Windows 写启动项</li>\n</ul>\n</li>\n<li>\n<p>Kubernetes API Server (6443/TCP &amp;&amp; 10250/TCP)</p>\n<ul>\n<li><code>https://Kubernetes:10250/pods</code></li>\n</ul>\n</li>\n<li>\n<p>JDWP (8000/TCP)</p>\n<ul>\n<li>远程命令执行</li>\n</ul>\n</li>\n<li>\n<p>ActiveMQ (8061/TCP)</p>\n</li>\n<li>\n<p>Jenkin (8080/TCP)</p>\n<ul>\n<li>未授权访问</li>\n</ul>\n</li>\n<li>\n<p>Elasticsearch (9200/TCP)</p>\n<ul>\n<li>代码执行</li>\n<li><code>http://es.addr:9200/_plugin/head/</code></li>\n<li><code>http://es.addr:9200/_nodes</code></li>\n</ul>\n</li>\n<li>\n<p>Memcached (11211/TCP &amp; 11211/UDP)</p>\n<ul>\n<li>未授权访问</li>\n</ul>\n</li>\n<li>\n<p>RabbitMQ (15672/TCP &amp; 15692/TCP &amp; 25672/TCP)</p>\n</li>\n<li>\n<p>MongoDB (27017/TCP)</p>\n<ul>\n<li>无密码或弱密码</li>\n</ul>\n</li>\n<li>\n<p>Hadoop (50070/TCP &amp; 50075/TCP)</p>\n<ul>\n<li>未授权访问</li>\n</ul>\n</li>\n</ul>\n<p>除了以上列出的可能出现的问题，暴露在公网上的服务若不是最新版，都可能存在已经公开的漏洞</p>\n<h1 id=\"常见端口扫描技术\"><a class=\"anchor\" href=\"#常见端口扫描技术\">#</a> 常见端口扫描技术</h1>\n<h2 id=\"全扫描\"><a class=\"anchor\" href=\"#全扫描\">#</a> 全扫描</h2>\n<p>扫描主机尝试使用三次握手与目标主机的某个端口建立正规的连接，若成功建立连接，则端口处于开放状态，反之处于关闭状态。</p>\n<p>全扫描实现简单，且以较低的权限就可以进行该操作。但是在流量日志中会有大量明显的记录。</p>\n<h2 id=\"半扫描\"><a class=\"anchor\" href=\"#半扫描\">#</a> 半扫描</h2>\n<p>半扫描也称 SYN 扫描，在半扫描中，仅发送 SYN 数据段，如果应答为 RST，则端口处于关闭状态，若应答为 SYN/ACK，则端口处于监听状态。不过这种方式需要较高的权限，而且现在的大部分防火墙已经开始对这种扫描方式做处理。</p>\n<h2 id=\"fin扫描\"><a class=\"anchor\" href=\"#fin扫描\">#</a> FIN 扫描</h2>\n<p>FIN 扫描是向目标发送一个 FIN 数据包，如果是开放的端口，会返回 RST 数据包，关闭的端口则不会返回数据包，可以通过这种方式来判断端口是否打开。</p>\n<p>这种方式并不在 TCP 三次握手的状态中，所以不会被记录，相对 SYN 扫描要更隐蔽一些。</p>\n<h1 id=\"web服务\"><a class=\"anchor\" href=\"#web服务\">#</a> Web 服务</h1>\n<ul>\n<li>\n<p>Jenkins</p>\n<ul>\n<li>未授权访问</li>\n</ul>\n</li>\n<li>\n<p>Gitlab</p>\n<ul>\n<li>对应版本 CVE</li>\n</ul>\n</li>\n<li>\n<p>Zabbix</p>\n<ul>\n<li>权限设置不当</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"批量搜索\"><a class=\"anchor\" href=\"#批量搜索\">#</a> 批量搜索</h1>\n<ul>\n<li>Censys</li>\n<li>Shodan</li>\n<li>ZoomEye</li>\n</ul>\n",
            "tags": [
                "漏洞",
                "信息收集",
                "端口"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/information%20gathering/domain%20information/",
            "url": "https://mobius-0.github.io/security/WebNote/information%20gathering/domain%20information/",
            "title": "域名信息",
            "date_published": "2022-11-25T08:54:06.000Z",
            "content_html": "<h1 id=\"whois\"><a class=\"anchor\" href=\"#whois\">#</a> Whois</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cud2hvaXMuY29tLw==\">Whois</span> 可以查询域名是否被注册，以及注册域名的详细信息的数据库，其中可能会存在一些有用的信息，例如域名所有人、域名注册商、邮箱等。</p>\n<h1 id=\"搜索引擎搜索\"><a class=\"anchor\" href=\"#搜索引擎搜索\">#</a> 搜索引擎搜索</h1>\n<p>搜索引擎通常会记录域名信息，可以通过  <code>site: domain</code>  的语法来查询。</p>\n<h1 id=\"第三方查询\"><a class=\"anchor\" href=\"#第三方查询\">#</a> 第三方查询</h1>\n<p>网络中有相当多的第三方应用提供了子域的查询功能，下面有一些例子，更多的网站可以在 8.1 工具列表 中查找。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kbnNkdW1wc3Rlci5jb20v\">DNSDumpster</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydXN0b3RhbC5jb20v\">Virustotal</span></li>\n<li>CrtSearch</li>\n<li>threatminer</li>\n<li>Censys</li>\n</ul>\n<h1 id=\"asn信息关联\"><a class=\"anchor\" href=\"#asn信息关联\">#</a> ASN 信息关联</h1>\n<p>在网络中一个自治系统 (Autonomous System, AS) 是一个有权自主地决定在本系统中应采用何种路由协议的小型单位。这个网络单位可以是一个简单的网络也可以是一个由一个或多个普通的网络管理员来控制的网络群体，它是一个单独的可管理的网络单元 (例如一所大学，一个企业或者一个公司个体) 。</p>\n<p>一个自治系统有时也被称为是一个路由选择域 (routing domain) 。一个自治系统将会分配一个全局的唯一的 16 位号码，这个号码被称为自治系统号 (ASN) 。因此可以通过 ASN 号来查找可能相关的 IP，例如：</p>\n<pre><code>whois -h whois.radb.net -- '-i origin AS111111' | grep -Eo &quot;([0-9.]+)&#123;4&#125;/[0-9]+&quot; | uniq\nnmap --script targets-asn --script-args targets-asn.asn=15169\n</code></pre>\n<h1 id=\"域名相关性\"><a class=\"anchor\" href=\"#域名相关性\">#</a> 域名相关性</h1>\n<p>同一个企业 / 个人注册的多个域名通常具有一定的相关性，例如使用了同一个邮箱来注册、使用了同一个备案、同一个负责人来注册等，可以使用这种方式来查找关联的域名。一种操作步骤如下：</p>\n<ul>\n<li>查询域名注册邮箱</li>\n<li>通过域名查询备案号</li>\n<li>通过备案号查询域名</li>\n<li>反查注册邮箱</li>\n<li>反查注册人</li>\n<li>通过注册人查询到的域名在查询邮箱</li>\n<li>通过上一步邮箱去查询域名</li>\n<li>查询以上获取出的域名的子域名</li>\n</ul>\n<h1 id=\"网站信息利用\"><a class=\"anchor\" href=\"#网站信息利用\">#</a> 网站信息利用</h1>\n<p>网站中有相当多的信息，网站本身、各项安全策略、设置等都可能暴露出一些信息。</p>\n<p>网站本身的交互通常不囿于单个域名，会和其他子域交互。对于这种情况，可以通过爬取网站，收集站点中的其他子域信息。这些信息通常出现在 JavaScript 文件、资源文件链接等位置。</p>\n<p>网站的安全策略如跨域策略、CSP 规则等通常也包含相关域名的信息。有时候多个域名为了方便会使用同一个 SSL/TLS 证书，因此有时可通过证书来获取相关域名信息。</p>\n<h1 id=\"https证书\"><a class=\"anchor\" href=\"#https证书\">#</a> HTTPS 证书</h1>\n<h2 id=\"证书透明度\"><a class=\"anchor\" href=\"#证书透明度\">#</a> 证书透明度</h2>\n<p>为了保证 HTTPS 证书不会被误发或伪造，CA 会将证书记录到可公开验证、不可篡改且只能附加内容的日志中，任何感兴趣的相关方都可以查看由授权中心签发的所有证书。因此可以通过查询已授权证书的方式来获得相关域名。</p>\n<h2 id=\"san\"><a class=\"anchor\" href=\"#san\">#</a> SAN</h2>\n<p>主题备用名称 (Subject Alternate Name, SAN)，简单来说，在需要多个域名，并将其用于各项服务时，多使用 SAN 证书。SAN 允许在安全证书中使用 subjectAltName 字段将多种值与证书关联，这些值被称为主题备用名称。</p>\n<h1 id=\"域传送漏洞\"><a class=\"anchor\" href=\"#域传送漏洞\">#</a> 域传送漏洞</h1>\n<p>DNS 域传送 (zone transfer) 指的是冗余备份服务器使用来自主服务器的数据刷新自己的域 (zone) 数据库。这是为了防止主服务器因意外不可用时影响到整个域名的解析。</p>\n<p>一般来说，域传送操作应该只允许可信的备用 DNS 服务器发起，但是如果错误配置了授权，那么任意用户都可以获得整个 DNS 服务器的域名信息。这种错误授权被称作是 DNS 域传送漏洞。</p>\n<h1 id=\"passive-dns\"><a class=\"anchor\" href=\"#passive-dns\">#</a> Passive DNS</h1>\n<p>Passive DNS 被动的从递归域名服务器记录来自不同域名服务器的响应，形成数据库。利用 Passive DNS 数据库可以知道域名曾绑定过哪些 IP，IP 曾关联到哪些域名，域名最早 / 最近出现的时间，为测试提供较大的帮助。Virustotal、passivetotal、CIRCL 等网站都提供了 Passive DNS 数据库的查询。</p>\n<h1 id=\"泛解析\"><a class=\"anchor\" href=\"#泛解析\">#</a> 泛解析</h1>\n<p>泛解析是把 *.example.com 的所有 A 记录都解析到某个 IP 地址上，在子域名枚举时需要处理这种情况以防生成大量无效的记录。</p>\n<h1 id=\"重要记录\"><a class=\"anchor\" href=\"#重要记录\">#</a> 重要记录</h1>\n<h2 id=\"cname\"><a class=\"anchor\" href=\"#cname\">#</a> CNAME</h2>\n<p>CNAME 即 Canonical name，又称 alias，将域名指向另一个域名。其中可能包含其他关联业务的信息。很多网站使用的 CDN 加速功能利用了该记录。</p>\n<h2 id=\"mx记录\"><a class=\"anchor\" href=\"#mx记录\">#</a> MX 记录</h2>\n<p>MX 记录即 Mail Exchanger，记录了发送电子邮件时域名对应的服务器地址。可以用来寻找 SMTP 服务器信息。</p>\n<h2 id=\"ns记录\"><a class=\"anchor\" href=\"#ns记录\">#</a> NS 记录</h2>\n<p>NS (Name Server) 记录是域名服务器的记录，用来指定域名由哪个 DNS 服务器来进行解析。</p>\n<h2 id=\"spf记录\"><a class=\"anchor\" href=\"#spf记录\">#</a> SPF 记录</h2>\n<p>SPF (Sender Policy Framework) 是为了防止垃圾邮件而提出来的一种 DNS 记录类型，是一种 TXT 类型的记录，用于登记某个域名拥有的用来外发邮件的所有 IP 地址。通过 SPF 记录可以获取相关的 IP 信息，常用命令为  <code>dig example.com txt</code>  。</p>\n<h1 id=\"cdn\"><a class=\"anchor\" href=\"#cdn\">#</a> CDN</h1>\n<h2 id=\"cdn验证\"><a class=\"anchor\" href=\"#cdn验证\">#</a> CDN 验证</h2>\n<p>可通过多地 ping 的方式确定目标是否使用了 CDN，常用的网站有  <code>http://ping.chinaz.com/</code>   <code>https://asm.ca.com/en/ping.php</code>  等。</p>\n<h2 id=\"域名查找\"><a class=\"anchor\" href=\"#域名查找\">#</a> 域名查找</h2>\n<p>使用了 CDN 的域名的父域或者子域名不一定使用了 CDN，可以通过这种方式去查找对应的 IP。</p>\n<h2 id=\"历史记录查找\"><a class=\"anchor\" href=\"#历史记录查找\">#</a> 历史记录查找</h2>\n<p>CDN 可能是在网站上线一段时间后才上线的，可以通过查找域名解析记录的方式去查找真实 IP。</p>\n<h2 id=\"邮件信息\"><a class=\"anchor\" href=\"#邮件信息\">#</a> 邮件信息</h2>\n<p>通过社会工程学的方式进行邮件沟通，从邮件头中获取 IP 地址，IP 地址可能是网站的真实 IP 或者是目标的出口 IP。</p>\n<h1 id=\"子域爆破\"><a class=\"anchor\" href=\"#子域爆破\">#</a> 子域爆破</h1>\n<p>在内网等不易用到以上技巧的环境，或者想监测新域名上线时，可以通过批量尝试的方式，找到有效的域名。</p>\n<h1 id=\"缓存探测技术\"><a class=\"anchor\" href=\"#缓存探测技术\">#</a> 缓存探测技术</h1>\n<p>在企业网络中通常都会配置 DNS 服务器为网络内的主机提供域名解析服务。域名缓存侦测（DNS Cache Snooping）技术就是向这些服务器发送域名解析请求，但并不要求使用递归模式，用于探测是否请求过某个域名。这种方式可以用来探测是否使用了某些软件，尤其是安全软件。</p>\n",
            "tags": [
                "域名",
                "信息收集",
                "搜索"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/information%20gathering/network%20io/",
            "url": "https://mobius-0.github.io/security/WebNote/information%20gathering/network%20io/",
            "title": "网络入口/信息",
            "date_published": "2022-11-25T08:44:06.000Z",
            "content_html": "<ul>\n<li>网络拓扑信息\n<ul>\n<li>外网出口</li>\n</ul>\n</li>\n<li>IP 信息\n<ul>\n<li>C 段</li>\n</ul>\n</li>\n<li>线下网络\n<ul>\n<li>Wi-Fi\n<ul>\n<li>SSID</li>\n<li>认证信息</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>VPN\n<ul>\n<li>厂商</li>\n<li>登录方式</li>\n</ul>\n</li>\n<li>邮件网关</li>\n<li>手机 APP</li>\n<li>小程序后台</li>\n<li>OA</li>\n<li>SSO</li>\n<li>边界网络设备</li>\n<li>上游运营商</li>\n</ul>\n",
            "tags": [
                "信息收集"
            ]
        }
    ]
}