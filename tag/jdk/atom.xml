<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mobius-0.github.io</id>
    <title>Khala • Posts by &#34;jdk&#34; tag</title>
    <link href="https://mobius-0.github.io" />
    <updated>2022-11-27T08:50:11.000Z</updated>
    <category term="Hexo" />
    <category term="shoya" />
    <category term="网站" />
    <category term="网络安全" />
    <category term="工具" />
    <category term="虚拟机" />
    <category term="安全" />
    <category term="星际争霸2" />
    <category term="平衡" />
    <category term="杂谈" />
    <category term="网易" />
    <category term="暴雪" />
    <category term="动画" />
    <category term="江南" />
    <category term="龙族" />
    <category term="小说" />
    <category term="法律法规" />
    <category term="XSS" />
    <category term="漏洞" />
    <category term="渗透测试" />
    <category term="靶场" />
    <category term="pikachu" />
    <category term="Kerberos认证" />
    <category term="JWT" />
    <category term="认证" />
    <category term="单点登录" />
    <category term="Windows" />
    <category term="挑战/应答" />
    <category term="S/Key协议" />
    <category term="权限设置" />
    <category term="虚拟化" />
    <category term="Docker" />
    <category term="镜像" />
    <category term="域名" />
    <category term="DNS" />
    <category term="WEB" />
    <category term="标准" />
    <category term="OCI" />
    <category term="CRI" />
    <category term="计算机网络" />
    <category term="IPSec" />
    <category term="VPN" />
    <category term="HTTP" />
    <category term="SSL" />
    <category term="TLS" />
    <category term="WiFi" />
    <category term="邮件" />
    <category term="网络协议" />
    <category term="入侵检测" />
    <category term="IDS" />
    <category term="IPS" />
    <category term="防御加固" />
    <category term="管理策略" />
    <category term="分工" />
    <category term="职能" />
    <category term="情报" />
    <category term="运营" />
    <category term="开发过程" />
    <category term="应急响应" />
    <category term="流程" />
    <category term="Linux" />
    <category term="攻击溯源" />
    <category term="分析模型" />
    <category term="网络攻防" />
    <category term="蜜罐" />
    <category term="隐藏" />
    <category term="诱导" />
    <category term="防御纵深" />
    <category term="访问控制" />
    <category term="过滤" />
    <category term="框架" />
    <category term="风险" />
    <category term="控制" />
    <category term="渗透" />
    <category term="信息收集" />
    <category term="痕迹清理" />
    <category term="内网" />
    <category term="后门" />
    <category term="免杀" />
    <category term="代理" />
    <category term="Shell" />
    <category term="远程连接" />
    <category term="ASP" />
    <category term="CSharp" />
    <category term="Golang" />
    <category term="Java" />
    <category term="语言" />
    <category term="反序列化" />
    <category term="混淆" />
    <category term="沙箱" />
    <category term="类" />
    <category term="JDK" />
    <category term="JavaScript" />
    <category term="PHP" />
    <category term="PowerShell" />
    <category term="Python" />
    <category term="Ruby" />
    <category term="CSRF" />
    <category term="服务器" />
    <category term="SQL注入" />
    <category term="SSRF" />
    <category term="Cache" />
    <category term="XXE" />
    <category term="XML" />
    <category term="Xpath" />
    <category term="注入" />
    <category term="函数" />
    <category term="绕过" />
    <category term="遍历" />
    <category term="包含" />
    <category term="文件" />
    <category term="目录" />
    <category term="读取" />
    <category term="上传" />
    <category term="逻辑" />
    <category term="中间件" />
    <category term="IIS" />
    <category term="Apache" />
    <category term="Nginx" />
    <category term="策略配置" />
    <category term="端口" />
    <category term="社会工程学" />
    <category term="搜索" />
    <entry>
        <id>https://mobius-0.github.io/security/WebNote/Languages%20and%20Frameworks/Java/</id>
        <title>Java</title>
        <link rel="alternate" href="https://mobius-0.github.io/security/WebNote/Languages%20and%20Frameworks/Java/"/>
        <content type="html">&lt;h1 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念&lt;/h1&gt;
&lt;h2 id=&#34;jvm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jvm&#34;&gt;#&lt;/a&gt; JVM&lt;/h2&gt;
&lt;p&gt;JVM 是 Java 平台的核心，以机器代码来实现，为程序执行提供了所需的所有基本功能，例如字节码解析器、JIT 编译器、垃圾收集器等。由于它是机器代码实现的，其同样受到二进制文件受到的攻击。&lt;/p&gt;
&lt;p&gt;JCL 是 JVM 自带的一个标准库，含有数百个系统类。默认情况下，所有系统类都是可信任的，且拥有所有的特权。&lt;/p&gt;
&lt;h2 id=&#34;jdk&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jdk&#34;&gt;#&lt;/a&gt; JDK&lt;/h2&gt;
&lt;p&gt;Java 开发工具包 (Java Development Kit，JDK) 是 Oracle 公司发布的 Java 平台，有标准版 (Standard Edition，Java SE)、企业版 (Enterprise Edition，Java EE) 等版本。&lt;/p&gt;
&lt;p&gt;在最开始，JDK 以二进制形式发布，而后在 2006 年 11 月 17 日，Sun 以 GPL 许可证发布了 Java 的源代码，于是之后出现了 OpenJDK。&lt;/p&gt;
&lt;h2 id=&#34;jmx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jmx&#34;&gt;#&lt;/a&gt; JMX&lt;/h2&gt;
&lt;p&gt;JMX (Java Management Extensions，Java 管理扩展) 是一个为应用程序植入管理功能的框架，主要为管理和监视应用程序、系统对象、设备和面向服务的网络提供相应的工具。JMX 可以远程读取系统中的值、调用系统中的方法。在 JMX 未配置身份验证或 JDK 版本过低存在反序列化漏洞时，可能会导致远程代码执行。&lt;/p&gt;
&lt;h2 id=&#34;jni&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jni&#34;&gt;#&lt;/a&gt; JNI&lt;/h2&gt;
&lt;p&gt;JNI (Java Native Interface) 是 Java 提供的和其他语言交互的接口。&lt;/p&gt;
&lt;h2 id=&#34;jna&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jna&#34;&gt;#&lt;/a&gt; JNA&lt;/h2&gt;
&lt;p&gt;JNA (Java Native Access) 是在 JNI 上的框架，用于自动实现 Java 接口到 native function 的映射，而不需要另外编写 JNI 代码。&lt;/p&gt;
&lt;h2 id=&#34;ognl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ognl&#34;&gt;#&lt;/a&gt; OGNL&lt;/h2&gt;
&lt;p&gt;OGNL (Object-Graph Navigation Language，对象导航语言) 是一种功能强大的表达式语言，通过简单一致的表达式语法，提供了存取对象的任意属性、调用对象的方法、遍历整个对象的结构图、实现字段类型转化等功能。&lt;/p&gt;
&lt;p&gt;Struts2 中使用了 OGNL，提供了一个 ValueStack 类。ValueStack 分为 root 和 context 两部分。root 中是当前的 action 对象，context 中是 ActionContext 里面所有的内容。&lt;/p&gt;
&lt;h2 id=&#34;io模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#io模型&#34;&gt;#&lt;/a&gt; IO 模型&lt;/h2&gt;
&lt;p&gt;Java 对操作系统的各种 IO 模型进行了封装，形成了不同的 API。&lt;/p&gt;
&lt;h3 id=&#34;bio&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bio&#34;&gt;#&lt;/a&gt; BIO&lt;/h3&gt;
&lt;p&gt;BIO (Blocking I/O) 是同步阻塞 I/O 模式，数据的读取写入必须阻塞在一个线程内等待其完成。&lt;/p&gt;
&lt;h3 id=&#34;nio&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nio&#34;&gt;#&lt;/a&gt; NIO&lt;/h3&gt;
&lt;p&gt;NIO (New I/O) 是一种同步非阻塞的 I/O 模型，在 Java 1.4 中引入，对应 java.nio 包，提供了 Channel , Selector，Buffer 等抽象。&lt;/p&gt;
&lt;h3 id=&#34;aio&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aio&#34;&gt;#&lt;/a&gt; AIO&lt;/h3&gt;
&lt;p&gt;AIO (Asynchronous I/O) 在 Java 7 中引入，是 NIO 的改进版，是异步非阻塞的 IO 模型，基于事件和回调机制实现。&lt;/p&gt;
&lt;h2 id=&#34;反射&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反射&#34;&gt;#&lt;/a&gt; 反射&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;Java 反射机制是指在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性；这种动态获取信息以及动态调用对象方法的功能被称为语言的反射机制。&lt;/p&gt;
&lt;h3 id=&#34;相关类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关类&#34;&gt;#&lt;/a&gt; 相关类&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类名&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;类的实体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Field&lt;/td&gt;
&lt;td&gt;类的成员变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Method&lt;/td&gt;
&lt;td&gt;类的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Constructor&lt;/td&gt;
&lt;td&gt;类的构造方法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;class相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#class相关&#34;&gt;#&lt;/a&gt; Class 相关&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;asSubclass(Class&amp;lt;U&amp;gt; clazz)
&lt;ul&gt;
&lt;li&gt;把传递的类的对象转换成代表其子类的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cast
&lt;ul&gt;
&lt;li&gt;把对象转换成代表类或是接口的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getClassLoader()
&lt;ul&gt;
&lt;li&gt;获得类的加载器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getClasses()
&lt;ul&gt;
&lt;li&gt;返回一个数组，数组中包含该类中所有公共类和接口类的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredClasses()
&lt;ul&gt;
&lt;li&gt;返回一个数组，数组中包含该类中所有类和接口类的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;forName(String className)
&lt;ul&gt;
&lt;li&gt;根据类名返回类的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getName()：
&lt;ul&gt;
&lt;li&gt;获得类的完整路径名字&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;newInstance()
&lt;ul&gt;
&lt;li&gt;创建类的实例&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getPackage()
&lt;ul&gt;
&lt;li&gt;获得类的包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getSimpleName()
&lt;ul&gt;
&lt;li&gt;获得类的名字&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getSuperclass()
&lt;ul&gt;
&lt;li&gt;获得当前类继承的父类的名字&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getInterfaces()
&lt;ul&gt;
&lt;li&gt;获得当前类实现的类或是接口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getField(String name)
&lt;ul&gt;
&lt;li&gt;获得某个公有的属性对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getFields()
&lt;ul&gt;
&lt;li&gt;获得所有公有的属性对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredField(String name)
&lt;ul&gt;
&lt;li&gt;获得某个属性对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredFields()
&lt;ul&gt;
&lt;li&gt;获得所有属性对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getAnnotation(Class&amp;lt;A&amp;gt; annotationClass)
&lt;ul&gt;
&lt;li&gt;返回该类中与参数类型匹配的公有注解对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getAnnotations()
&lt;ul&gt;
&lt;li&gt;返回该类所有的公有注解对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredAnnotation(Class&amp;lt;A&amp;gt; annotationClass)
&lt;ul&gt;
&lt;li&gt;返回该类中与参数类型匹配的所有注解对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredAnnotations()
&lt;ul&gt;
&lt;li&gt;返回该类所有的注解对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getConstructor(Class...&amp;lt;?&amp;gt; parameterTypes)
&lt;ul&gt;
&lt;li&gt;获得该类中与参数类型匹配的公有构造方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getConstructors()
&lt;ul&gt;
&lt;li&gt;获得该类的所有公有构造方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredConstructor(Class...&amp;lt;?&amp;gt; parameterTypes)
&lt;ul&gt;
&lt;li&gt;获得该类中与参数类型匹配的构造方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredConstructors()
&lt;ul&gt;
&lt;li&gt;获得该类所有构造方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getMethod(String name, Class...&amp;lt;?&amp;gt; parameterTypes)
&lt;ul&gt;
&lt;li&gt;获得该类某个公有的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getMethods()
&lt;ul&gt;
&lt;li&gt;获得该类所有公有的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredMethod(String name, Class...&amp;lt;?&amp;gt; parameterTypes)
&lt;ul&gt;
&lt;li&gt;获得该类某个方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;getDeclaredMethods()
&lt;ul&gt;
&lt;li&gt;获得该类所有方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isAnnotation()
&lt;ul&gt;
&lt;li&gt;如果是注解类型则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isAnnotationPresent(Class&amp;lt;? extends Annotation&amp;gt; annotationClass)
&lt;ul&gt;
&lt;li&gt;如果是指定类型注解类型则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isAnonymousClass()
&lt;ul&gt;
&lt;li&gt;如果是匿名类则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isArray()
&lt;ul&gt;
&lt;li&gt;如果是一个数组类则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isEnum()
&lt;ul&gt;
&lt;li&gt;如果是枚举类则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isInstance(Object obj)
&lt;ul&gt;
&lt;li&gt;如果 obj 是该类的实例则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isInterface()
&lt;ul&gt;
&lt;li&gt;如果是接口类则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isLocalClass()
&lt;ul&gt;
&lt;li&gt;如果是局部类则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;isMemberClass()
&lt;ul&gt;
&lt;li&gt;如果是内部类则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;field相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#field相关&#34;&gt;#&lt;/a&gt; Field 相关&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;equals(Object obj)
&lt;ul&gt;
&lt;li&gt;属性与 obj 相等则返回 true&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;get(Object obj)
&lt;ul&gt;
&lt;li&gt;获得 obj 中对应的属性值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;set(Object obj, Object value)
&lt;ul&gt;
&lt;li&gt;设置 obj 中对应属性值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;method相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#method相关&#34;&gt;#&lt;/a&gt; Method 相关&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;invoke(Object obj, Object... args)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传递 object 对象及参数调用该对象对应的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#constructor&#34;&gt;#&lt;/a&gt; Constructor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;newInstance(Object... initargs)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据传递的参数创建类的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类&#34;&gt;#&lt;/a&gt; 类&lt;/h1&gt;
&lt;h2 id=&#34;生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期&#34;&gt;#&lt;/a&gt; 生命周期&lt;/h2&gt;
&lt;p&gt;整体来说，Java 中类的生命周期如下：加载 (Loading) -&amp;gt; [ 连接 (Linking) : 验证 (Verification) -&amp;gt; 准备 (Perparation) -&amp;gt; 解析 (Resolutin) ] -&amp;gt; 初始化 (Initialization) -&amp;gt; 使用 (Using) -&amp;gt; 卸载 (Unloading) 。&lt;/p&gt;
&lt;p&gt;加载过程分为三步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过全限定类名来获取定义此类的二进制字节流&lt;/li&gt;
&lt;li&gt;将字节流所代表的静态存储结构转化为方法区的运行时数据结构&lt;/li&gt;
&lt;li&gt;在内存中生成代表这个类的  &lt;code&gt;java.lang.Class&lt;/code&gt;  对象，作为方法区这个类的各种数据的访问入口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;验证阶段主要用于确保 Class 文件的字节流符合当前虚拟机的要求，分为几步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判断文件格式：是否以  &lt;code&gt;0xCAFEBABE&lt;/code&gt;  开始，主次版本号是否在处理范围内&lt;/li&gt;
&lt;li&gt;元数据验证&lt;/li&gt;
&lt;li&gt;字节码验证&lt;/li&gt;
&lt;li&gt;符号引用验证&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;部分运行选项与说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#部分运行选项与说明&#34;&gt;#&lt;/a&gt; 部分运行选项与说明&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-Xverify:none&lt;/code&gt;  关闭类加载时的验证措施&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;框架&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#框架&#34;&gt;#&lt;/a&gt; 框架&lt;/h1&gt;
&lt;h2 id=&#34;servlet&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#servlet&#34;&gt;#&lt;/a&gt; Servlet&lt;/h2&gt;
&lt;h3 id=&#34;简介-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-2&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;Servlet (Server Applet) 是 Java Servlet 的简称，称为小服务程序或服务连接器，是用 Java 编写的服务器端程序，主要功能在于交互式地浏览和修改数据，生成动态 Web 内容。&lt;/p&gt;
&lt;p&gt;狭义的 Servlet 是指 Java 语言实现的一个接口，广义的 Servlet 是指任何实现了这个 Servlet 接口的类，一般情况下，人们将 Servlet 理解为后者。Servlet 运行于支持 Java 的应用服务器中。从原理上讲，Servlet 可以响应任何类型的请求，但绝大多数情况下 Servlet 只用来扩展基于 HTTP 协议的 Web 服务器。&lt;/p&gt;
&lt;h3 id=&#34;生命周期为&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期为&#34;&gt;#&lt;/a&gt; 生命周期为&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;客户端请求该 Servlet&lt;/li&gt;
&lt;li&gt;加载 Servlet 类到内存&lt;/li&gt;
&lt;li&gt;实例化并调用 init () 方法初始化该 Servlet&lt;/li&gt;
&lt;li&gt;service ()(根据请求方法不同调用  &lt;code&gt;doGet()&lt;/code&gt;  /  &lt;code&gt;doPost()&lt;/code&gt;  / ... /  &lt;code&gt;destroy()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#接口&#34;&gt;#&lt;/a&gt; 接口&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;init()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 Servlet 的生命期中，仅执行一次 init () 方法，在服务器装入 Servlet 时执行。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;service () 方法是 Servlet 的核心。每当一个客户请求一个 HttpServlet 对象，该对象的  &lt;code&gt;service()&lt;/code&gt;  方法就要被调用，而且传递给这个方法一个 &amp;quot;请求&amp;quot;(ServletRequest) 对象和一个 &amp;quot;响应&amp;quot;(ServletResponse) 对象作为参数。&lt;/p&gt;
&lt;h2 id=&#34;struts-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#struts-2&#34;&gt;#&lt;/a&gt; Struts 2&lt;/h2&gt;
&lt;h3 id=&#34;简介-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-3&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;Struts2 是一个基于 MVC 设计模式的 Web 应用框架，它本质上相当于一个 servlet，在 MVC 设计模式中，Struts2 作为控制器 (Controller) 来建立模型与视图的数据交互。&lt;/p&gt;
&lt;h3 id=&#34;请求流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求流程&#34;&gt;#&lt;/a&gt; 请求流程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;客户端发送请求的 tomcat 服务器&lt;/li&gt;
&lt;li&gt;请求经过一系列过滤器&lt;/li&gt;
&lt;li&gt;FilterDispatcher 调用 ActionMapper 来决定这个请求是否要调用某个 Action&lt;/li&gt;
&lt;li&gt;ActionMppaer 决定调用某个 ActionFilterDispatcher 把请求给 ActionProxy&lt;/li&gt;
&lt;li&gt;ActionProxy 通过 Configuration Manager 查看 structs.xml，找到对应的 Action 类&lt;/li&gt;
&lt;li&gt;ActionProxy 创建一个 ActionInvocation 对象&lt;/li&gt;
&lt;li&gt;ActionInvocation 对象回调 Action 的 execute 方法&lt;/li&gt;
&lt;li&gt;Action 执行完毕后，ActionInvocation 根据返回的字符串，找到相应的 result，通过 HttpServletResponse 返回给服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;相关cve&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关cve&#34;&gt;#&lt;/a&gt; 相关 CVE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2016-3081 (S2-032)&lt;/li&gt;
&lt;li&gt;CVE-2016-3687 (S2-033)&lt;/li&gt;
&lt;li&gt;CVE-2016-4438 (S2-037)&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ltbXVuaW8vYXBhY2hlLXN0cnV0czItQ1ZFLTIwMTctNTYzOA==&#34;&gt;CVE-2017-5638&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;CVE-2017-7672&lt;/li&gt;
&lt;li&gt;CVE-2017-9787&lt;/li&gt;
&lt;li&gt;CVE-2017-9793&lt;/li&gt;
&lt;li&gt;CVE-2017-9804&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hemVuMTYwL3N0cnV0cy1wd25fQ1ZFLTIwMTctOTgwNQ==&#34;&gt;CVE-2017-9805&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JyaWFud3JmL1MyLTA1My1DVkUtMjAxNy0xMjYxMQ==&#34;&gt;CVE-2017-12611&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;CVE-2017-15707&lt;/li&gt;
&lt;li&gt;CVE-2018-1327&lt;/li&gt;
&lt;li&gt;CVE-2018-11776&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;spring&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spring&#34;&gt;#&lt;/a&gt; Spring&lt;/h2&gt;
&lt;h3 id=&#34;简介-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-4&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;Spring 一般指的是 Spring Framework，一个轻量级 Java 应用程序开源框架，提供了简易的开发方式。&lt;/p&gt;
&lt;h3 id=&#34;spring-mvc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spring-mvc&#34;&gt;#&lt;/a&gt; Spring MVC&lt;/h3&gt;
&lt;p&gt;Spring MVC 根据 Spring 的模式设计的 MVC 框架，主要用于开发 Web 应用，简化开发。&lt;/p&gt;
&lt;h3 id=&#34;spring-boot&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spring-boot&#34;&gt;#&lt;/a&gt; Spring Boot&lt;/h3&gt;
&lt;p&gt;Spring 在推出之初方案较为繁琐，因此提供了 Spring Boot 作为自动化配置工具，降低项目搭建的复杂度。&lt;/p&gt;
&lt;h3 id=&#34;请求流程-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求流程-2&#34;&gt;#&lt;/a&gt; 请求流程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用户发送请求给服务器&lt;/li&gt;
&lt;li&gt;服务器收到请求，使用 DispatchServlet 处理&lt;/li&gt;
&lt;li&gt;Dispatch 使用 HandleMapping 检查 url 是否有对应的 Controller，如果有，执行&lt;/li&gt;
&lt;li&gt;如果 Controller 返回字符串，ViewResolver 将字符串转换成相应的视图对象&lt;/li&gt;
&lt;li&gt;DispatchServlet 将视图对象中的数据，输出给服务器&lt;/li&gt;
&lt;li&gt;服务器将数据输出给客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cve概览&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve概览&#34;&gt;#&lt;/a&gt; CVE 概览&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2018-1270
&lt;ul&gt;
&lt;li&gt;Spring Websocket 远程代码执行漏洞&lt;/li&gt;
&lt;li&gt;Spring Framework 5.0 - 5.0.5&lt;/li&gt;
&lt;li&gt;Spring Framework 4.3 - 4.3.15&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2018-1273
&lt;ul&gt;
&lt;li&gt;Spring Data 远程代码执行漏洞&lt;/li&gt;
&lt;li&gt;Spring Data Commons 1.13 - 1.13.10&lt;/li&gt;
&lt;li&gt;Spring Data Commons 2.0 - 2.0.5&lt;/li&gt;
&lt;li&gt;Spring Data REST 2.6 - 2.6.10&lt;/li&gt;
&lt;li&gt;Spring Data REST 3.0 - 3.0.5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2017-8046
&lt;ul&gt;
&lt;li&gt;Spring Data REST 远程代码执行漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2017-4971
&lt;ul&gt;
&lt;li&gt;Spring Web Flow 远程代码执行漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;shiro&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shiro&#34;&gt;#&lt;/a&gt; Shiro&lt;/h2&gt;
&lt;h3 id=&#34;简介-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-5&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;Apache Shiro 是一个功能强大且易于使用的 Java 安全框架，功能包括身份验证，授权，加密和会话管理。&lt;/p&gt;
&lt;h3 id=&#34;cve概览-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve概览-2&#34;&gt;#&lt;/a&gt; CVE 概览&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2020-13933
&lt;ul&gt;
&lt;li&gt;Apache Shiro &amp;lt; 1.6.0&lt;/li&gt;
&lt;li&gt;身份验证绕过漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2020-11989
&lt;ul&gt;
&lt;li&gt;SHIRO-782&lt;/li&gt;
&lt;li&gt;Apache Shiro &amp;lt; 1.5.3&lt;/li&gt;
&lt;li&gt;身份验证绕过漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2020-1957
&lt;ul&gt;
&lt;li&gt;SHIRO-682&lt;/li&gt;
&lt;li&gt;Apache Shiro &amp;lt; 1.5.2&lt;/li&gt;
&lt;li&gt;身份验证绕过漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2019-12422
&lt;ul&gt;
&lt;li&gt;SHIRO-721&lt;/li&gt;
&lt;li&gt;Apache Shiro &amp;lt; 1.4.2&lt;/li&gt;
&lt;li&gt;Padding Oracle Attack 远程代码执行漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2016-4437
&lt;ul&gt;
&lt;li&gt;SHIRO-550&lt;/li&gt;
&lt;li&gt;Apache Shiro &amp;lt;= 1.2.4&lt;/li&gt;
&lt;li&gt;反序列化远程代码执行漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2014-0074
&lt;ul&gt;
&lt;li&gt;SHIRO-460&lt;/li&gt;
&lt;li&gt;Apache Shiro &amp;lt; 1.2.3&lt;/li&gt;
&lt;li&gt;身份验证绕过漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cve-2020-13933&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2020-13933&#34;&gt;#&lt;/a&gt; CVE-2020-13933&lt;/h3&gt;
&lt;p&gt;Apache Shiro 1.6.0 之前的版本，由于 Shiro 拦截器与 requestURI 的匹配流程与 Web 框架的拦截器的匹配流程有差异，攻击者构造一个特殊的 http 请求，可以绕过 Shiro 的认证，未授权访问敏感路径。&lt;/p&gt;
&lt;h3 id=&#34;cve-2020-11989&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2020-11989&#34;&gt;#&lt;/a&gt; CVE-2020-11989&lt;/h3&gt;
&lt;p&gt;Apache Shiro 1.5.3 之前的版本，由于 Shiro 拦截器与 requestURI 的匹配流程与 Web 框架的拦截器的匹配流程有差异，攻击者构造一个特殊的 http 请求，可以绕过 Shiro 的认证，未授权访问敏感路径。此漏洞存在两种攻击方式。&lt;/p&gt;
&lt;h3 id=&#34;cve-2020-1957&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2020-1957&#34;&gt;#&lt;/a&gt; CVE-2020-1957&lt;/h3&gt;
&lt;p&gt;Apache Shiro 1.5.2 之前的版本，由于 Shiro 拦截器与 requestURI 的匹配流程与 Web 框架的拦截器的匹配流程有差异，攻击者构造一个特殊的 http 请求，可以绕过 Shiro 的认证，未授权访问敏感路径。&lt;/p&gt;
&lt;h3 id=&#34;cve-2019-12422&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2019-12422&#34;&gt;#&lt;/a&gt; CVE-2019-12422&lt;/h3&gt;
&lt;p&gt;Apache Shiro 1.4.2 之前的版本默认使用  &lt;code&gt;AES/CBC/PKCS5Padding&lt;/code&gt;  模式加密，开启 RememberMe 功能的 Shiro 组件将允许远程攻击者构造序列化数据，通过 Padding Oracle Attack 进行爆破，即使在秘钥未知的条件下，也可以在目标服务器上执行任意命令。&lt;/p&gt;
&lt;h3 id=&#34;cve-2016-4437&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2016-4437&#34;&gt;#&lt;/a&gt; CVE-2016-4437&lt;/h3&gt;
&lt;p&gt;Apache Shiro 1.2.5 之前的版本在  &lt;code&gt;org.apache.shiro.mgt.AbstractRememberMeManager&lt;/code&gt;  中存在 AES 默认秘钥  &lt;code&gt;kPH+bIxk5D2deZiIxcaaaA==&lt;/code&gt;  ，开启 RememberMe 功能的 Shiro 组件将允许远程攻击者构造序列化数据，在目标服务器上执行任意命令。&lt;/p&gt;
&lt;h1 id=&#34;容器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#容器&#34;&gt;#&lt;/a&gt; 容器&lt;/h1&gt;
&lt;p&gt;常见的 Java 服务器有 Tomcat、Weblogic、JBoss、GlassFish、Jetty、Resin、IBM Websphere 等，这里对部分框架做一个简单的说明。&lt;/p&gt;
&lt;h2 id=&#34;tomcat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tomcat&#34;&gt;#&lt;/a&gt; Tomcat&lt;/h2&gt;
&lt;p&gt;Tomcat 是一个轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，用于开发和调试 JSP 程序。&lt;/p&gt;
&lt;p&gt;在收到请求后，Tomcat 的处理流程如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端访问 Web 服务器，发送 HTTP 请求&lt;/li&gt;
&lt;li&gt;Web 服务器接收到请求后，传递给 Servlet 容器&lt;/li&gt;
&lt;li&gt;Servlet 容器加载 Servlet，产生 Servlet 实例后，向其传递表示请求和响应的对象&lt;/li&gt;
&lt;li&gt;Servlet 实例使用请求对象得到客户端的请求信息，然后进行相应的处理&lt;/li&gt;
&lt;li&gt;Servlet 实例将处理结果通过响应对象发送回客户端，容器负责确保响应正确送出，同时将控制返回给 Web 服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tomcat 服务器是由一系列可配置的组件构成的，其中核心组件是 Catalina Servlet 容器，它是所有其他 Tomcat 组件的顶层容器。&lt;/p&gt;
&lt;h3 id=&#34;相关cve-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关cve-2&#34;&gt;#&lt;/a&gt; 相关 CVE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2020-1938
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8yMjgxMDguaHRtbA==&#34;&gt;https://www.freebuf.com/vuls/228108.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2019-0232
&lt;ul&gt;
&lt;li&gt;远程代码执行&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3B5bjNyZC9DVkUtMjAxOS0wMjMyLw==&#34;&gt;https://github.com/pyn3rd/CVE-2019-0232/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2017-12615
&lt;ul&gt;
&lt;li&gt;任意文件写入&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3M/X19iaXo9TXpJMU5EZzRNVEl4TXc9PSZhbXA7bWlkPTIyNDc0ODM2NTkmYW1wO2lkeD0xJmFtcDtzbj1jMjNiM2EzYjNiNDNkNzA5OTliZGJlNjQ0ZTc5ZjdlNQ==&#34;&gt;https://mp.weixin.qq.com/s?__biz=MzI1NDg4MTIxMw==&amp;amp;mid=2247483659&amp;amp;idx=1&amp;amp;sn=c23b3a3b3b43d70999bdbe644e79f7e5&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2013-2067&lt;/li&gt;
&lt;li&gt;CVE-2012-4534&lt;/li&gt;
&lt;li&gt;CVE-2012-4431&lt;/li&gt;
&lt;li&gt;CVE-2012-3546&lt;/li&gt;
&lt;li&gt;CVE-2012-3544&lt;/li&gt;
&lt;li&gt;CVE-2012-2733&lt;/li&gt;
&lt;li&gt;CVE-2011-3375&lt;/li&gt;
&lt;li&gt;CVE-2011-3190&lt;/li&gt;
&lt;li&gt;CVE-2008-2938&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;weblogic&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#weblogic&#34;&gt;#&lt;/a&gt; Weblogic&lt;/h2&gt;
&lt;h3 id=&#34;简介-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-6&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;WebLogic 是美国 Oracle 公司出品的一个 Application Server，是一个基于 Java EE 架构的中间件，WebLogic 是用于开发、集成、部署和管理大型分布式 Web 应用、网络应用和数据库应用的 Java 应用服务器。其将 Java 的动态功能和 Java Enterprise 标准的安全性引入大型网络应用的开发、集成、部署和管理之中。&lt;/p&gt;
&lt;p&gt;WebLogic 对业内多种标准的全面支持，包括 EJB、JSP、Servlet、JMS、JDBC 等。&lt;/p&gt;
&lt;h3 id=&#34;相关cve-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关cve-3&#34;&gt;#&lt;/a&gt; 相关 CVE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2019-2725
&lt;ul&gt;
&lt;li&gt;wls-wsat 反序列化远程代码执行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2019-2658&lt;/li&gt;
&lt;li&gt;CVE-2019-2650&lt;/li&gt;
&lt;li&gt;CVE-2019-2649&lt;/li&gt;
&lt;li&gt;CVE-2019-2648&lt;/li&gt;
&lt;li&gt;CVE-2019-2647&lt;/li&gt;
&lt;li&gt;CVE-2019-2646&lt;/li&gt;
&lt;li&gt;CVE-2019-2645&lt;/li&gt;
&lt;li&gt;CVE-2019-2618
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2phczUwMm4vY3ZlLTIwMTktMjYxOC8=&#34;&gt;https://github.com/jas502n/cve-2019-2618/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2019-2615&lt;/li&gt;
&lt;li&gt;CVE-2019-2568&lt;/li&gt;
&lt;li&gt;CVE-2018-3252&lt;/li&gt;
&lt;li&gt;CVE-2018-3248&lt;/li&gt;
&lt;li&gt;CVE-2018-3245&lt;/li&gt;
&lt;li&gt;CVE-2018-3201&lt;/li&gt;
&lt;li&gt;CVE-2018-3197&lt;/li&gt;
&lt;li&gt;CVE-2018-3191
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3ZvaWRmeW9vL0NWRS0yMDE4LTMxOTE=&#34;&gt;https://github.com/voidfyoo/CVE-2018-3191&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0xpYnJhZ2dib25kL0NWRS0yMDE4LTMxOTE=&#34;&gt;https://github.com/Libraggbond/CVE-2018-3191&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2018-2894
&lt;ul&gt;
&lt;li&gt;任意文件上传&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjQ1OA==&#34;&gt;https://xz.aliyun.com/t/2458&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2018-2893
&lt;ul&gt;
&lt;li&gt;反序列化&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8xNzgxMDUuaHRtbA==&#34;&gt;https://www.freebuf.com/vuls/178105.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2018-2628
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvbllZNHpnMm0yeHNxVDBHWGE5cE1HQQ==&#34;&gt;https://mp.weixin.qq.com/s/nYY4zg2m2xsqT0GXa9pMGA&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2018-1258&lt;/li&gt;
&lt;li&gt;CVE-2017-10271
&lt;ul&gt;
&lt;li&gt;XMLDecoder 反序列化漏洞&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3dlYmNhY2hlLmdvb2dsZXVzZXJjb250ZW50LmNvbS9zZWFyY2g/cT1jYWNoZSUzQXNIN2o4VEY4dU9JSiUzQXd3dy5mcmVlYnVmLmNvbSUyRnZ1bHMlMkYxNjAzNjcuaHRtbA==&#34;&gt;http://webcache.googleusercontent.com/search?q=cache%3AsH7j8TF8uOIJ%3Awww.freebuf.com%2Fvuls%2F160367.html&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CVE-2017-3248&lt;/li&gt;
&lt;li&gt;CVE-2016-3510&lt;/li&gt;
&lt;li&gt;CVE-2015-4852
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JvbzdicmVhay9zZXJpYWxhdG9y&#34;&gt;https://github.com/roo7break/serialator&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jboss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jboss&#34;&gt;#&lt;/a&gt; JBoss&lt;/h2&gt;
&lt;h3 id=&#34;简介-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-7&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;JBoss 是一个基于 J2EE 的管理 EJB 的容器和服务器，但 JBoss 核心服务不包括支持 servlet/JSP 的 WEB 容器，一般与 Tomcat 或 Jetty 绑定使用。&lt;/p&gt;
&lt;h3 id=&#34;相关cve-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关cve-4&#34;&gt;#&lt;/a&gt; 相关 CVE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2017-12149
&lt;ul&gt;
&lt;li&gt;反序列化漏洞&lt;/li&gt;
&lt;li&gt;访问  &lt;code&gt;/invoker/readonly&lt;/code&gt;  ，页面存在即有反序列化漏洞&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jetty&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jetty&#34;&gt;#&lt;/a&gt; Jetty&lt;/h2&gt;
&lt;h3 id=&#34;简介-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-8&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;Jetty 是一个开源的 servlet 容器。&lt;/p&gt;
&lt;h1 id=&#34;沙箱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#沙箱&#34;&gt;#&lt;/a&gt; 沙箱&lt;/h1&gt;
&lt;h2 id=&#34;简介-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-9&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;Java 实现了一套沙箱环境，使远程的非可信代码只能在受限的环境下执行。&lt;/p&gt;
&lt;h2 id=&#34;相关cve-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关cve-5&#34;&gt;#&lt;/a&gt; 相关 CVE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CVE-2012-0507&lt;/li&gt;
&lt;li&gt;CVE-2012-4681&lt;/li&gt;
&lt;li&gt;CVE-2017-3272&lt;/li&gt;
&lt;li&gt;CVE-2017-3289&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;反序列化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反序列化&#34;&gt;#&lt;/a&gt; 反序列化&lt;/h1&gt;
&lt;h2 id=&#34;简介-10&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-10&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;序列化就是把对象转换成字节流，便于保存在内存、文件、数据库中；反序列化即逆过程，由字节流还原成对象。一般用于远程调用、通过网络将对象传输至远程服务器、存储对象到数据库或本地等待重用等场景中。Java 中的  &lt;code&gt;ObjectOutputStream&lt;/code&gt;  类的  &lt;code&gt;writeObject()&lt;/code&gt;  方法可以实现序列化，类  &lt;code&gt;ObjectInputStream&lt;/code&gt;  类的  &lt;code&gt;readObject()&lt;/code&gt;  方法用于反序列化。如果要实现类的反序列化，则是对其实现  &lt;code&gt;Serializable&lt;/code&gt;  接口。&lt;/p&gt;
&lt;p&gt;当远程服务接受不可信的数据并进行反序列化且当前环境中存在可利用的类时，就认为存在反序列化漏洞。&lt;/p&gt;
&lt;h3 id=&#34;序列数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列数据结构&#34;&gt;#&lt;/a&gt; 序列数据结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0xaced&lt;/code&gt;  魔术头 / STREAM_MAGIC&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0x0005&lt;/code&gt;  版本号 / STREAM_VERSION / 参考 java.io.ObjectStreamConstants&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0x73&lt;/code&gt;  对象类型标识&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0x72&lt;/code&gt;  类描述符标识&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;序列化流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#序列化流程&#34;&gt;#&lt;/a&gt; 序列化流程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ObjectOutputStream 实例初始化时，将魔术头和版本号写入 bout (BlockDataOutputStream 类型) 中&lt;/li&gt;
&lt;li&gt;调用 ObjectOutputStream.writeObject () 开始写对象数据
&lt;ul&gt;
&lt;li&gt;ObjectStreamClass.lookup () 封装待序列化的类描述 (返回 ObjectStreamClass 类型) ，获取包括类名、自定义 serialVersionUID、可序列化字段 (返回 ObjectStreamField 类型) 和构造方法，以及 writeObject、readObject 方法等&lt;/li&gt;
&lt;li&gt;writeOrdinaryObject () 写入对象数据
&lt;ul&gt;
&lt;li&gt;写入对象类型标识&lt;/li&gt;
&lt;li&gt;writeClassDesc () 进入分支  writeNonProxyDesc () 写入类描述数据
&lt;ul&gt;
&lt;li&gt;写入类描述符标识&lt;/li&gt;
&lt;li&gt;写入类名&lt;/li&gt;
&lt;li&gt;写入 SUID (当 SUID 为空时，会进行计算并赋值)&lt;/li&gt;
&lt;li&gt;计算并写入序列化属性标志位&lt;/li&gt;
&lt;li&gt;写入字段信息数据&lt;/li&gt;
&lt;li&gt;写入 Block Data 结束标识&lt;/li&gt;
&lt;li&gt;写入父类描述数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;writeSerialData () 写入对象的序列化数据
&lt;ul&gt;
&lt;li&gt;若类自定义了 writeObject ()，则调用该方法写对象，否则调用 defaultWriteFields () 写入对象的字段数据 (若是非原始类型，则递归处理子对象)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;53713-反序列化流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53713-反序列化流程&#34;&gt;#&lt;/a&gt; 5.3.7.1.3. 反序列化流程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ObjectInputStream 实例初始化时，读取魔术头和版本号进行校验&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调用 ObjectInputStream.readObject () 开始读对象数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取对象类型标识&lt;/li&gt;
&lt;li&gt;readOrdinaryObject () 读取数据对象
&lt;ul&gt;
&lt;li&gt;readClassDesc () 读取类描述数据
&lt;ul&gt;
&lt;li&gt;读取类描述符标识，进入分支 readNonProxyDesc ()&lt;/li&gt;
&lt;li&gt;读取类名&lt;/li&gt;
&lt;li&gt;读取 SUID&lt;/li&gt;
&lt;li&gt;读取并分解序列化属性标志位&lt;/li&gt;
&lt;li&gt;读取字段信息数据&lt;/li&gt;
&lt;li&gt;resolveClass () 根据类名获取待反序列化的类的 Class 对象，如果获取失败，则抛出 ClassNotFoundException&lt;/li&gt;
&lt;li&gt;skipCustomData () 循环读取字节直到 Block Data 结束标识为止&lt;/li&gt;
&lt;li&gt;读取父类描述数据&lt;/li&gt;
&lt;li&gt;initNonProxy () 中判断对象与本地对象的 SUID 和类名 (不含包名) 是否相同，若不同，则抛出 InvalidClassException&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ObjectStreamClass.newInstance () 获取并调用离对象最近的非 Serializable 的父类的无参构造方法 (若不存在，则返回 null) 创建对象实例&lt;/li&gt;
&lt;li&gt;readSerialData () 读取对象的序列化数据
&lt;ul&gt;
&lt;li&gt;若类自定义了 readObject ()，则调用该方法读对象，否则调用 defaultReadFields () 读取并填充对象的字段数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5372-漏洞利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5372-漏洞利用&#34;&gt;#&lt;/a&gt; 5.3.7.2. 漏洞利用&lt;/h2&gt;
&lt;h3 id=&#34;53721-存在危险的基础库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53721-存在危险的基础库&#34;&gt;#&lt;/a&gt; 5.3.7.2.1. 存在危险的基础库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;com.mchange:c3p0 0.9.5.2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.mchange:mchange-commons-java 0.2.11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commons-beanutils 1.9.2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commons-collections 3.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commons-fileupload 1.3.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commons-io 2.4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;commons-logging 1.2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.apache.commons:commons-collections 4.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.beanshell:bsh 2.0b5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.codehaus.groovy:groovy 2.3.9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.slf4j:slf4j-api 1.7.21&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.springframework:spring-aop 4.1.4.RELEASE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;53722-回显方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53722-回显方式&#34;&gt;#&lt;/a&gt; 5.3.7.2.2. 回显方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通过中间件特性回显&lt;/li&gt;
&lt;li&gt;通过抛出异常回显&lt;/li&gt;
&lt;li&gt;通过 OOB 回显&lt;/li&gt;
&lt;li&gt;通过写静态文件回显&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5373-漏洞修复和防护&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5373-漏洞修复和防护&#34;&gt;#&lt;/a&gt; 5.3.7.3. 漏洞修复和防护&lt;/h2&gt;
&lt;h3 id=&#34;53731-hook-resolveclass&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53731-hook-resolveclass&#34;&gt;#&lt;/a&gt; 5.3.7.3.1. Hook resolveClass&lt;/h3&gt;
&lt;p&gt;在使用  &lt;code&gt;readObject()&lt;/code&gt;  反序列化时会调用  &lt;code&gt;resolveClass&lt;/code&gt;  方法读取反序列化的类名，可以通过 hook 该方法来校验反序列化的类，一个 Demo 如下&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Class&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;resolveClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ObjectStreamClass&lt;/span&gt; desc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassNotFoundException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;desc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SerialObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;InvalidClassException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token string&#34;&gt;&#34;Unauthorized deserialization attempt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                desc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;resolveClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;desc&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以上的 Demo 就只允许序列化  &lt;code&gt;SerialObject&lt;/code&gt;  ，通过这种方式，就可以设置允许序列化的白名单，来防止反序列化漏洞被利用。SerialKiller/Jackson/Weblogic 等都使用了这种方式来防御。&lt;/p&gt;
&lt;h3 id=&#34;53732-validatingobjectinputstream&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53732-validatingobjectinputstream&#34;&gt;#&lt;/a&gt; 5.3.7.3.2. ValidatingObjectInputStream&lt;/h3&gt;
&lt;p&gt;Apache Commons IO Serialization 包中的  &lt;code&gt;ValidatingObjectInputStream&lt;/code&gt;  类提供了  &lt;code&gt;accept&lt;/code&gt;  方法，可以通过该方法来实现反序列化类白 / 黑名单控制，一个 demo 如下&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;deserialize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; buffer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IOException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassNotFoundException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ConfigurationException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;ByteArrayInputStream&lt;/span&gt; bais &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ByteArrayInputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buffer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;ValidatingObjectInputStream&lt;/span&gt; ois &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ValidatingObjectInputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;bais&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    ois&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SerialObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    obj &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ois&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;53733-objectinputfilterjep290&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53733-objectinputfilterjep290&#34;&gt;#&lt;/a&gt; 5.3.7.3.3. ObjectInputFilter(JEP290)&lt;/h3&gt;
&lt;p&gt;Java 9 提供了支持序列化数据过滤的新特性，可以继承  &lt;code&gt;java.io.ObjectInputFilter&lt;/code&gt;  类重写  &lt;code&gt;checkInput&lt;/code&gt;  方法来实现自定义的过滤器，并使用  &lt;code&gt;ObjectInputStream&lt;/code&gt;  对象的  &lt;code&gt;setObjectInputFilter&lt;/code&gt;  设置过滤器来实现反序列化类白 / 黑名单控制。这个机制本身是针对 Java 9 的一个新特性，但是随后官方突然决定向下引进该增强机制，分别对 JDK 6,7,8 进行了支持。这个机制主要描述了如下的机制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供一个限制反序列化类的机制，白名单或者黑名单&lt;/li&gt;
&lt;li&gt;限制反序列化的深度和复杂度&lt;/li&gt;
&lt;li&gt;为 RMI 远程调用对象提供了一个验证类的机制&lt;/li&gt;
&lt;li&gt;定义一个可配置的过滤机制，比如可以通过配置 properties 文件的形式来定义过滤器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;rmi&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rmi&#34;&gt;#&lt;/a&gt; RMI&lt;/h1&gt;
&lt;h2 id=&#34;简介-11&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-11&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;RMI (Remote Method Invocation，远程方法调用) 能够让在客户端 Java 虚拟机上的对象像调用本地对象一样调用服务端 Java 虚拟机中的对象上的方法。其中 RMI 标准实现是 Java RMI，之外还有 Weblogic RMI、Spring RMI 等不同的实现。&lt;/p&gt;
&lt;p&gt;RMI 中比较重要的两个概念是 Stub 和 Skeleton，Stub 和 Skeleton 对同一套接口进行实现，其中 Stub 由 Client 端调用，并不进行真正的实现，而是和 Server 端通信。Skeleton 是 Server 端，监听来自 Stub 的连接，根据 Stub 发送的数据进行真正的操作。&lt;/p&gt;
&lt;h2 id=&#34;调用步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调用步骤&#34;&gt;#&lt;/a&gt; 调用步骤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;客户调用客户端辅助对象 Stub 上的方法&lt;/li&gt;
&lt;li&gt;客户端辅助对象 Stub 打包调用信息 (变量，方法名)，通过网络发送给服务端辅助对象 Skeleton&lt;/li&gt;
&lt;li&gt;服务端辅助对象 Skeleton 将客户端辅助对象发送来的信息解包，找出真正被调用的方法以及该方法所在对象&lt;/li&gt;
&lt;li&gt;调用真正服务对象上的真正方法，并将结果返回给服务端辅助对象 Skeleton&lt;/li&gt;
&lt;li&gt;服务端辅助对象将结果打包，发送给客户端辅助对象 Stub&lt;/li&gt;
&lt;li&gt;客户端辅助对象将返回值解包，返回给调用者&lt;/li&gt;
&lt;li&gt;客户获得返回值&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;样例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#样例&#34;&gt;#&lt;/a&gt; 样例&lt;/h2&gt;
&lt;p&gt;一份代码样例如下 (来自《Enterprise JavaBeans》)：&lt;/p&gt;
&lt;h3 id=&#34;person接口定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#person接口定义&#34;&gt;#&lt;/a&gt; Person 接口定义&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;使用personserver实现person&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用personserver实现person&#34;&gt;#&lt;/a&gt; 使用 PersonServer 实现 Person&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PersonServer&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PersonServer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;使用person_stub实现person&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用person_stub实现person&#34;&gt;#&lt;/a&gt; 使用 Person_Stub 实现 Person&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ObjectInputStream&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person_Stub&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person_Stub&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// connect to skeleton&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        socket &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;computer_name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// pass method name to skeleton&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt; outStream &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        outStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;writeObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        outStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;flush&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ObjectInputStream&lt;/span&gt; inStream &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ObjectInputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; inStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// pass method name to skeleton&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt; outStream &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        outStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;writeObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        outStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;flush&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ObjectInputStream&lt;/span&gt; inStream &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ObjectInputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;inStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;skeleton的实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#skeleton的实现&#34;&gt;#&lt;/a&gt; Skeleton 的实现&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ObjectInputStream&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ServerSocket&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person_Skeleton&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Thread&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PersonServer&lt;/span&gt; myServer&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person_Skeleton&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PersonServer&lt;/span&gt; server&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// get reference of object server&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;myServer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; server&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// new socket at port 9000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;ServerSocket&lt;/span&gt; serverSocket &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ServerSocket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// accept stub&#39;s request&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;Socket&lt;/span&gt; socket &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; serverSocket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// get stub&#39;s request&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token class-name&#34;&gt;ObjectInputStream&lt;/span&gt; inStream &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ObjectInputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getInputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; method &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;inStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// check method name&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// execute object server&#39;s business method&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; myServer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt; outStream &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// return result to stub&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    outStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;writeInt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    outStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;flush&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;method&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// execute object server&#39;s business method&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; myServer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt; outStream &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ObjectOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// return result to stub&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    outStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;writeObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    outStream&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;flush&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; args &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// new object server&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;PersonServer&lt;/span&gt; person &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PersonServer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Richard&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;34&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Person_Skeleton&lt;/span&gt; skel &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person_Skeleton&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        skel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;client实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#client实现&#34;&gt;#&lt;/a&gt; Client 实现&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PersonClient&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;Person&lt;/span&gt; person &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Person_Stub&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; is &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; age &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34; years old&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            t&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;t3协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#t3协议&#34;&gt;#&lt;/a&gt; T3 协议&lt;/h2&gt;
&lt;p&gt;T3 协议是用于在 WebLogic 服务器和其他类型的 Java 程序之间传输信息的协议，是 Weblogic 对 RMI 规范的实现。简单来说，可以把 T3 视为暴露 JDNI 给用户调用的接口。&lt;/p&gt;
&lt;h2 id=&#34;jrmp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jrmp&#34;&gt;#&lt;/a&gt; JRMP&lt;/h2&gt;
&lt;p&gt;Java 远程方法协议 (Java Remote Method Protocol，JRMP) 是特定于 Java 技术的、用于查找和引用远程对象的协议。这是运行在 Java 远程方法调用 (RMI) 之下、TCP/IP 之上的线路层协议。&lt;/p&gt;
&lt;p&gt;JRMP 是一个 Java 特有的、适用于 Java 之间远程调用的基于流的协议，要求客户端和服务器上都使用 Java 对象。&lt;/p&gt;
&lt;h1 id=&#34;jndi&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jndi&#34;&gt;#&lt;/a&gt; JNDI&lt;/h1&gt;
&lt;h2 id=&#34;简介-12&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-12&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;JNDI (Java Naming and Directory Interface，Java 命名和目录接口) 是为 Java 应用程序提供命名和目录访问服务的 API，允许客户端通过名称发现和查找数据、对象，用于提供基于配置的动态调用。这些对象可以存储在不同的命名或目录服务中，例如 RMI、CORBA、LDAP、DNS 等。&lt;/p&gt;
&lt;p&gt;其中 Naming Service 类似于哈希表的 K/V 对，通过名称去获取对应的服务。Directory Service 是一种特殊的 Naming Service，用类似目录的方式来存取服务。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s2.loli.net/2022/11/27/e7VaR9mvNITk6U1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;jndi注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jndi注入&#34;&gt;#&lt;/a&gt; JNDI 注入&lt;/h2&gt;
&lt;p&gt;JNDI 注入是 2016 年由 pentester 在 BlackHat USA 上的  &lt;code&gt;A Journey From JNDI LDAP Manipulation To RCE&lt;/code&gt;  议题提出的。&lt;/p&gt;
&lt;p&gt;其攻击过程如下&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;攻击者将 Payload 绑定到攻击者的命名 / 目录服务中&lt;/li&gt;
&lt;li&gt;攻击者将绝对 URL 注入易受攻击的 JNDI 查找方法&lt;/li&gt;
&lt;li&gt;应用程序执行查找&lt;/li&gt;
&lt;li&gt;应用程序连接到攻击者控制的 JNDI 服务并返回 Payload&lt;/li&gt;
&lt;li&gt;应用程序解码响应并触发有效负载&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;攻击载荷&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#攻击载荷&#34;&gt;#&lt;/a&gt; 攻击载荷&lt;/h2&gt;
&lt;p&gt;JDNI 主要有几种攻击载荷：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CORBA&lt;/li&gt;
&lt;li&gt;IOR&lt;/li&gt;
&lt;li&gt;JNDI Reference&lt;/li&gt;
&lt;li&gt;LDAP&lt;/li&gt;
&lt;li&gt;Remote Location&lt;/li&gt;
&lt;li&gt;Remote Object&lt;/li&gt;
&lt;li&gt;RMI&lt;/li&gt;
&lt;li&gt;Serialized Object&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;rmi-remote-object&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rmi-remote-object&#34;&gt;#&lt;/a&gt; RMI Remote Object&lt;/h3&gt;
&lt;p&gt;攻击者实现一个 RMI 恶意远程对象并绑定到 RMI Registry 上，将编译后的 RMI 远程对象类放在 HTTP/FTP/SMB 等服务器上。其中 Codebase 地址由远程服务器的  &lt;code&gt;java.rmi.server.codebase&lt;/code&gt;  属性设置，供受害者的 RMI 客户端远程加载。&lt;/p&gt;
&lt;p&gt;利用条件如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RMI 客户端的上下文环境允许访问远程 Codebase。&lt;/li&gt;
&lt;li&gt;属性  &lt;code&gt;java.rmi.server.useCodebaseOnly&lt;/code&gt;  的值为 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中 JDK 6u45、7u21 后， &lt;code&gt;java.rmi.server.useCodebaseOnly&lt;/code&gt;  的值默认为 true。&lt;/p&gt;
&lt;h3 id=&#34;rmi-jndi-reference&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rmi-jndi-reference&#34;&gt;#&lt;/a&gt; RMI + JNDI Reference&lt;/h3&gt;
&lt;p&gt;攻击者通过 RMI 服务返回一个 JNDI Naming Reference，受害者解码 Reference 时会去攻击者指定的远程地址加载 Factory 类。这种方式原理上并非使用 RMI Class Loading 机制，因此不受  &lt;code&gt;java.rmi.server.useCodebaseOnly&lt;/code&gt;  系统属性的限制。但是在 JDK 6u132, JDK 7u122, JDK 8u113 后限制了 Naming/Directory 服务中 JNDI Reference 远程加载 Object Factory 类的特性。系统属性  &lt;code&gt;com.sun.jndi.rmi.object.trustURLCodebase&lt;/code&gt;  、  &lt;code&gt;com.sun.jndi.cosnaming.object.trustURLCodebase&lt;/code&gt;  的默认值变为 false，即默认不允许从远程的 Codebase 加载 Reference 工厂类。&lt;/p&gt;
&lt;h3 id=&#34;ldap-jndi-reference&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ldap-jndi-reference&#34;&gt;#&lt;/a&gt; LDAP + JNDI Reference&lt;/h3&gt;
&lt;p&gt;Java 的 LDAP 可以在属性值中存储特定的 Java 对象，且 LDAP 服务的 Reference 远程加载 Factory 类不受  &lt;code&gt;com.sun.jndi.rmi.object.trustURLCodebase&lt;/code&gt;  、 &lt;code&gt;com.sun.jndi.cosnaming.object.trustURLCodebase&lt;/code&gt;  等属性的限制，适用范围更广。&lt;/p&gt;
&lt;h1 id=&#34;jdk-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jdk-2&#34;&gt;#&lt;/a&gt; JDK&lt;/h1&gt;
&lt;h2 id=&#34;jdk-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jdk-8&#34;&gt;#&lt;/a&gt; JDK 8&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sun.net.www.protocol&lt;/code&gt;  不再支持 gopher 协议&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8u251&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8u251&#34;&gt;#&lt;/a&gt; 8u251&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;com.sun.org.apache.bcel.internal.util.ClassLoader 类被删除&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8u191&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8u191&#34;&gt;#&lt;/a&gt; 8u191&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;LDAP 远程 Reference 代码默认不信任，影响 LDAP 远程 Reference 代码攻击方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8u121&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8u121&#34;&gt;#&lt;/a&gt; 8u121&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;RMI 加入了反序列化白名单机制&lt;/li&gt;
&lt;li&gt;RMI 远程 Reference 代码默认不信任，影响 RMI 远程 Reference 代码攻击方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;8u113&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8u113&#34;&gt;#&lt;/a&gt; 8u113&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;com.sun.jndi.rmi.object.trustURLCodebase&lt;/code&gt;  默认为 false&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.sun.jndi.cosnaming.object.trustURLCodebase&lt;/code&gt;  默认为 false&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jdk-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jdk-7&#34;&gt;#&lt;/a&gt; JDK 7&lt;/h2&gt;
&lt;h3 id=&#34;7u201&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7u201&#34;&gt;#&lt;/a&gt; 7u201&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;LDAP 远程 Reference 代码默认不信任，影响 LDAP 远程 Reference 代码攻击方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7u122&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7u122&#34;&gt;#&lt;/a&gt; 7u122&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;com.sun.jndi.rmi.object.trustURLCodebase&lt;/code&gt;  默认为 false&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.sun.jndi.cosnaming.object.trustURLCodebase&lt;/code&gt;  默认为 false&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;7u40&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7u40&#34;&gt;#&lt;/a&gt; 7u40&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;java.io.File&lt;/code&gt;  类中添加了  &lt;code&gt;isInvalid&lt;/code&gt;  方法，检测文件名中是否包含空字节&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jdk-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jdk-6&#34;&gt;#&lt;/a&gt; JDK 6&lt;/h2&gt;
&lt;h3 id=&#34;6u211&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6u211&#34;&gt;#&lt;/a&gt; 6u211&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;LDAP 远程 Reference 代码默认不信任，影响 LDAP 远程 Reference 代码攻击方式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6u141&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6u141&#34;&gt;#&lt;/a&gt; 6u141&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;com.sun.jndi.rmi.object.trustURLCodebase&lt;/code&gt;  默认为 false&lt;/li&gt;
&lt;li&gt;&lt;code&gt;com.sun.jndi.cosnaming.object.trustURLCodebase&lt;/code&gt;  默认为 false&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6u45&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6u45&#34;&gt;#&lt;/a&gt; 6u45&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;java.rmi.server.useCodebaseOnly 默认为 true，禁用自动加载远程类文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;常见sink&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见sink&#34;&gt;#&lt;/a&gt; 常见 Sink&lt;/h1&gt;
&lt;h2 id=&#34;命令执行注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#命令执行注入&#34;&gt;#&lt;/a&gt; 命令执行 / 注入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;java.lang.Runtime.getRuntime().exec()&lt;/li&gt;
&lt;li&gt;java.lang.ProcessBuilder&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xxe&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xxe&#34;&gt;#&lt;/a&gt; XXE&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;java.net.bull.javamelody.PayloadNameRequestWrapper&lt;/li&gt;
&lt;li&gt;javax.xml.bind.Unmarshaller&lt;/li&gt;
&lt;li&gt;javax.xml.parsers.DocumentBuilderFactory&lt;/li&gt;
&lt;li&gt;javax.xml.parsers.SAXParser&lt;/li&gt;
&lt;li&gt;javax.xml.stream.XMLStreamReader&lt;/li&gt;
&lt;li&gt;javax.xml.transform.sax.SAXSource&lt;/li&gt;
&lt;li&gt;javax.xml.transform.sax.SAXTransformerFactory&lt;/li&gt;
&lt;li&gt;javax.xml.transform.TransformerFactory&lt;/li&gt;
&lt;li&gt;javax.xml.validation.SchemaFactory&lt;/li&gt;
&lt;li&gt;javax.xml.validation.Validator&lt;/li&gt;
&lt;li&gt;javax.xml.xpath.XpathExpression&lt;/li&gt;
&lt;li&gt;org.apache.commons.digester3.Digester&lt;/li&gt;
&lt;li&gt;org.apache.ofbiz.base.util.UtilXml&lt;/li&gt;
&lt;li&gt;org.dom4j.io.SAXReader&lt;/li&gt;
&lt;li&gt;org.jdom.input.SAXBuilder&lt;/li&gt;
&lt;li&gt;org.jdom2.input.SAXBuilder&lt;/li&gt;
&lt;li&gt;org.xml.sax.helpers.XMLReaderFactory&lt;/li&gt;
&lt;li&gt;org.xml.sax.XMLReader&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ssrf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssrf&#34;&gt;#&lt;/a&gt; SSRF&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HttpClient.execute&lt;/li&gt;
&lt;li&gt;HttpClients.execute&lt;/li&gt;
&lt;li&gt;HttpURLConnection.getInputStream&lt;/li&gt;
&lt;li&gt;ImageIO.read&lt;/li&gt;
&lt;li&gt;OkHttpClient.newCall.execute&lt;/li&gt;
&lt;li&gt;Request.Get.execute&lt;/li&gt;
&lt;li&gt;Request.Post.execute&lt;/li&gt;
&lt;li&gt;URL.openStream&lt;/li&gt;
&lt;li&gt;URLConnection.getInputStream&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;反序列化-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反序列化-2&#34;&gt;#&lt;/a&gt; 反序列化&lt;/h2&gt;
&lt;h3 id=&#34;相关sink函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关sink函数&#34;&gt;#&lt;/a&gt; 相关 Sink 函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JSON.parseObject&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ObjectInputStream.readObject&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ObjectInputStream.readUnshared&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ObjectMapper.readValue&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;XMLDecoder.readObject&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;XStream.fromXML&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Yaml.load&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;magic-call&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#magic-call&#34;&gt;#&lt;/a&gt; Magic Call&lt;/h3&gt;
&lt;p&gt;以下的魔术方法都会在反序列化过程中被自动的调用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;readObject&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readExternal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readResolve&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readObjectNoData&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;validateObject&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;finalize&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主流json库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主流json库&#34;&gt;#&lt;/a&gt; 主流 JSON 库&lt;/h3&gt;
&lt;p&gt;主流的 JSON 库有 Gson、Jackson、Fastjson 等，因为 JSON 常在反序列化中使用，所以相关库都有较大的影响。&lt;/p&gt;
&lt;p&gt;其中 Gson 默认只能反序列化基本类型，如果是复杂类型，需要程序员实现反序列化机制，相对比较安全。&lt;/p&gt;
&lt;p&gt;Jackson 除非指明 @jsonAutoDetect，Jackson 不会反序列化非 public 属性。在防御时，可以不使用 enableDefaultTyping 方法。相关 CVE 有 CVE-2017-7525、CVE-2017-15095。&lt;/p&gt;
&lt;p&gt;FastJson 是阿里巴巴的开源 JSON 解析库，支持将 Java Bean 序列化为 JSON 字符串，也支持从 JSON 字符串反序列化到 Java Bean，相关 CVE 有 CVE-2017-18349 等。&lt;/p&gt;
&lt;p&gt;FastJson 常见的 Sink 点有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JSON.toJSONString&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JSON.parseObject&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;JSON.parse&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webshell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webshell&#34;&gt;#&lt;/a&gt; WebShell&lt;/h1&gt;
&lt;h2 id=&#34;bcel字节码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bcel字节码&#34;&gt;#&lt;/a&gt; BCEL 字节码&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; bcelCode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;...&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;valueOf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassLoader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;loadClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;bcelCode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getConstructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;cmd&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBytes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;自定义类加载器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义类加载器&#34;&gt;#&lt;/a&gt; 自定义类加载器&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOutputStream&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassLoader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Class&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;loadClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassNotFoundException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;shell&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;findClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;loadClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Class&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;findClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassNotFoundException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; bytes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Base64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getDecoder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;...&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;PermissionCollection&lt;/span&gt; pc &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Permissions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            pc&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AllPermission&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;ProtectionDomain&lt;/span&gt; protectionDomain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ProtectionDomain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CodeSource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Certificate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pc&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;defineClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; bytes&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; bytes&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; protectionDomain&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Exception&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;findClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;loadClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;shell&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getConstructor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newInstance&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getParameter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;cmd&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBytes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;执行命令变式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行命令变式&#34;&gt;#&lt;/a&gt; 执行命令变式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;java.lang.ProcessBuilder#start&lt;/li&gt;
&lt;li&gt;java.lang.Runtime#exec&lt;/li&gt;
&lt;li&gt;TemplatesImpl&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基于反射&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基于反射&#34;&gt;#&lt;/a&gt; 基于反射&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;class.forName&lt;/li&gt;
&lt;li&gt;MethodAccessor.invoke&lt;/li&gt;
&lt;li&gt;Method.invoke&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他shell变式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他shell变式&#34;&gt;#&lt;/a&gt; 其他 Shell 变式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;java.beans.Expression&lt;/li&gt;
&lt;li&gt;java.lang.ClassLoader&lt;/li&gt;
&lt;li&gt;java.net.URLClassLoader&lt;/li&gt;
&lt;li&gt;jdk.nashorn.internal.runtime.ScriptLoader&lt;/li&gt;
&lt;li&gt;ObjectInputStream.resolveClass&lt;/li&gt;
&lt;li&gt;ScriptEngine.eval&lt;/li&gt;
&lt;li&gt;ScriptEngineManager&lt;/li&gt;
&lt;li&gt;ToolProvider.getSystemJavaCompiler&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tomcat-容器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tomcat-容器&#34;&gt;#&lt;/a&gt; Tomcat 容器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Servlet&lt;/li&gt;
&lt;li&gt;Filter&lt;/li&gt;
&lt;li&gt;Listener&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;h2 id=&#34;官方文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#官方文档&#34;&gt;#&lt;/a&gt; 官方文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbW1vbnMuYXBhY2hlLm9yZy9wcm9wZXIvY29tbW9ucy1vZ25sLw==&#34;&gt;ognl&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzkvc2VjdXJpdHkvdG9jLmh0bQ==&#34;&gt;Java SE Security Guide&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzcvZG9jcy90ZWNobm90ZXMvZ3VpZGVzL3JtaS9yZWxub3Rlcy5odG1s&#34;&gt;Java RMI Release Notes for JDK 6&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3JhY2xlLmNvbS90ZWNobmV0d29yay9qYXZhL2phdmFzZS83dTIxLXJlbG5vdGVzLTE5MzI4NzMuaHRtbA==&#34;&gt;Java Release Notes for JDK 7&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;机制说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#机制说明&#34;&gt;#&lt;/a&gt; 机制说明&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vY3p3YmlnL3AvMTExMjcyMjIuaHRtbA==&#34;&gt;深入理解 Java 类加载&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;反序列化-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反序列化-3&#34;&gt;#&lt;/a&gt; 反序列化&lt;/h2&gt;
&lt;h3 id=&#34;标准&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标准&#34;&gt;#&lt;/a&gt; 标准&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbGVudGJhbGFuY2V5aC9hcnRpY2xlL2RldGFpbHMvODE4Mzg0OQ==&#34;&gt;Java 序列化【草案一】&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vZW4vamF2YS9qYXZhc2UvMTQvZG9jcy9zcGVjcy9zZXJpYWxpemF0aW9uL2luZGV4Lmh0bWw=&#34;&gt;Java 14 Object Serialization Specification&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;利用与技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用与技巧&#34;&gt;#&lt;/a&gt; 利用与技巧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvZnJvaG9mZjEvYXBwc2VjY2FsaS0yMDE1LW1hcnNoYWxsaW5nLXBpY2tsZXM=&#34;&gt;Marshalling Pickles how deserializing objects can ruin your day&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mcm9ob2ZmLmdpdGh1Yi5pby9hcHBzZWNjYWxpLW1hcnNoYWxsaW5nLXBpY2tsZXMv&#34;&gt;AppSecCali 2015: Marshalling Pickles&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3dvdXRlci5jb2VrYWVydHMuYmUvMjAxNS9hbm5vdGF0aW9uaW52b2NhdGlvbmhhbmRsZXI=&#34;&gt;More serialization hacks with AnnotationInvocationHandler&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3B3bnRlc3Rlci9KUkU4dTIwX1JDRV9HYWRnZXQ=&#34;&gt;Pure JRE 8 RCE Deserialization gadget&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NsaWdodGx5cmFuZG9tYnJva2VudGhvdWdodHMuYmxvZ3Nwb3QuY29tLzIwMTAvMDgvYnJlYWtpbmctZGVmZW5zaXZlLXNlcmlhbGl6YXRpb24uaHRtbA==&#34;&gt;Breaking Defensive Serialization&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3Mvbk5UdzNITW5rWDYzZDl5YmR4M1VTUQ==&#34;&gt;Java 反序列化漏洞从入门到深入&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNoYWl0aW4uY24vMjAxNS0xMS0xMV9qYXZhX3Vuc2VyaWFsaXplX3JjZS8=&#34;&gt;Java 反序列化漏洞通用利用分析&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5mcmVlYnVmLmNvbS92dWxzLzE3NjY3Mi5odG1s&#34;&gt;JRE8u20 反序列化漏洞分析&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMzg0Nw==&#34;&gt;浅析 Java 序列化和反序列化&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWN1cml0eS50ZW5jZW50LmNvbS9pbmRleC5waHAvYmxvZy9tc2cvOTc=&#34;&gt;Commons Collections Java 反序列化漏洞深入分析&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pLmJsYWNraGF0LmNvbS9ldS0xOS9XZWRuZXNkYXkvZXUtMTktQW4tRmFyLVNpZGVzLU9mLUphdmEtUmVtb3RlLVByb3RvY29scy5wZGY=&#34;&gt;FAR SIDES OF JAVA REMOTE PROTOCOLS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvM2JKNjY4R1ZiMzluVDBORFZELTNJQQ==&#34;&gt;JDK8u20 反序列化漏洞新型 PoC 思路及具体实现&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Jsb2cub3JhbmdlLnR3LzIwMTgvMDMvcHduLWN0Zi1wbGF0Zm9ybS13aXRoLWphdmEtanJtcC1nYWRnZXQuaHRtbA==&#34;&gt;Pwn a CTF Platform with Java JRMP Gadget&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ub3NlYy5vcmcvaG9tZS9kZXRhaWwvNDg0Ni5odG1s&#34;&gt;漫谈 JEP 290&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;框架-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#框架-2&#34;&gt;#&lt;/a&gt; 框架&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzE2OTc3MC5odG1s&#34;&gt;WebLogic 反序列化漏洞漫谈&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jZXJ0LjM2MC5jbi9yZXBvcnQvZGV0YWlsP2lkPWM4ZWVkNGIzNmZlOGIxOWM1ODVhMTgxN2I1ZjEwYjll&#34;&gt;从 WebLogic 看反序列化漏洞的利用与防御&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NoZW5ncWkxNTgvZmFzdGpzb24tcmVtb3RlLWNvZGUtZXhlY3V0ZS1wb2MvYmxvYi9tYXN0ZXIvSmF2YV9KU09OJUU1JThGJThEJUU1JUJBJThGJUU1JTg4JTk3JUU1JThDJTk2JUU0JUI5JThCJUU2JUFFJTg3XyVFNyU5QyU4QiVFOSU5QiVBQSVFNSVBRSU4OSVFNSU4NSVBOCVFNSVCQyU4MCVFNSU4RiU5MSVFOCU4MCU4NSVFNSVCMyVCMCVFNCVCQyU5QS5wZGY=&#34;&gt;JSON 反序列化之殇&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3Mval9neDlDX3hMMUx5cm51RkZQRnNmZw==&#34;&gt;Shiro 组件漏洞与攻击链分析&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaW5mb3EuY29tL2FydGljbGVzL2FwYWNoZS1zaGlyby8=&#34;&gt;Application Security With Apache Shiro&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NDE3Njk1Ng==&#34;&gt;Shiro 安全框架【快速入门】&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xMzY3NzAy&#34;&gt;Shiro 实战 (四) - 过滤器机制&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;沙箱-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#沙箱-2&#34;&gt;#&lt;/a&gt; 沙箱&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3BocmFjay5vcmcvcGFwZXJzL2VzY2FwaW5nX3RoZV9qYXZhX3NhbmRib3guaHRtbA==&#34;&gt;Java Sandbox Escape&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;框架-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#框架-3&#34;&gt;#&lt;/a&gt; 框架&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9zdHJ1dHM=&#34;&gt;Struts&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9zdHJ1dHMtZXhhbXBsZXM=&#34;&gt;Struts Examples&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2VjbGlwc2UvamV0dHkucHJvamVjdA==&#34;&gt;Eclipse Jetty&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0xhbmRHcmV5L1NwcmluZ0Jvb3RWdWxFeHBsb2l0&#34;&gt;SpringBootVulExploit&lt;/span&gt; SpringBoot 相关漏洞学习资料，利用方法和技巧合集，黑盒安全评估 checklist&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;框架利用技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#框架利用技巧&#34;&gt;#&lt;/a&gt; 框架利用技巧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYW5kZ3JleS5tZS9ibG9nLzIyLw==&#34;&gt;Spring Boot Fat Jar 写文件漏洞到稳定 RCE 的探索&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rmi-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rmi-2&#34;&gt;#&lt;/a&gt; RMI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veWdqMDkzMC9wLzY1NDI4MTEuaHRtbA==&#34;&gt;Java RMI 与 RPC 的区别&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3JlaWxseS5jb20vbGlicmFyeS92aWV3L2xlYXJuaW5nLWphdmEvMTU2NTkyNzE4NC9jaDExczA0Lmh0bWw=&#34;&gt;Remote Method Invocation (RMI)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYXBlci5zZWVidWcub3JnLzEwOTE=&#34;&gt;Java 中 RMI、JNDI、LADP、JRMP、JMX、JMS 那些事儿&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RvY3Mub3JhY2xlLmNvbS9jZC9FMTEwMzVfMDEvd2xzMTAwL2NsaWVudC90My5odG1s&#34;&gt;Oracle: Developing T3 Clients&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jndi-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jndi-2&#34;&gt;#&lt;/a&gt; JNDI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlL3R1dG9yaWFsL2puZGkvb3ZlcnZpZXcvaW5kZXguaHRtbA==&#34;&gt;Overview of JNDI&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYXBlci5zZWVidWcub3JnLzQxNy8=&#34;&gt;关于 JNDI 注入&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvdXMtMTYvbWF0ZXJpYWxzL3VzLTE2LU11bm96LUEtSm91cm5leS1Gcm9tLUpOREktTERBUC1NYW5pcHVsYXRpb24tVG8tUkNFLnBkZg==&#34;&gt;A Journey From JNDI LDAP Manipulation To RCE&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vY29sdW1uLzIwNzQzOS5odG1s&#34;&gt;如何绕过高版本 JDK 的限制进行 JNDI 注入&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;webshell-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webshell-2&#34;&gt;#&lt;/a&gt; WebShell&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzc5OA==&#34;&gt;各种姿势 jsp webshell&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他漏洞&#34;&gt;#&lt;/a&gt; 其他漏洞&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWJzZWMucmVhZHRoZWRvY3MuaW8vemgvbGF0ZXN0L2xhbmd1YWdlL2phdmEvYmxvZy5zcG9vY2suY29tLzIwMTgvMTAvMjMvamF2YS14eGUvaW5kZXguaHRtbA==&#34;&gt;JAVA 常见的 XXE 漏洞写法和防御&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Java" />
        <category term="语言" />
        <category term="反序列化" />
        <category term="混淆" />
        <category term="沙箱" />
        <category term="类" />
        <category term="JDK" />
        <updated>2022-11-27T08:50:11.000Z</updated>
    </entry>
</feed>
