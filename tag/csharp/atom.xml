<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mobius-0.github.io</id>
    <title>Khala • Posts by &#34;csharp&#34; tag</title>
    <link href="https://mobius-0.github.io" />
    <updated>2022-11-28T02:51:11.000Z</updated>
    <category term="Hexo" />
    <category term="shoya" />
    <category term="网站" />
    <category term="网络安全" />
    <category term="工具" />
    <category term="虚拟机" />
    <category term="安全" />
    <category term="星际争霸2" />
    <category term="平衡" />
    <category term="杂谈" />
    <category term="小说" />
    <category term="江南" />
    <category term="龙族" />
    <category term="动画" />
    <category term="法律法规" />
    <category term="XSS" />
    <category term="漏洞" />
    <category term="渗透测试" />
    <category term="靶场" />
    <category term="pikachu" />
    <category term="标准" />
    <category term="OCI" />
    <category term="CRI" />
    <category term="HTTP" />
    <category term="计算机网络" />
    <category term="IPSec" />
    <category term="VPN" />
    <category term="SSL" />
    <category term="TLS" />
    <category term="WiFi" />
    <category term="邮件" />
    <category term="网络协议" />
    <category term="Linux" />
    <category term="渗透" />
    <category term="信息收集" />
    <category term="痕迹清理" />
    <category term="Windows" />
    <category term="内网" />
    <category term="后门" />
    <category term="免杀" />
    <category term="代理" />
    <category term="Shell" />
    <category term="远程连接" />
    <category term="入侵检测" />
    <category term="IDS" />
    <category term="IPS" />
    <category term="防御加固" />
    <category term="管理策略" />
    <category term="分工" />
    <category term="职能" />
    <category term="情报" />
    <category term="运营" />
    <category term="应急响应" />
    <category term="流程" />
    <category term="攻击溯源" />
    <category term="分析模型" />
    <category term="网络攻防" />
    <category term="蜜罐" />
    <category term="隐藏" />
    <category term="诱导" />
    <category term="防御纵深" />
    <category term="访问控制" />
    <category term="过滤" />
    <category term="框架" />
    <category term="风险" />
    <category term="控制" />
    <category term="CSRF" />
    <category term="服务器" />
    <category term="SQL注入" />
    <category term="SSRF" />
    <category term="Cache" />
    <category term="XXE" />
    <category term="XML" />
    <category term="Xpath" />
    <category term="注入" />
    <category term="函数" />
    <category term="绕过" />
    <category term="遍历" />
    <category term="包含" />
    <category term="文件" />
    <category term="目录" />
    <category term="读取" />
    <category term="上传" />
    <category term="中间件" />
    <category term="IIS" />
    <category term="Apache" />
    <category term="Nginx" />
    <category term="域名" />
    <category term="DNS" />
    <category term="WEB" />
    <category term="虚拟化" />
    <category term="Docker" />
    <category term="镜像" />
    <category term="逻辑" />
    <category term="策略配置" />
    <category term="ASP" />
    <category term="CSharp" />
    <category term="Golang" />
    <category term="Java" />
    <category term="语言" />
    <category term="反序列化" />
    <category term="混淆" />
    <category term="沙箱" />
    <category term="类" />
    <category term="JDK" />
    <category term="开发过程" />
    <category term="JavaScript" />
    <category term="PHP" />
    <category term="PowerShell" />
    <category term="Python" />
    <category term="Ruby" />
    <category term="端口" />
    <category term="社会工程学" />
    <category term="搜索" />
    <entry>
        <id>https://mobius-0.github.io/security/WebNote/Languages%20and%20Frameworks/CSharp/</id>
        <title>C#</title>
        <link rel="alternate" href="https://mobius-0.github.io/security/WebNote/Languages%20and%20Frameworks/CSharp/"/>
        <content type="html">&lt;h1 id=&#34;利用技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用技巧&#34;&gt;#&lt;/a&gt; 利用技巧&lt;/h1&gt;
&lt;h2 id=&#34;pinvoke&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pinvoke&#34;&gt;#&lt;/a&gt; P/Invoke&lt;/h2&gt;
&lt;p&gt;Platform Invoke (P/Invoke) 提供了 C# 访问 DLL 中数据结构、回调、函数的能力。基本的使用方式如官方 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvZG90bmV0L3N0YW5kYXJkL25hdGl2ZS1pbnRlcm9wL3BpbnZva2U=&#34;&gt;Platform Invoke&lt;/span&gt; 文档中所示。利用 P/Invoke 的能力，C# 程序可以较为容易的调用标准的 Windows API。&lt;/p&gt;
&lt;figure class=&#34;highlight cs&#34;&gt;&lt;figcaption data-lang=&#34;C#&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;System&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Runtime&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;InteropServices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Program&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// Import user32.dll (containing the function we need) and define&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// the method corresponding to the native function.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token attribute&#34;&gt;&lt;span class=&#34;token class-name&#34;&gt;DllImport&lt;/span&gt;&lt;span class=&#34;token attribute-arguments&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user32.dll&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; CharSet &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; CharSet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Unicode&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; SetLastError &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extern&lt;/span&gt; &lt;span class=&#34;token return-type class-name&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;MessageBox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;IntPtr&lt;/span&gt; hWnd&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;string&lt;/span&gt;&lt;/span&gt; lpText&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;string&lt;/span&gt;&lt;/span&gt; lpCaption&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;uint&lt;/span&gt;&lt;/span&gt; uType&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token return-type class-name&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Invoke the function as a regular managed method.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;MessageBox&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;IntPtr&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Zero&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Command-line message box&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Attention!&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;P/Invoke 的缺点在于引用了的 API 调用会最后出现在可执行文件的 IAT 中，使得一些敏感的行为容易被防护软件所注意。同时一些敏感的 API 可能是被防护软件所监控的，通过这种方式进行的 API 调用也容易被防护软件拦截。&lt;/p&gt;
&lt;h2 id=&#34;dinvoke&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dinvoke&#34;&gt;#&lt;/a&gt; D/Invoke&lt;/h2&gt;
&lt;p&gt;在 P/Invoke 的基础上，有研究人员提出了基于 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvZG90bmV0L2NzaGFycC9wcm9ncmFtbWluZy1ndWlkZS9kZWxlZ2F0ZXMv&#34;&gt;Delegates&lt;/span&gt; 机制的 D/Invoke，通过更隐蔽的方式来调用所需的 API。&lt;/p&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;h2 id=&#34;net&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#net&#34;&gt;#&lt;/a&gt; .Net&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvZG90bmV0L2Z1bmRhbWVudGFscy8=&#34;&gt;.NET documentation&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;利用技巧-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用技巧-2&#34;&gt;#&lt;/a&gt; 利用技巧&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGV3b3Zlci5naXRodWIuaW8vRHluYW1pYy1JbnZva2Uv&#34;&gt;Emulating Covert Operations - Dynamic Invocation (Avoiding PInvoke &amp;amp; API Hooks)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="CSharp" />
        <updated>2022-11-28T02:51:11.000Z</updated>
    </entry>
</feed>
