<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Khala • Posts by &#34;上传&#34; tag</title>
        <link>https://mobius-0.github.io</link>
        <description>GLHF</description>
        <language>zh-CN</language>
        <pubDate>Sat, 26 Nov 2022 20:58:44 +0800</pubDate>
        <lastBuildDate>Sat, 26 Nov 2022 20:58:44 +0800</lastBuildDate>
        <category>Hexo</category>
        <category>shoya</category>
        <category>网站</category>
        <category>网络安全</category>
        <category>工具</category>
        <category>虚拟机</category>
        <category>安全</category>
        <category>星际争霸2</category>
        <category>平衡</category>
        <category>杂谈</category>
        <category>小说</category>
        <category>江南</category>
        <category>龙族</category>
        <category>动画</category>
        <category>法律法规</category>
        <category>XSS</category>
        <category>漏洞</category>
        <category>渗透测试</category>
        <category>靶场</category>
        <category>pikachu</category>
        <category>虚拟化</category>
        <category>Docker</category>
        <category>镜像</category>
        <category>标准</category>
        <category>OCI</category>
        <category>CRI</category>
        <category>域名</category>
        <category>DNS</category>
        <category>WEB</category>
        <category>HTTP</category>
        <category>计算机网络</category>
        <category>IPSec</category>
        <category>VPN</category>
        <category>SSL</category>
        <category>TLS</category>
        <category>WiFi</category>
        <category>邮件</category>
        <category>网络协议</category>
        <category>入侵检测</category>
        <category>IDS</category>
        <category>IPS</category>
        <category>防御加固</category>
        <category>管理策略</category>
        <category>分工</category>
        <category>职能</category>
        <category>情报</category>
        <category>运营</category>
        <category>开发过程</category>
        <category>应急响应</category>
        <category>流程</category>
        <category>Linux</category>
        <category>Windows</category>
        <category>攻击溯源</category>
        <category>分析模型</category>
        <category>网络攻防</category>
        <category>蜜罐</category>
        <category>隐藏</category>
        <category>诱导</category>
        <category>防御纵深</category>
        <category>访问控制</category>
        <category>过滤</category>
        <category>框架</category>
        <category>风险</category>
        <category>控制</category>
        <category>渗透</category>
        <category>信息收集</category>
        <category>痕迹清理</category>
        <category>内网</category>
        <category>后门</category>
        <category>免杀</category>
        <category>代理</category>
        <category>Shell</category>
        <category>远程连接</category>
        <category>ASP</category>
        <category>CSharp</category>
        <category>Golang</category>
        <category>Java</category>
        <category>语言</category>
        <category>反序列化</category>
        <category>混淆</category>
        <category>沙箱</category>
        <category>类</category>
        <category>JDK</category>
        <category>JavaScript</category>
        <category>PHP</category>
        <category>PowerShell</category>
        <category>Python</category>
        <category>Ruby</category>
        <category>CSRF</category>
        <category>服务器</category>
        <category>SQL注入</category>
        <category>SSRF</category>
        <category>Cache</category>
        <category>XXE</category>
        <category>XML</category>
        <category>Xpath</category>
        <category>注入</category>
        <category>函数</category>
        <category>绕过</category>
        <category>遍历</category>
        <category>包含</category>
        <category>文件</category>
        <category>目录</category>
        <category>读取</category>
        <category>上传</category>
        <category>中间件</category>
        <category>IIS</category>
        <category>Apache</category>
        <category>Nginx</category>
        <category>逻辑</category>
        <category>策略配置</category>
        <category>端口</category>
        <category>社会工程学</category>
        <category>搜索</category>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/uploadfile/</guid>
            <title>文件上传</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/uploadfile/</link>
            <category>目录</category>
            <category>上传</category>
            <pubDate>Sat, 26 Nov 2022 20:58:44 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;文件类型检测绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件类型检测绕过&#34;&gt;#&lt;/a&gt; 文件类型检测绕过&lt;/h1&gt;
&lt;h2 id=&#34;更改请求绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更改请求绕过&#34;&gt;#&lt;/a&gt; 更改请求绕过&lt;/h2&gt;
&lt;p&gt;有的站点仅仅在前端检测了文件类型，这种类型的检测可以直接修改网络请求绕过。 同样的，有的站点在后端仅检查了 HTTP Header 中的信息，比如  &lt;code&gt;Content-Type&lt;/code&gt;  等，这种检查同样可以通过修改网络请求绕过。&lt;/p&gt;
&lt;h2 id=&#34;magic检测绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#magic检测绕过&#34;&gt;#&lt;/a&gt; Magic 检测绕过&lt;/h2&gt;
&lt;p&gt;有的站点使用文件头来检测文件类型，这种检查可以在 Shell 前加入对应的字节以绕过检查。几种常见的文件类型的头字节如下表所示&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;十六进制值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;JPG&lt;/td&gt;
&lt;td&gt;FF D8 FF E0 00 10 4A 46 49 46&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GIF&lt;/td&gt;
&lt;td&gt;47 49 46 38 39 61&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PNG&lt;/td&gt;
&lt;td&gt;89 50 4E 47&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIF&lt;/td&gt;
&lt;td&gt;49 49 2A 00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BMP&lt;/td&gt;
&lt;td&gt;42 4D&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;后缀绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后缀绕过&#34;&gt;#&lt;/a&gt; 后缀绕过&lt;/h2&gt;
&lt;p&gt;部分服务仅根据后缀、上传时的信息或 Magic Header 来判断文件类型，此时可以绕过。&lt;/p&gt;
&lt;p&gt;php 由于历史原因，部分解释器可能支持符合正则  &lt;code&gt;/ph(p[2-7]?|t(ml)?)/&lt;/code&gt;  的后缀，如  &lt;code&gt;php&lt;/code&gt;  /  &lt;code&gt;php5&lt;/code&gt;  /  &lt;code&gt;pht&lt;/code&gt;  /  &lt;code&gt;phtml&lt;/code&gt;  /  &lt;code&gt;shtml&lt;/code&gt;  /  &lt;code&gt;pwml&lt;/code&gt;  /  &lt;code&gt;phtm&lt;/code&gt;  等 可在禁止上传 php 文件时测试该类型。&lt;/p&gt;
&lt;p&gt;jsp 引擎则可能会解析  &lt;code&gt;jspx&lt;/code&gt;  /  &lt;code&gt;jspf&lt;/code&gt;  /  &lt;code&gt;jspa&lt;/code&gt;  /  &lt;code&gt;jsw&lt;/code&gt;  /  &lt;code&gt;jsv&lt;/code&gt;  /  &lt;code&gt;jtml&lt;/code&gt;  等后缀，asp 支持  &lt;code&gt;asa&lt;/code&gt;  /  &lt;code&gt;asax&lt;/code&gt;  /  &lt;code&gt;cer&lt;/code&gt;  /  &lt;code&gt;cdx&lt;/code&gt;  /  &lt;code&gt;aspx&lt;/code&gt;  /  &lt;code&gt;ascx&lt;/code&gt;  /  &lt;code&gt;ashx&lt;/code&gt;  /  &lt;code&gt;asmx&lt;/code&gt;  /  &lt;code&gt;asp&amp;#123;80-90&amp;#125;&lt;/code&gt;  等后缀。&lt;/p&gt;
&lt;p&gt;除了这些绕过，其他的后缀同样可能带来问题，如  &lt;code&gt;vbs&lt;/code&gt;  /  &lt;code&gt;asis&lt;/code&gt;  /  &lt;code&gt;sh&lt;/code&gt;  /  &lt;code&gt;reg&lt;/code&gt;  /  &lt;code&gt;cgi&lt;/code&gt;  /  &lt;code&gt;exe&lt;/code&gt;  /  &lt;code&gt;dll&lt;/code&gt;  /  &lt;code&gt;com&lt;/code&gt;  /  &lt;code&gt;bat&lt;/code&gt;  /  &lt;code&gt;pl&lt;/code&gt;  /  &lt;code&gt;cfc&lt;/code&gt;  /  &lt;code&gt;cfm&lt;/code&gt;  /  &lt;code&gt;ini&lt;/code&gt;  等。&lt;/p&gt;
&lt;h2 id=&#34;系统命名绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#系统命名绕过&#34;&gt;#&lt;/a&gt; 系统命名绕过&lt;/h2&gt;
&lt;p&gt;在 Windows 系统中，上传  &lt;code&gt;index.php.&lt;/code&gt;  会重命名为  &lt;code&gt;.&lt;/code&gt;  ，可以绕过后缀检查。 也可尝试  &lt;code&gt;index.php%20&lt;/code&gt;  ，  &lt;code&gt;index.php:1.jpg&lt;/code&gt;   &lt;code&gt;index.php::$DATA&lt;/code&gt;  等。 在 Linux 系统中，可以尝试上传名为  &lt;code&gt;index.php/.&lt;/code&gt;  或  &lt;code&gt;./aa/../index.php/.&lt;/code&gt;  的文件&lt;/p&gt;
&lt;h2 id=&#34;userini&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#userini&#34;&gt;#&lt;/a&gt; .user.ini&lt;/h2&gt;
&lt;p&gt;在 php 执行的过程中，除了主  &lt;code&gt;php.ini&lt;/code&gt;  之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER [&#39;DOCUMENT_ROOT&#39;] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。  &lt;code&gt;.user.ini&lt;/code&gt;  中可以定义除了 PHP_INI_SYSTEM 以外的模式的选项，故可以使用  &lt;code&gt;.user.ini&lt;/code&gt;  加上非 php 后缀的文件构造一个 shell，比如  &lt;code&gt;auto_prepend_file=01.gif&lt;/code&gt;  。&lt;/p&gt;
&lt;h2 id=&#34;waf绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#waf绕过&#34;&gt;#&lt;/a&gt; WAF 绕过&lt;/h2&gt;
&lt;p&gt;有的 waf 在编写过程中考虑到性能原因，只处理一部分数据，这时可以通过加入大量垃圾数据来绕过其处理函数。&lt;/p&gt;
&lt;p&gt;另外，Waf 和 Web 系统对  &lt;code&gt;boundary&lt;/code&gt;  的处理不一致，可以使用错误的  &lt;code&gt;boundary&lt;/code&gt;  来完成绕过。&lt;/p&gt;
&lt;h2 id=&#34;竞争上传绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#竞争上传绕过&#34;&gt;#&lt;/a&gt; 竞争上传绕过&lt;/h2&gt;
&lt;p&gt;有的服务器采用了先保存，再删除不合法文件的方式，在这种服务器中，可以反复上传一个会生成 Web Shell 的文件并尝试访问，多次之后即可获得 Shell。&lt;/p&gt;
&lt;h1 id=&#34;攻击技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#攻击技巧&#34;&gt;#&lt;/a&gt; 攻击技巧&lt;/h1&gt;
&lt;h2 id=&#34;apache重写getshell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apache重写getshell&#34;&gt;#&lt;/a&gt; Apache 重写 GetShell&lt;/h2&gt;
&lt;p&gt;Apache 可根据是否允许重定向考虑上传.htaccess&lt;/p&gt;
&lt;p&gt;内容为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AddType application/x-httpd-php .png
php_flag engine 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就可以用 png 或者其他后缀的文件做 php 脚本了&lt;/p&gt;
&lt;h2 id=&#34;软链接任意读文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软链接任意读文件&#34;&gt;#&lt;/a&gt; 软链接任意读文件&lt;/h2&gt;
&lt;p&gt;上传的压缩包文件会被解压的文件时，可以考虑上传含符号链接的文件 若服务器没有做好防护，可实现任意文件读取的效果&lt;/p&gt;
&lt;h1 id=&#34;防护技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防护技巧&#34;&gt;#&lt;/a&gt; 防护技巧&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;使用白名单限制上传文件的类型&lt;/li&gt;
&lt;li&gt;使用更严格的文件类型检查方式&lt;/li&gt;
&lt;li&gt;限制 Web Server 对上传文件夹的解析&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzE4ODQ2NC5odG1s&#34;&gt;构造优质上传漏洞 Fuzz 字典&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
