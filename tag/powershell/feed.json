{
    "version": "https://jsonfeed.org/version/1",
    "title": "Khala • All posts by \"powershell\" tag",
    "description": "GLHF",
    "home_page_url": "https://mobius-0.github.io",
    "items": [
        {
            "id": "https://mobius-0.github.io/security/WebNote/Languages%20and%20Frameworks/PowerShell/",
            "url": "https://mobius-0.github.io/security/WebNote/Languages%20and%20Frameworks/PowerShell/",
            "title": "PowerShell",
            "date_published": "2022-11-28T02:40:11.000Z",
            "content_html": "<h1 id=\"执行策略\"><a class=\"anchor\" href=\"#执行策略\">#</a> 执行策略</h1>\n<p>PowerShell 提供了 Restricted、AllSigned、RemoteSigned、Unrestricted、Bypass、Undefined 六种类型的执行策略。</p>\n<p>Restricted 策略可以执行单个的命令，但是不能执行脚本，Windows 8、 Windows Server 2012 中默认使用该策略。</p>\n<p>AllSigned 策略允许执行所有具有数字签名的脚本。</p>\n<p>RemoteSigned 当执行从网络上下载的脚本时，需要脚本具有数字签名，否则不会运行这个脚本。如果是在本地创建的脚本则可以直接执行，不要求脚本具有数字签名。</p>\n<p>Unrestricted 这是一种比较宽容的策略，允许运行未签名的脚本。对于从网络上下载的脚本，在运行前会进行安全性提示。</p>\n<p>BypassBypass 执行策略对脚本的执行不设任何的限制，任何脚本都可以执行，并且不会有安全性提示。</p>\n<p>UndefinedUndefined 表示没有设置脚本策略，会继承或使用默认的脚本策略。</p>\n<h1 id=\"混淆\"><a class=\"anchor\" href=\"#混淆\">#</a> 混淆</h1>\n<ul>\n<li><code>-EC</code></li>\n<li><code>-EncodedCommand</code></li>\n<li><code>-EncodedComman</code></li>\n<li><code>-EncodedComma</code></li>\n<li><code>-EncodedComm</code></li>\n</ul>\n<h1 id=\"常见功能\"><a class=\"anchor\" href=\"#常见功能\">#</a> 常见功能</h1>\n<h2 id=\"计划任务\"><a class=\"anchor\" href=\"#计划任务\">#</a> 计划任务</h2>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$Action</span> = <span class=\"token function\">New-ScheduledTaskAction</span> <span class=\"token operator\">-</span>Execute <span class=\"token string\">\"calc.exe\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$Trigger</span> = <span class=\"token function\">New-ScheduledTaskTrigger</span> <span class=\"token operator\">-</span>AtLogon</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$User</span> = <span class=\"token function\">New-ScheduledTaskPrincipal</span> <span class=\"token operator\">-</span>GroupId <span class=\"token string\">\"BUILTIN\\Administrators\"</span> <span class=\"token operator\">-</span>RunLevel Highest</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$Set</span> = <span class=\"token function\">New-ScheduledTaskSettingsSet</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$object</span> = <span class=\"token function\">New-ScheduledTask</span> <span class=\"token operator\">-</span>Action <span class=\"token variable\">$Action</span> <span class=\"token operator\">-</span>Principal <span class=\"token variable\">$User</span> <span class=\"token operator\">-</span>Trigger <span class=\"token variable\">$Trigger</span> <span class=\"token operator\">-</span>Settings <span class=\"token variable\">$Set</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">Register-ScheduledTask</span> AtomicTask <span class=\"token operator\">-</span>InputObject <span class=\"token variable\">$object</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">Unregister-ScheduledTask</span> <span class=\"token operator\">-</span>TaskName <span class=\"token string\">\"AtomicTask\"</span> <span class=\"token operator\">-</span>confirm:<span class=\"token boolean\">$false</span></pre></td></tr></table></figure><h2 id=\"创建链接\"><a class=\"anchor\" href=\"#创建链接\">#</a> 创建链接</h2>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$Shell</span> = <span class=\"token function\">New-Object</span> <span class=\"token operator\">-</span>ComObject <span class=\"token punctuation\">(</span><span class=\"token string\">\"WScript.Shell\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$ShortCut</span> = <span class=\"token variable\">$Shell</span><span class=\"token punctuation\">.</span>CreateShortcut<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token variable\">$env</span>:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\test.lnk\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$ShortCut</span><span class=\"token punctuation\">.</span>TargetPath=<span class=\"token string\">\"cmd.exe\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$ShortCut</span><span class=\"token punctuation\">.</span>WorkingDirectory = <span class=\"token string\">\"C:\\Windows\\System32\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$ShortCut</span><span class=\"token punctuation\">.</span>WindowStyle = 1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$ShortCut</span><span class=\"token punctuation\">.</span>Description = <span class=\"token string\">\"test.\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$ShortCut</span><span class=\"token punctuation\">.</span>Save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"编码\"><a class=\"anchor\" href=\"#编码\">#</a> 编码</h2>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$OriginalCommand</span> = <span class=\"token string\">'#&#123;powershell_command&#125;'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$Bytes</span> = <span class=\"token namespace\">[System.Text.Encoding]</span>::Unicode<span class=\"token punctuation\">.</span>GetBytes<span class=\"token punctuation\">(</span><span class=\"token variable\">$OriginalCommand</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$EncodedCommand</span> =<span class=\"token namespace\">[Convert]</span>::ToBase64String<span class=\"token punctuation\">(</span><span class=\"token variable\">$Bytes</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h2>\n<ul>\n<li>\n<p>别名</p>\n<ul>\n<li><code>alias</code></li>\n</ul>\n</li>\n<li>\n<p>下载文件</p>\n<ul>\n<li><code>Invoke-WebRequest &quot;https://example.com/test.zip&quot; -OutFile &quot;$env:TEMP\\test.zip&quot;</code></li>\n</ul>\n</li>\n<li>\n<p>解压缩</p>\n<ul>\n<li><code>Expand-Archive $env:TEMP\\test.zip $env:TEMP\\test -Force</code></li>\n</ul>\n</li>\n<li>\n<p>进程</p>\n<ul>\n<li>启动进程  <code>Start-Process calc</code></li>\n<li>停止进程  <code>Stop-Process -ID $pid</code></li>\n</ul>\n</li>\n<li>\n<p>文件</p>\n<ul>\n<li>新建文件  <code>New-Item #&#123;file_path&#125; -Force | Out-Null</code></li>\n<li>设置文件内容  <code>Set-Content -Path #&#123;file_path&#125; -Value &quot;#&#123;Content&#125;&quot;</code></li>\n<li>追加文件内容  <code>Add-Content -Path #&#123;file_path&#125; -Value &quot;#&#123;Content&#125;&quot;</code></li>\n<li>复制文件  <code>Copy-Item src dst</code></li>\n<li>删除文件  <code>Remove-Item #&#123;outputfile&#125; -Force -ErrorAction Ignore</code></li>\n<li>子目录  <code>Get-ChildItem #&#123;file_path&#125;</code></li>\n</ul>\n</li>\n<li>\n<p>服务</p>\n<ul>\n<li>获取服务  <code>Get-Service -Name &quot;#&#123;service_name&#125;&quot;</code></li>\n<li>启动服务  <code>Start-Service -Name &quot;#&#123;service_name&#125;&quot;</code></li>\n<li>停止服务  <code>Stop-Service -Name &quot;#&#123;service_name&#125;&quot;</code></li>\n<li>删除服务  <code>Remove-Service -Name &quot;#&#123;service_name&#125;&quot;</code></li>\n</ul>\n</li>\n<li>\n<p>获取 WMI 支持  <code>Get-WmiObject -list</code></p>\n</li>\n</ul>\n<h1 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vemgtY24vcG93ZXJzaGVsbC8=\">PowerShell 官方文档</span></li>\n</ul>\n",
            "tags": [
                "PowerShell"
            ]
        }
    ]
}